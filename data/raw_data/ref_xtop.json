[
    {
        "source": "_xtop_abb",
        "amount": 5,
        "knowledge": [
            {
                "doc_id": "_xtop_abb_0001",
                "summary": "",
                "content": "XTop Abbreviation\n\n在使用XTop工具优化时序的过程中，常见的缩略语如下：\nEDA:\tElectronic Design Automation\nECO:\tEngineering Change Order\nOCV:\tOn Chip Variation\nAOCV:\tAdvanced On Chip Variation\nSOCV:\tStatistical On Chip Variation\nLVF:\tLiberty Variation Format\nSTA:\tStatic Timing Analysis\nPnR, PR:\tPlacement and Route\nMCMM:\tMulti-Corner Multi-Mode\nSDF:\tStandard Delay Format"
            },
            {
                "doc_id": "_xtop_abb_0002",
                "summary": "",
                "content": "时序路径（Timing Path）\n时序路径是电路中信号传播的路径。每条时序路径都有一个起点和一个终点。有效的起点包括模块的输入端口和同步单元的时钟输入端。有效的终点包括模块的输出端口和同步单元的数据输出端。按照时序路径的起点和终点不同，可以将时序路径分为下列四种：\n从模块输入端口到同步单元的数据输入端\n从同步单元的时钟输入端到同步单元的数据输入端\n从同步单元的时钟输入端到模块输出端口\n从模块输入端口到模块输出端口\n\n所谓的“关键路径”（Critical Path），通常是指同步逻辑电路中，组合逻辑时延最大的路径，也就是对设计能起决定性影响的时序路径。"
            },
            {
                "doc_id": "_xtop_abb_0003",
                "summary": "这段资料主要介绍了电路设计中的几个重要概念，包括信号到达时间（Arrival Time）、信号要求时间（Required Time）、时序余量（Slack）、建立时间（Setup Time）、保持时间（Hold Time）、恢复时间（Recovery Time）和去除时间（Removal Time），以及它们在电路设计中的作用和意义。",
                "content": "信号到达时间（Arrival Time）\n简称AT，表示信号从时序路径的起点到达路径上某一点的实际时间，等于信号到达该条路径起点的时间加上信号在该条路径上的逻辑单元及互连线之间传递延时的总和。\n信号要求时间（Required Time）\n简称RT，表示信号从时序路径的起点到达路径上某一点的要求时间。信号要求时间和时钟周期以及器件本身相关。\n时序余量（Slack）\n表示在时序路径上的某一特定点处的信号要求时间与信号到达时间的差。Slack值的正负表示该信号的达到时间是否满足时序约束。正值表示满足，负值表示不满足。时序余量出现负值，意味着电路出现了时序违反，需要进行电路修正。\n建立时间（Setup Time）\n是指同步单元的时钟信号有效沿（上升沿或者下降沿）到来以前，数据保持稳定不变的最小时间。所谓时钟有效沿，指在同步单元的时钟信号发生对应翻转时，同步单元会锁存相应的数据信号。\n保持时间（Hold Time）\n是指同步单元的时钟信号有效沿（上升沿或者下降沿）到来以后，数据保持稳定不变的最小时间。如果不满足hold约束，同样不能保证数据信号被正确的锁存。\n恢复时间（Recovery Time）\n指同步单元的异步控制信号（如清零或置位信号）在下个时钟有效沿来临之前变无效的最小时间。没有预留足够时间来恢复至正常状态，那么就不能保证同步单元的正常工作。\n去除时间（Removal Time）\n指同步单元的异步控制信号（如清零或置位信号）在本个时钟有效沿之后变无效的最小时间。如果保证不了这个去除时间，就不能保证有效地屏蔽这个时钟有效沿。"
            },
            {
                "doc_id": "_xtop_abb_0004",
                "summary": "这段资料主要介绍了数字同步电路中的三种时序修复方法：Setup Timing修复、Hold Timing修复和Max-Transition修复。Setup Timing修复和Hold Timing修复都是为了确保输入信号可以被有效的时钟跳沿所采样，前者通过加快数据通路的信号传递或减慢接收时钟路径的信号传递来满足Setup建立时间的时序约束，后者则通过减慢数据通路的信号传递或加快发射时钟路径的信号传递来满足Hold保持时间的时序约束。而Max-Transition修复则是为了保证信号的质量，要求信号的Transition时间不能过长。",
                "content": "Setup Timing修复\n在数字同步电路中，为了确保输入信号可以被有效的时钟跳沿所采样，必须要求输入的数据信号在有效时钟跳沿来临之前一段时间就准备好。如果同步单元之间的组合逻辑通路较长，延时较大，数据信号在时钟跳沿来临时仍然准备不好，导致电路不能正常工作。因此，Setup时序修复的目标就是尽量加快数据通路的信号传递（或者相应的减慢接收时钟路径的信号传递），从而满足Setup建立时间的时序约束。\nHold Timing修复\n在数字同步电路中，为了确保输入信号可以被有效的时钟跳沿所采样，必须要求输入的数据信号在有效时钟跳沿来临之后仍然保持稳定一段时间。如果同步单元之间的组合逻辑通路较短，延时较小，数据信号在时钟跳沿来临后不久就发生变化，同样会导致电路不能正常工作。因此，Hold时序修复的目标就是尽量减慢数据通路的信号传递（或者相应的加快发射时钟路径的信号传递），从而满足Hold保持时间的时序约束。\nMax-Transition修复\n在数字同步电路中，为了确保输入信号可以被时钟正确采样，对信号翻转波形有特定的要求。通常来讲，Transition时间描述的是信号从20%变化到80%的时间。Max-Transition时序约束就是要求信号的Transition时间不能过长，从而保证信号的质量。线网的驱动单元驱动能力弱，线网的负载过大等因素都会导致Max-Transition时序违反。"
            },
            {
                "doc_id": "_xtop_abb_0005",
                "summary": "这段资料主要介绍了XTop工具的三种优化方法：缓冲器单元插入、单元尺寸变换和长线网分裂，这些方法都是通过改变时序路径上的信号传递时延来实现时序收敛。同时，也提到了这些优化方法可能带来的问题，如占用芯片资源、影响布局和时延计算准确度等。",
                "content": "XTop工具提供下面的优化方法，对时序路径进行ECO调整。通过改变时序路径上的信号传递时延来实现时序收敛。\n缓冲器单元插入\n由于缓冲器单元不改变电路的逻辑功能，因此缓冲器单元插入成为了时序优化中最常用的优化方法。下图给出的例子，在修复Hold保持时间时序违反，可以在时序路径上插入缓冲器单元来增加该时序路径的延迟，从而优化Hold保持时序。虽然可以在时序违反点上直接插入缓冲器单元来修复Hold保持时序，但新插入的单元会占用芯片的资源，会增加芯片面积和芯片功耗。特别是在时序违反点较多的情况下，需要优先选取效率较高的电路节点进行缓冲器单元的插入。\n单元尺寸变换\n在标准单元库中，同一类型的单元通常提供了不同的尺寸大小，它们具有不同的驱动能力（例如，缓冲器单元会包含BUFX1、BUFX2、BUFX4、BUFX8等不同单元）。因此可以利用同类单元之间的尺寸变换，来实现在不改变电路功能的前提下，调整时序路径上的延迟。下图给出的例子，在修复Setup建立时间时序违反，可以将较小尺寸的AND单元变换为较大尺寸的AND单元，增加其驱动能力，从而为了加快时序路径的信号传递，优化Setup建立时序。需要注意的是，由于单元的面积不同，可能会对合理化布局带来影响。例如，在物理布局比较稠密的区域，进行单元由小变大的ECO操作，可能会影响周围其它的单元。如果变化较大，特别是牵扯到物理布线的变化调整，可能最终的结果会和预期有较大偏差。\n长线网分裂\n长线网分裂，是修复Setup建立时间时序违反和Max-Transition时序违反较常用的一种优化方法。线网长度越长，对驱动单元的负载越大，很可能带来时延太慢或transition变差等结果。下图给出的例子，在修复Setup建立时间时序违反，通过在长线网上插入缓冲器单元，将信号进行中继，可以有效地优化Setup建立时序和Transition时序。需要注意的是，在使用长线网分裂的优化过程中，需要尽量保持物理布线与原始布线的一致性。否则物理实现工具最终的结果可能会与期望相差较多，由于不同的物理布线走线拓扑或者额外的通孔带来的误差也会使时延计算准确度大大降低。"
            }
        ]
    },
    {
        "source": "_xtop_application",
        "amount": 14,
        "knowledge": [
            {
                "doc_id": "_xtop_application_0001",
                "summary": "",
                "content": "XTop Applications\n\nQ：用XTop 做design setup，导入design，脚本应该怎么写？\nA：\n···\nxtop> set_parameter max_thread_number {8}\nxtop> create_workspace workspace_name -overwrite\nxtop> link_reference_library -format lef \"tech.lef cell.lef\"\nxtop> define_designs -verilogs \"blockA.v blockB.v top.v\" -defs \"blockA.def blockB.def top.def\"\nxtop> set_site_map {unit core12T}\nxtop> import_designs\nxtop> check_placement_readiness\n···"
            },
            {
                "doc_id": "_xtop_application_0002",
                "summary": "",
                "content": "Q：用XTop 做mcmm，配置多个corner工艺角多个mode模式，脚本应该怎么写？\nA：\n···\nxtop> create_corner corner1\nxtop> create_mode mode1\nxtop> create_scenario -corner {corner1} -mode {mode1} {scenario1}\nxtop> link_timing_library -corner {corner1} -search_type min_max {lib1.lib lib2.lib}\n···"
            },
            {
                "doc_id": "_xtop_application_0003",
                "summary": "",
                "content": "Q：用XTop 读入timing data，脚本应该怎么写？\nA：\n···\nxtop> read_timing_data -data_dir $sta_data\n···"
            },
            {
                "doc_id": "_xtop_application_0004",
                "summary": "",
                "content": "Q：用XTop 检查读入的LEF库及LIB库文件是否正确，脚本应该怎么写？\nA：\n···\nxtop> check_inst_reference_library\nxtop> check_inst_timing_library\n···"
            },
            {
                "doc_id": "_xtop_application_0005",
                "summary": "这段资料是关于如何使用XTop工具进行Timing修复的整体流程脚本的编写，包括了读取时间数据、保存工作空间、检查库的完整性等步骤，以及一系列的Timing修复脚本。",
                "content": "Q：用XTop 修Timing，整体的流程脚本应该怎么写？\nA：\n···\nsource design_setup.tcl\nsource mcmm.tcl\nread_timing_data -data_dir $sta_data\nsave_workspace\n\ncheck_inst_reference_library\ncheck_inst_timing_library\ncheck_library_completeness\n\n#source timing_scripts/setup_fix.tcl\n#source timing_scripts/hold_fix.tcl\n#source timing_scripts/transition_fix.tcl\n#source timing_scripts/trans_setup_hold_fix.tcl\n#source timing_scripts/capacitance_fix.tcl\n#source timing_scripts/leakage_power_opt.tcl\n#source timing_scripts/area_opt.tcl\n#source timing_scripts/si_fix.tcl\n#source timing_scripts/fanout_fix.tcl\n#source timing_scripts/wire_length_fix.tcl\n\n# Interactive ECO\nstart_gui\n···"
            },
            {
                "doc_id": "_xtop_application_0006",
                "summary": "This script is about using XTop to fix hold timing. It sets parameters for buffers, cell classify rules, cell attribute matching types, nominal keywords, and nominal patterns for sizing cells. It also includes commands for reporting before and after optimization, fixing hold violations, and writing design changes in different formats.",
                "content": "Q：用XTop 修hold timing，脚本应该怎么写？\nA：\n···\nset_parameter eco_buffer_list_for_hold {BUF1 DEL1 DEL2}  ;# set buffers used to fix hold violations in eco.\nset_parameter eco_cell_classify_rule {cell_attribute}  ;# set the cell classify rule for gate sizing: cell_attribute, nominal_keywords, and nominal_regex.\nset_parameter eco_cell_match_attribute {footprint} ;# set the size cell attribute matching type: footprint, user_function_class, pin_function.\nset_parameter eco_cell_nominal_swap_keywords {lvt@l30 lvt@l40 svt@l30 svt@l40 hvt@l30 hvt@l40}  ;# set the nominal keywords for swapping cells.\nset_parameter eco_cell_nominal_sizing_pattern {D([0-9]+)BWP}  ;# set the nominal pattern for sizing cells.\n\nset report_dir \"report\"\nredirect -file $report_dir/mem.log {puts \"Before opt the memory is [mem] KB.\"}\nredirect -file $report_dir/pre_opt.rpt {summarize_gba_violations -exclude_path -as_reference -hold}\nredirect -file $report_dir/pre_opt.rpt -append {summarize_gba_violations -exclude_path -as_reference -setup}\n\nfix_hold_gba_violations -size_cell_only -size_rule nominal_keywords -hold_target 0.005 -setup_margin 0.01\nfix_hold_gba_violations -effort high -hold_target 0.005 -setup_margin 0.01\n\nredirect -file $report_dir/mem.log -append {puts \"After opt the memory is [mem] KB.\"}\nredirect -file $report_dir/post_opt.rpt {summarize_eco_actions}\nredirect -file $report_dir/post_opt.rpt -append {summarize_gba_violations -exclude_path -with_reference -with_delta -hold}\nredirect -file $report_dir/post_opt.rpt -append {summarize_gba_violations -exclude_path -with_reference -with_delta -setup}\n\nset eco_output_dir \"eco_output\"\nwrite_design_changes -format ICC -eco_file_prefix xtop_opt_icc -output_dir $eco_output_dir\nwrite_design_changes -format ICC2 -eco_file_prefix xtop_opt_icc2 -output_dir $eco_output_dir\nwrite_design_changes -format INNOVUS -eco_file_prefix xtop_opt_innovus -output_dir $eco_output_dir\nwrite_design_changes -format PT -eco_file_prefix xtop_opt_pt -output_dir $eco_output_dir\n···"
            },
            {
                "doc_id": "_xtop_application_0007",
                "summary": "This is a script for using XTop to fix setup timing. It includes setting parameters for buffers, cell classification rules, cell attribute matching types, nominal keywords for swapping cells, and nominal patterns for sizing cells. It also includes commands for reporting, fixing setup violations, and writing design changes in different formats.",
                "content": "Q：用XTop 修setup timing，脚本应该怎么写？\nA：\n···\nset_parameter eco_buffer_list_for_setup {BUF2 BUF4 BUF6}  ;# set buffers used to fix setup\n\nset_parameter eco_cell_classify_rule {cell_attribute}  ;# set the cell classify rule for gate sizing: cell_attribute, nominal_keywords, and nominal_regex\nset_parameter eco_cell_match_attribute {footprint} ;# set the size cell attribute matching type: footprint, user_function_class, pin_function\nset_parameter eco_cell_nominal_swap_keywords {lvt@l30 lvt@l40 svt@l30 svt@l40 hvt@l30 hvt@l40}  ;# set the nominal keywords for swapping cells.\nset_parameter eco_cell_nominal_sizing_pattern {D([0-9]+)BWP}  ;# set the nominal pattern for sizing cells.\n\nset report_dir \"report\"\nredirect -file $report_dir/mem.log {puts \"Before opt the memory is [mem] KB.\"}\nredirect -file $report_dir/pre_opt.rpt {summarize_gba_violations -exclude_path -as_reference -setup}\n\nfix_setup_gba_violations -methods \"size_cell\" -effort high -setup_target 0.005 -hold_margin 0.0\nfix_setup_gba_violations -methods \"size_cell\" -size_rule nominal_keywords -setup_target 0.005 -hold_margin 0.0\nfix_setup_gba_violations -methods \"insert_buffer\" -setup_target 0.005 -hold_margin 0.0\n\nredirect -file $report_dir/mem.log -append {puts \"After opt the memory is [mem] KB.\"}\nredirect -file $report_dir/post_opt.rpt {summarize_eco_actions}\nredirect -file $report_dir/post_opt.rpt -append {summarize_gba_violations -exclude_path -with_reference -with_delta -setup}\n\nset eco_output_dir \"eco_output\"\nwrite_design_changes -format ICC -eco_file_prefix xtop_opt_icc -output_dir $eco_output_dir\nwrite_design_changes -format ICC2 -eco_file_prefix xtop_opt_icc2 -output_dir $eco_output_dir\nwrite_design_changes -format INNOVUS -eco_file_prefix xtop_opt_innovus -output_dir $eco_output_dir\nwrite_design_changes -format PT -eco_file_prefix xtop_opt_pt -output_dir $eco_output_dir\n···"
            },
            {
                "doc_id": "_xtop_application_0008",
                "summary": "这段资料是关于XTop工具如何定义多层次的SoC Design的说明，介绍了两种方法：一种是使用create_design_definition命令，需要用户知道设计的层次关系并按照“自底向上”的顺序执行命令；另一种是使用define_designs命令，工具会自动分析给定的多个.v/.def文件的层次顺序。",
                "content": "Q：How to 定义多层次的Design？\nA：对于复杂SoC Design，多是层次化hierarchy design。\n目前，XTop支持两种方式import design：\n方法一\n使用 create_design_definition 命令 \n···\n % create_design_definition -name sub2 -verilogs /home/user/date/sub2.v -def /home/user/date/sub2.def\n % create_design_definition -name top  -verilogs /home/user/date/top.v -def /home/user/date/top.def\n % import_designs\n···\n如果客户知道Design的层次关系，推荐使用方法[1]，要求必须遵守“自底向上”的顺序发create_design_definition命令。\n\n方法二\n使用 define_designs 命令 \n···\n   % define_designs -verilogs \"/home/user/date/sub1.v /home/user/date/top.v\" \\\n                    -def \"/home/user/date/sub1.def /home/user/date/top.def\"\n   % import_designs\n···\n如果客户并不清楚层次信息，也可以使用方法[2]，工具会根据给定的多个 .v/.def 文件自动去分析层次顺序。但是，文件一定要给全！\n."
            },
            {
                "doc_id": "_xtop_application_0009",
                "summary": "这段资料是关于如何使用XTop工具和PBA的setup margin来修复高频模块hold的问题的指南。它提供了一个分步骤的解决方案，包括收集所有hold的violation endpoint，执行特定的命令，将所有的dump的path的报告文件copy到指定目录，以及在XTop的timing_fix脚本里增加一个参数等步骤。",
                "content": "Q：How to fix 高频模块hold，使用PBA的setup margin？\nA:\n当已经用XTop fix 完一轮hold timing，剩余timing violation相对较少的时候，可以考虑利用PBA的setup margin来进一步修复。\n（如果一开始就进行的话，会导致从setup里写出的timing report太大）\n\n分步指南\nSTEP.1\n收集所有hold的violation endpoint，这里提供基于pin slack 收集hold violation相关的点，\n可以规避从hold report里抓取所有相关pin时因为nwrost不够而漏pin的情况；\n在所有的hold session里执行下面的语句,最后把每个scenario下的endpoint汇集成一个list，以供STEP.2使用。\necho [get_att [get_pins -hierarchical -filter \" min_fall_slack <0 || min_rise_slack < 0 && is_hierarchical == false && pin_direction == in\"] full_name] >> hold_pin_list \nset all_hold_pin_lists [list pin_a pinb]  ;# 将所有的hold 相关的pin变成一个变量\n\nSTEP.2\n在每个load 好的setup的pt session里，执行下面两条命令：\nsource pt_util2_through_pin.tcl  ;# source attachment files  pt_util2_t...pin.tcl\nreport_pba_paths_for_icexplorer -scenario_name scenario_name -dir ./ -delay_type max  -max_paths 1000000 -nworst 30   \\\n                                                    -setup_threshold 100 -hold_threshold 0 -pba_mode path -pin_list $all_hold_pin_lists\nSTEP.3\n将所有的dump的path的报告文件copy 到之前已经dump的timing path的目录下。\n\nSTEP.4\n在XTop的timing_fix 脚本里，read_timing_data -dir $dir  命令后面增加一个参数。\n这个参数是默认参考setup_path_slack，如果没有path_slack 则参考gba的slack；\nset_parameter eco_setup_margin_source setup_path_slack\n\nSTEP.5\n正常的启动xtop run fix 即可。\n."
            },
            {
                "doc_id": "_xtop_application_0010",
                "summary": "这段资料是关于XTop工具中debug_pins选项的使用说明。debug_pins选项用于调试某些点的具体原因，当访问到这些点时，会自动打出详细的log。同时，debug_pins选项不影响其它参数的设置，可以与only_pins或者violations等选项一起使用。",
                "content": "Q：How to 使用 debug_pins输出详细原因？\nA：\n不管是原因显示限制也好，是设计惯例也好，还是用户理解难度也好，XTop针对一种方法，只记录一个原因。  \n一般情况下，我们记录最后尝试有gain的方案的原因，虽然这个原因可能不是你最喜欢的。  \n从原因统计的角度来看，这样也够了，我们也不希望用户追着某个点去调试原因对不对。\n\n打开debug_level，然后用only_pin是去修，再看看log信息。这种方法都有一个问题，就是原因未必能原样重现，毕竟很多原因是由于前面的动作占用资源，从而影响到当前点的，这时只能打出详细的巨大的log，才可能重现当前点的原因。\n\n分步指南\n如果客户就想知道某个点为什么是这个原因，详细log是绕不过去的，但是太过巨大也是个代价。\n为此，在各个auto opt里命令增加了debug_pins选项，用法和only_pins类似，默认为空，不影响结果。 \n···\n> fix_hold_path/gba_violations  ...  -debug_pins ...\n> fix_setup_path/gba_violations ...  -debug_pins ...\n> fix_transition/capacitance/fanout/si/wire_length_violations ...  -debug_pins ...\n> optimiza_leakage_power/design_area ...  -debug_pins ...\n···\n\n当你想调试某些点的具体原因时，设置debug_pins，在优化时，当访问到这些点时，会自动打出详细的log。\n而其它点则用默认的log_level，不输出信息。当所有的debug_pins都被访问过，则不再做任何优化动作，只更新时序。\n\n注意:\ndebug_pins不影响其它参数的设置，你依然可以使用only_pins或者violations之类的选项。\n如果debug_pins设置的不合适，某个pin一直访问不到，则跟正常优化一样，不会主动终止优化。\n."
            },
            {
                "doc_id": "_xtop_application_0011",
                "summary": "这段资料主要讨论了如何在95%的设计阶段推广XTop的使用。上海site的闫家铭和他的团队在实际项目中遇到了在final阶段无法修复hold violation的问题。他们在95%或pre-final阶段运行xtop fix timing，记录下density高的地方的相关逻辑，然后在下次PR时对这部分逻辑进行padding或控制density。这种方法使得他们在100%的时候基本上都能实现timing clean，从而将XTop的使用周期从原来的100%扩展到了95%+100%。",
                "content": "Q：How to 在95%设计阶段推广XTop的使用？\nA：\n背景\n来自于上海site 闫家铭和他带的王午悦等，在他们实际项目中，曾经遇到95%try run的时候看到hold只剩余了1000条的样子，\n以为没有风险，结果final的时候最后hold violation的点都分布在一个20x20的区域，完全没有地方去fix hold violation，\n最后不得不通过搬cell来腾空修timing\n\n4月份肖永亮team 培训的时候，肖永亮也着重提了把问题提前发现，调整PR策略，为final做准备。\n这个在PL层面还是乐于让下面的人做的，这样可以减少后期不可控因素。\n\n做法\n家铭他这个小组在95%或者pre-final的时候就跑xtop fix timing，把遇到的density 高的地方的相关逻辑记录下来，下次PR的时候这一块逻辑家padding或者控制density。对于跟IP等相关的break setup或者no margin的path，判定需要margin，下次CTS的时候针对性增加设置。\n经过对所有不可修的问题都分析一下，把风险点都解决。\n \n结果\n家铭反馈，经过这样的设置和迭代，他们100%的时候一轮基本上都timing clean了，剩余的很少。\n这个相当于把xtop的使用周期从原来100%为主，拓展到95%+100%，使用周期相当于增加了接近1倍的时间。\n."
            },
            {
                "doc_id": "_xtop_application_0012",
                "summary": "这段资料是关于XTop工具如何识别和处理IO pins的。主要介绍了identify_io_path_pins命令，以及如何通过trace fanin和ports，以及处理data path来识别IO pins。同时，还提到了get_io_path_pins命令的-hold/-setup选项，以及summarize hold/setup的处理方式。",
                "content": "Q：How to 找到design中的IO pins？\nA：\nAE反映XTop用 summarize_gba_violations -io_only或-r2r_only，分类后的数目和PT差得比较大（PT用的report_global_timing）。\n\nXTop里识别IO pins，是通过读sta_data下面的ilm文件得到的，而这个文件是通过脚本从PT里抓出来的，可见这个文件本身就不能和PT自己的report_global_timing一致。\n\n现在的做法\n提供了一个命令，identify_io_path_pins，这个命令执行后，XTop内部自己识别IO pins，取消从ilm文件读入的结果，且不可逆。\n\nIO pins分为几个部分：\n从output ports向前trace所有的fanin，那么这些fanin和ports都是IO pins，对应io->io, reg->io\n对于每个input port，如果有data path通过这个port，那么data path上所有的pin都是IO pins（这里的path把hold/setup分别统计，对应hold path/setup path）；如果没有data path通过这个port，先从port向后trace，跳过非buffer/inverter的cell，直到endpoints，从这些endpoints再向前trace所有fanin。这样反复做一次trace的目的是避开非buffer/inverter path上的endpoints。这部分对应io->reg\n合并上述结果\n\n其它\n给get_io_path_pins增加了-hold/-setup选项，目的是对应上面hold path/setup path，如果完全没有path，这两个选项报出来的结果是一样的。尽量给path，如果没有path，而PT有，这就比它少了很多东西，结果很难一致。\nsummarize hold/setup的时候只看endpoints，理论上只找endpoints就行了，上面找fanin pin是因为summarize transition还需要这些pin。\n."
            },
            {
                "doc_id": "_xtop_application_0013",
                "summary": "这段资料是关于如何使用XTop工具进行bottleneck分析的指南，包括如何查看Data Path和Clock Path的分析结果，以及各个结果参数的含义。同时，还解释了Timing path view中各种颜色的含义和完全冲突路径的定义。",
                "content": "Q：How to 查看bottleneck分析结果及Path View？\nA：\nXTop提供自动的bottleneck analysis。结果表格中的各栏所代表的意思如下。\n\n分步指南\n如果是 Data Path\n\n对于Setup Timing\na) bottleneck = 三级联动incr delay * violated path count.(只计算driver 点)   三级联动incr delay = c1*0.5+net*0.3+c2*0.2\nb) Incr :对应report里Incr，经过该点所有path中Incr最大值。\nc) Trans:对应report里Trans, 经过该点所有path中Trans最大值。\nd) Cap:对应report里Cap, 经过该点所有path中Cap最大值。\ne) Fanout: Net fanout.\nf) SI: 对应report里Delta, 经过该点所有path中Delta最大值。\ng) Path#: 经过该点所有violated path count.\nh) Margin:经过该点GBA hold slack,所有scenario(除了skip scenario)中最小值。优先取得PBA, 若没有取得GBA的。\ni) WNS: 经过该点path 中slack最大值。\nj) TNS:所有violated path slack 之和。\nk) length: Net length(如果是hierarchy,包括sub design net length.\n \n\n对于Hold Timing\na) bottleneck: qMin(slack, setupMargin);   setupMargin = margin/ratio. (margin 同 h); ration : library 中buffer qMax(maxDelay/minDelay)。\nf) SI: 对应report里Delta, 经过该点所有path中Delta最小值。\nh) Margin:经过该点的GBA Setup slack,所有scenario(除了skip scenario)中最小值。其他column值同setup。\n\n\n如果是 Clock Path\na) Setup/hold bottleneck: (|launchPath – capturePath|*|launchPath – capturePath|)/(|launchPath – capturePath| + commonPath).\nb) L-WNS: launch path wns, 若这个点没有Launch path, 则取capture path end point 所在cell out put pin GBA setup/hold slack (除skip scenario中最小值)。\nc) L_TNS: 所有launch path TNS.\nd) C-WNS: capture path wns, 若这个点没有capture path, 则取launch path end point realted D pin GBA setup/hold slack(除skip scenario中最小值)。\ne) C-TNS: capture path TNS.\nf) L_Path#: Launch Path count.\ng) C_Path#: capture path count.\nh) Common#: common path count.\n\nTiming path view 中各种颜色的含义如下：\n红色： incr 值 top 20%的点。\n蓝色： common path 最后一个common point.\n玫红： eco action touch object.\n\nWhat is complete conflict path?\n-- All data path point margin is  < 0.0;(margin: 优先取PBA所有Scenario中最worst, 若没有path, 取GBA中最worst.\n."
            },
            {
                "doc_id": "_xtop_application_0014",
                "summary": "这段资料是关于如何使用XTop工具中的lmutil工具来检查license的使用情况的说明，包括如何检查license server的版本和license的占用情况。",
                "content": "Q：How to 检查license的使用情况？\nA：\nXTop 的 release 包内，自带了 lmutil 工具，可以检查 license 的使用情况。\n脚本具体位置\n以1912版本为例：icexplorer-xtop-2019.12.formal-Linux-x86_64-20200426/license/ 目录下\nlmgrd\nlmutil\n\n运行命令，检查licenser server 版本：\n% .../icexplorer-xtop-2019.12.formal-Linux-x86_64-20200426/license/lmutil lmstat\nlmutil - Copyright (c) 1989-2015 Flexera Software LLC. All Rights Reserved.\nFlexible License Manager status on Thu 7/9/2020 15:22\n\nLicense server status: 59001@horn\n    License file(s) on horn: /work/lmtool/etc/license_horn.dat:\n\n      horn: license server UP (MASTER) v11.13.1\n\nVendor daemon status (on horn):\n\n  empyrean: UP v11.13.1\n\n\n运行命令，检查licenser 的占用情况：\n% .../icexplorer-xtop-2019.12.formal-Linux-x86_64-20200426/license/lmutil lmstat -a -c port@licenseserver\nUsers of XTop:  (Total of xxx licenses issued;  Total of xxx licenses in use)\n  \"XTop\" v2007.08, vendor: empyrean, expiry: 31-dec-2020\n  floating license\n    ganzhsh s102 /dev/pts/114 (v2007.08) (horn/59001 19793), start Fri 6/19 17:16\n...\n."
            }
        ]
    },
    {
        "source": "_xtop_debug",
        "amount": 17,
        "knowledge": [
            {
                "doc_id": "_xtop_debug_0001",
                "summary": "",
                "content": "XTop Debug方法介绍\n\nReference Pin\nXTop在scan扫描的时候，存在 “reference pin” 的概念。\ninsert buffer fix hold的reference pin是input pin，除此以外，其他所有都是output pin。\n一般来说，fail reason会标在reference pin上，但fix transition/si，也会标在net上所有的input pin。"
            },
            {
                "doc_id": "_xtop_debug_0002",
                "summary": "",
                "content": "debug_level\n设置TCL临时变量：> set opt_log_level debug_level，然后正常做fix。\nfix完成后在workspace/sta_log/下会生成brief_xxxx.log 文件。其中包含XTop计算的一些过程，以及converter对不同candidate的选择和处理。\n当对这部分有怀疑时，可以打开debug_level，但注意打开后产生的brief log可能会比较大（参考only_pins/debug_pins）。\nlog分为几个部分，以size cell为例，首先可以找到”start reference pin”的行，例如：\n\n这里显示了对每个candidate的legal情况，gain和fail reason。\n至于详细的计算过程，可以选中某一个candidate向上搜索，例如INVD0EPHVT，找到StartEval这里：\n\n首先是对driver的计算，可以看到orgMaster和newMaster是一样的。接着往下，才是当前需要size的cell：\n\n再往后是Loader Delta，和gain的信息。一般会evaluate多个cell，容易看错。"
            },
            {
                "doc_id": "_xtop_debug_0003",
                "summary": "",
                "content": "Fail Reason的标注原则\nfail reason原则上是try的最后一个candidates上产生的reason，但某些情况也会做调整，不完全精确，但参考分布还是可以的。\nfail reason没有，一般有几种情况：\n1. 不是reference pin，\n2. 因为某些原因不在扫描范围内，比如clock/特殊的点， \n3. run了多轮被清掉了（可以参考俊葳写的FAQ文档： xtop_fail_reason.docx）， \n4. 已经是best solution，但仍然修不好。\n有一个特殊情况是fix path，XTop在修不好的path上的clock pin，会标used_as_clock。"
            },
            {
                "doc_id": "_xtop_debug_0004",
                "summary": "",
                "content": "观察run time/memory\n除了XTop本身的log，另外还有两个log可以查看run time/memory相关的信息：\n一是workspace/sta_log/sta.log，可以看到design信息和build timing graph/read timing data的情况；\n二是workspace/sta_log/brief_xx.log，在开头和末尾，对应fix的信息。利用这些log可以简单判断出大概哪一步存在问题。"
            },
            {
                "doc_id": "_xtop_debug_0005",
                "summary": "",
                "content": "only_pins/pin_list/debug_pins\nonly_pins，是指在full design graph中只修这些pin，一般用来debug某个pin的计算（比如和manual对比，或者因为brief log过大），必须给reference pin。\npin_list，是指修pin expanded graph中的pin，对于hold/setup，expanded graph是所有fanin/fanout，对于transition，是整条net，所以这里即使不给refrence pin也会修下去。\ndebug_pins，是修到给的pin为止，并且在该pin上自动打开debug_level，一般用来debug用only_pins无法复现的问题（因为随着eco动作进行，pin的环境发生了变化），其他和only_pins类似。\n遇到问题最好能定位到某一个点，某一条path，再利用only_pins来缩短debug时间，观察数据和结构的特殊性，便于构造case复现问题。"
            },
            {
                "doc_id": "_xtop_debug_0006",
                "summary": "",
                "content": "Gain Threshold\n对于Hold/Setup fix，XTop提供了一个参数eco_gain_threshold，并且在内部还有一个min buffer delay，以它们的和作为最终的gain threshold。\n具体值可以在brief log中看到："
            },
            {
                "doc_id": "_xtop_debug_0007",
                "summary": "",
                "content": "MIB Pin\nXTop提供了get_mib_pins的命令，可以利用这个命令查看mib pin的顺序。\n某些情况下driver pin和load pin的顺序是不一致的，特别是mib数量较多时，容易引发问题。\n很多时候mib pin上面的slack/margin是不一致的，可能某个mib > 0，某个mib<0，\n遇到奇怪的现象要注意是否为mib，并用report_annotated_data验证。"
            },
            {
                "doc_id": "_xtop_debug_0008",
                "summary": "",
                "content": "Don't Use/Touch\nsize cell时经常发现有些cell无法作为candidate，这时可以检查honor_timing_library_dont_use这个参数，\n同时用report_matched_cells/report_cell_classification这样的命令来确定candidates。\ndon’t touch可参考已有文档。"
            },
            {
                "doc_id": "_xtop_debug_0009",
                "summary": "",
                "content": "size fixed/locked cell\nAuto eco & Manual eco都不允许size locked cell。\nManual eco可以任意size fixed cell；Auto eco size则只能size同样大小的fixed cell。"
            },
            {
                "doc_id": "_xtop_debug_0010",
                "summary": "",
                "content": "opt leakage报no_alternative_cell\n可以参考handbook, fail reason，no_alternative_cell 这一节内容。\n多数原因是library don’t use，需要debug可以用only_pins打开debug_level看brief log。\nopt leakage或者dynamic power，都是参考的reference corner或者reference scenario，可以用report命令查看。"
            },
            {
                "doc_id": "_xtop_debug_0011",
                "summary": "",
                "content": "summarize path\n由于精度问题，脚本dump的timing report里可能存在一些slack = 0.0000的path，\n这类path在summarize时可能不会加在violation count里（只统计<0），就会存在get_path和summarize_path数量不一致的情况，可以忽略。"
            },
            {
                "doc_id": "_xtop_debug_0012",
                "summary": "",
                "content": "read timing data\nread timing data结束后会报告 pin/net annotate ratio：\n如果一个pin在pin timing/global slack中都没有出现，那么它就是not annotated pin，\n如果一条net在某个scenario下wire cap < 2e-6，那么这条net就是not annotated net。\n对于timing report，如果有报错或者path没读进去，可以查看sta_log/rpt开头的log，\n一般是格式无法解析，path pin错误，arc错误等（检查libarc，是否不存在，或者是clear/reset pin）。"
            },
            {
                "doc_id": "_xtop_debug_0013",
                "summary": "",
                "content": "used_as_clock如何决定\nPin上的used_as_clock属性来自sta_data中的xxx_used_as_clocks，只要有一个scenario的used_as_clock为true，那么这个pin就是used_as_clock。"
            },
            {
                "doc_id": "_xtop_debug_0014",
                "summary": "",
                "content": "IO pin的slack\nIO pin实际上是由inPin和outPin组成的，所以在pin_slack文件里可以看到两行，例如：\n\nXTop内部只能存一组slack，所以在初始化时，选择了最worst的slack。\nXTop不会去fix有IO pin的cell，但他们的fanout有可能被fix，在BUslack传递时，传回IO pin的slack不一定是最worst的那组，这样看上去slack的变化就会比较大，不过多数情况下，只是IO pin cell存在这样的情况，对其他点的正常fix不会带来影响。\n另外，要用report_fanin_arc/report_fanout_arc来看IO pin的fanin/fanout，用all_fanin/all_fanout是不准确的。"
            },
            {
                "doc_id": "_xtop_debug_0015",
                "summary": "",
                "content": "为什么report_fail_reason看不到reason，但opt summary可以\n原因是opt summary 上报出的其实是这个pin所在的critical path 上的所有reason。"
            },
            {
                "doc_id": "_xtop_debug_0016",
                "summary": "",
                "content": "Insert buffer对margin的检查点\nfix hold, 在driver点检查setup margin，报BreakSetupOfDriver，在所有的on path loader检查setup margin，报BreakSetup\nfix setup, 在driver点检查hold margin，报BreakHold，在所有的loader检查hold margin，报BreakHold"
            },
            {
                "doc_id": "_xtop_debug_0017",
                "summary": "这段资料主要介绍了XTop工具中的一些常用临时变量设置，包括output_delay_change_script、pocvm_logic_depth_scale_factor、opt_log_level、scan_at_new_pin、allow_split_cross_hier_net、sta_debug_path、next_level_onpath_gain_factor、off_delta_scale_factor、pocv_transition_sigma_number、stat_cell_arc_count、disable_use_dff_alt_pin、strict_power_domain_check、update_pin_ccs_cap和dynamic_power_gain_threshold等，以及它们的具体用途和设置方法。",
                "content": "一些常用的临时变量\nset output_delay_change_script true\n用于在fix命令后在sta_log目录输出anno arc delay change，以便观察delay change是否异常，可以从pt读入进一步验证。 \nset pocvm_logic_depth_scale_factor 0.5\n一般和extra derate配合使用，pocv情况下，在fix hold/leakage时对logic depth做scaling保护setup margin。 \nset opt_log_level debug_level\n 前面已经介绍了。 \nset scan_at_new_pin true\n允许在xtop新插入的buffer前继续插buffer，默认是不允许的。 \nset allow_split_cross_hier_net false\n是否允许对cross physical hierarchy net做split net，当split net出现crash，可以尝试设置false关闭。 \nset sta_debug_path Path_xxx \n设置后会在sta_log目录输出对应path的evaluate信息，用于debug path计算，使用时配合only_pin或者path_list。\nset next_level_onpath_gain_factor 0.4\n仅用于fix setup，设得越大（最大是1），onpath gain越大，发现gain计算较小，又想使用方案，可以结合gain threshold和这个变量。 \nset off_delta_scale_factor 2.0\n一般用于fix setup，在size cell时调整offpath gain，默认1.0，设的越大，offpath gain计算越悲观，相应的方案就会减少，一般用于offpath gain估算不准导致slack变差的情况。 \nset pocv_transition_sigma_number 2\n在transition sigma打开（也就是pin timing文件存在“#timing_enable_slew_variation true”时），默认3*sigma，利用这个变量可以调整为任意sigma。 \nset stat_cell_arc_count 10\n 在info log中打印每个candidate evaluate的具体时间，用于观察存在较大arc数和evaluate时间慢的问题。 \nset disable_use_dff_alt_pin false\n在fix hold/setup size DFF时，默认会scan alternative pin，当计算结果异常时可以尝试关闭。 \nset strict_power_domain_check false\n用于insert buffer，默认为true，设false后，当net所有leaf pin的power domain一致时，无论如何都允许插入buffer，并且也允许把部分level shifter/isolation cell按照普通cell处理。 \nset update_pin_ccs_cap false\n关闭ccs pincap计算，结果异常时可调整。\nset dynamic_power_gain_threshold 0.05\n     调整opt_dynamic_power时的gain percentage，默认0.03，可以过滤一些gain很小的方案。"
            }
        ]
    },
    {
        "source": "_xtop_faq",
        "amount": 52,
        "knowledge": [
            {
                "doc_id": "_xtop_faq_0001",
                "summary": "",
                "content": "XTop FAQ\n\nQ1：create_design_defnition和define_designs的区别在哪？\nA：define_designs会根据给定的Verilog和DEF信息，自动分析design层次顺序关系。但是，文件一定要给全！\nxtop>  define_designs  -verilogs netlistFileNames  -defs defFileNames\nxtop> import_designs\n\ncreate_design_definition，一般是在缺失sub design的DEF的时候，指定module层次关系去创建design。对于层次式设计，如果没有提供DEF文件，用户需要按顺序手工“自底向上”创建design。\n···\nxtop> create_design_definition-name A -verilogs a.v\nxtop> create_design_definition-name B -verilogs b.v\nxtop> import_designs\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0002",
                "summary": "",
                "content": "Q2：如何确定导design的时候，Verilog和DEF被成功导入？\nA：import_designs之后，可以运行report_design_file_status命令进行检查。例如：\n···\nxtop > report_design_file_status\nDesign : cpu\n  Verilog : succeeded\n/.../tutorial/input_files/design_data/cpu.v.gz\n  DEF : succeeded\n/.../tutorial/input_files/design_data/cpu.def.gz\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0003",
                "summary": "",
                "content": "Q3：如何确定design所链接的Timing Library文件是正确的？\nA：link_timing_library之后，可以运行report_timing_library_file_status命令进行检查各个corner下的timing lib文件状态。例如：\n···\nxtop > report_timing_library_file_status\nCorner: fast\n/.../tutorial/input_files/lib/tutoriallvtbc.idb : succeeded\nCorner: slow\n/.../tutorial/input_files/lib/tutoriallvtwc.idb : succeeded\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0004",
                "summary": "",
                "content": "Q4：如何确定design所链接的LEF文件是正确的？\nA：link_reference_library之后，可以运行report_reference_library_file_status命令进行检查作为reference  library的LEF文件状态。例如：\n···\nxtop > report_reference_library_file_status\n/.../tutorial/input_files/lef/tutorial.lef : succeeded\n  Warnings : 1\nWarning(line: 674-734)  : Cumulative Antenna ratios already set with different value.\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0005",
                "summary": "",
                "content": "Q5：如果design的版本与timing的版本不匹配，还可以继续吗？\nA：首先，如果design version与timing version不一致，不建议继续下去。\n   如果后续做了cell sizing的动作，会影响时序的精度。\n   如果后续做了buffer insertion的动作，时序传递可能会受影响，也会影响时序精度。\n."
            },
            {
                "doc_id": "_xtop_faq_0006",
                "summary": "这段资料是关于XTop工具在处理多电压域scenario时，如何保证cell link到合适的库上的问题。提供了三种实现方法：基于rail voltage文件，基于set_lib_per_instance命令进行设置，以及使用set_rail_voltage的命令。",
                "content": "Q6：多电压域的scenario，如何保证cell link到合适的库上？\nA：XTop 默认使用第一套读进去的库link，有几个实现多电压域的link方法：\n1. 基于rail voltage 文件，在dump数据的时候，加上-dumplVoltageData 写出来每个cell 的rail voltage，XTop读入timing data后，会根据rail voltage寻找对应电压的library进行link。方法简单，缺点是dump数据的时间会变长。\n2. 基于set_lib_per_instance 命令进行设置：\n···\nxtop > link_timing_library -corner {…} -search_type min_max  \\\n {./lib/tutwc.idb   … $libs_special_vol $libs_special_vol2}\nxtop > read_timing_data -data_dir ./sta_data \nxtop > set_lib_per_instance  -corner slow_instance   \t$libs_special_vol  \nxtop > set_lib_per_instance  -corner slow_instance2  \t$libs_special_vol2\n···\n3. 使用set_rail_voltage的命令，给每个instance设置rail voltage电压，替代从STA工具中dump的 rail voltage 文件\n\n."
            },
            {
                "doc_id": "_xtop_faq_0007",
                "summary": "这段资料主要介绍了XTop工具如何定义power intent cells。首先，XTop支持使用UPF命令设置某些cell为power intent cell，包括iso, level shifter, power-switch, repeater, retention cell等。其次，XTop也可以从lib中获取iso/level shifter/always-on等信息。最后，如果在timing fix中遇到UPF设置的power inter cell或lib中的iso/level shifter/always-on CELL, always-on/switch PIN，会报相应的fail reason。",
                "content": "Q7：power intent cells如何定义？用UPF命令和在.lib文件都可以定义吗？\nA：首先，XTop支持用UPF命令去设置某些cell为power intent cell（包括iso, level shifter, power-switch, repeater, retention cell等）：\n···\nset_isolation xx -domain PD_X ...\nmap_isolation_cell xx  -domain PD_X  -lib_cells {lib_cell_list} \nset_level_shifter xx -domain PD_X ...\nmap_level_shifter_cell xx -domain PD_X -lib_cells {lib_cell_list} \ncreate_power_switch xx -domain PD_X ...\nmap_power_switch xx -domain PD_X -lib_cells {lib_cell_list} \nset_repeater_cell xx -domain PD_X ...\nmap_repeater_cell xx -domain PD_X -lib_cells {lib_cell_list} \nset_retention xx -domain PD_X ...\nmap_retention_cell xx -domain PD_X -lib_cells {lib_cell_list}  \nset_isolation xx -domain PD_X ... set_level_shifter yy -domain PD_X \nuse_interface_cell {xx yy} -strategy xx -domain PD_X -lib_cells {lib_cell_list}\n···\n\n其次，XTop也从lib里拿iso/level shifter/always-on等信息，而且和从UPF中拿power intent cell信息，不分先后，互不影响。\n\n最后，在timing fix中：\n-\t如果遇到UPF设置的power inter cell，会报fail reason：PowerIntentCell\n-\t如果遇到lib中的iso/level shifter/always-on CELL, always-on/switch PIN，会报fail reason：PowerDomainConflict\n."
            },
            {
                "doc_id": "_xtop_faq_0008",
                "summary": "这段资料是关于如何在XTop工具中处理混合使用多种工艺的tech lef文件的问题。主要介绍了使用link_reference_library操作对不同的tech lef文件进行链接，并使用-tech_group选项进行定义。同时，也介绍了如何在GUI上操作，以及如何使用set_tech_group命令指定设计模块使用哪个tech_group，以及如何使用get_tech_group/report_tech_group命令获取和查看tech group的详细信息。",
                "content": "Q8：当一个design中混合使用多种工艺的tech lef文件，怎么办？\nA：对于一个design中混合使用了多种不同工艺tech lef文件时，需要对不同tech lef文件分别执行link_reference_library操作，且使用-tech_group选项进行分别定义：\n（如果不给-tech_group选项，默认定义的tech group是default）\n···\nxtop > link_reference_library -format lef  -tech_group t40_lef  $t40_lef_files\nxtop > link_reference_library -format lef  -tech_group t65_lef  $t65_lef_files\nxtop > define_designs -verilogs $top_verilog_files -defs $top_def_files\nxtop > set_tech_group -design cpu  t40_lef\nxtop > set_tech_group -design regs t65_lef\nxtop > import_designs\n···\n\n如果在GUI上操作，注意在右上角的下拉框，可以直接修改tech_group的名字。\n\n在link_reference_library和define_design之后，import_designs之前，\n执行set_tech_group命令来指定哪个设计模块，使用哪个tech_group。\n还可以用get_tech_group/report_tech_group命令来获取和查看tech group详细信息。\n···\nxtop > report_tech_group \nregs : default\ncpu  : t40_lef\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0009",
                "summary": "",
                "content": "Q9：如果没有DEF，如何进行logical_only的ECO？\nA：在没有DEF文件的情况下，也可以尝试logical only的timing eco。\n1)\t创建workspace时加上 -logical_only 选项\n···\nxtop > create_workspace work -logical_only \n···\n2)\t导入Design（不读DEF文件）\n这里需要指定verilog文件来建design，不读DEF文件\n···\nxtop> create_design_definition -name A -verilogs a.v\nxtop> create_design_definition -name B -verilogs b.v\n\nxtop> import_designs\n···\n注：logical_only模式下，placement_legalization_mode参数不起作用。\n."
            },
            {
                "doc_id": "_xtop_faq_0010",
                "summary": "这段资料是关于如何在XTop工具中处理不全的DEF文件进行Timing ECO的指南。它提供了两种方法，一种是设定legal mode参数为true，只修复有DEF的模块；另一种是设定legal mode参数为false，修复所有模块但不做布局调整。同时，它还提醒用户注意相关风险。",
                "content": "Q10：如果DEF不全，如何进行Timing ECO？\nA：如果DEF文件不全，例如：top 包含 A B 两个block，其中A有DEF，B没有DEF。\n1)\t正常创建workspace \n···\nxtop > create_workspace work \n···\n2)\t是否做Legal布局？\ni)\t如果想做Legal，建议用define_designs流程导入design：\n（-> B 不会被fix， place not ready）\n···\nxtop > define_designs  -verilogs {top.v a.v b.v}   -defs {top.def a.def}\nxtop > import_designs\nxtop > set_parameter  placement_legalization_mode  true\nxtop > … eco actions …\n···\n \n设定legal mode参数为 true，工具会只修有DEF的模块（top/A）。\nii)  如果不想做Legal，建议用create_design_definition流程导入design： \n（-> top/A/B都会fix，且分别出eco脚本）\n···\nxtop> create_design_definition -name A -verilogs a.v -def  a.def\nxtop> create_design_definition -name B -verilogs b.v\nxtop> create_design_definition -name top -verilogs top.v  -def top.def\nxtop> import_designs\nxtop > set_parameter  placement_legalization_mode  false\nxtop > … eco actions …\n···\n\n设定legal mode参数为false，工具eco之后不做布局调整（有风险，用户需注意）\n-top/A：会把cell放在单元/pin的原始版图位置；\n-B： \t22.06之前会把cell放到 (0,0) 位置，自22.06起 不输出 -loc (0, 0)\n."
            },
            {
                "doc_id": "_xtop_faq_0011",
                "summary": "",
                "content": "Q1：如何给不同的RC corner创建多个scenario？\nA：例如：\n···\ncreate_corner {slow}\ncreate_corner {fast}\ncreate_mode {func}\ncreate_mode {scan}\n\ncreate_scenario -corner {slow} -mode {func} \t{func_slow}\ncreate_scenario -corner {fast} -mode {func} \t{func_fast}\ncreate_scenario -corner {slow} -mode {scan}\t{scan_slow}\ncreate_scenario -corner {fast} -mode {scan} \t{scan_fast}\n\nlink_timing_library  -corner ...\n···\n\n需要注意的是，scenario的名字，必须和STA的timing data的前缀名称保持一致\n."
            },
            {
                "doc_id": "_xtop_faq_0012",
                "summary": "",
                "content": "Q2：.lib和.idb文件有什么区别？\nA：当时序库采用ccs format的时候，通常会文件很大，导入很费时间。\n 这种情况下，建议先把 .lib 文件转换成 .idb 格式 （XTop的私有文件格式），然后再按照.lib的方式导入文件。例如：\n···\n% $XTOP_HOME/bin/lib2idb  -libs “…/lib/*.lib”  -output_dir “.../lib/”   -thread 8\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0013",
                "summary": "这段资料是关于XTop工具从STA工具中获取时序信息的说明，包括了各种不同的timing data文件，如不可触碰对象、接口逻辑对象、引脚转换时序、时序降级、寄生数据、全局slack、si delta延迟、时序报告数据、时钟对象和数据完成标志等。",
                "content": "Q3：XTop需要从STA工具中的哪些时序信息？\nA：为了进行时序分析和优化，需要知道Design在各个scenario条件下的时序信息。\n   用户可以在STA工具中source提供的脚本，以导出相应的各类timing data文件。例如：\n···\n%  ls sta_data\nfunc_fast_data_dont_touch_objects.txt.gz  \t# don’t touch objects\nfunc_fast_data_ilm_objects.txt.gz               \t# interface logic objects\nfunc_fast_data_pin_timing.txt.gz                 \t# pin transition timing\nfunc_fast_data_timing_derates.txt.gz          \t#  timing derate\nfunc_fast_data_total_capacitances.txt.gz    \t# parasitic data\nfunc_fast_data_pin_slack.txt.gz                 \t# global slack\nfunc_fast_data_si_delta.txt.gz                   \t# si delta delay\nfunc_fast_data_timing_rpt.txt.gz                 \t# timing report data\nfunc_fast_data_used_as_clocks.txt.gz       \t# clock objects\nfunc_fast_data_finish                                  \t# dumping data finish flag\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0014",
                "summary": "",
                "content": "Q4：怎么样才能增量的读入timing report？\nA：可以运行read_timing_report命令，指定scenario，读入timing report信息。 例如：\n···\nxtop> read_timing_report -scenario fast_worst  sta_data/cpu_data_timing_rpt.txt\n  scenario: fast_worst\n    timing_rpt ok\n    sta_data/cpu_data_timing_rpt.txt\n···\n\n如果没有指定scenario，默认会是reference scenario.\n."
            },
            {
                "doc_id": "_xtop_faq_0015",
                "summary": "",
                "content": "Q5：为什么XTop在读入timing data之后报告timing clean？\nA：\n1.\t请先检查从STA写出的timing data是否正确。\n有些时候，用户只dump block data in top STA，使用了-only_hier_path的选项。\n（可以检查写出的timing data文件的头部，会标明design和current inst名称：\n****************************************\nDesign   : cpu\n...\nCurrent_instance :\n\n2.\t检查一下从STA写出的timing data是否和netlist匹配。\n工具会打印出运行read_timing_data命令后的反标率。如果小于95%，用户就需要检查一下是否给定netlist与之不匹配。\n···\nxtop> read_timing_data -data_dir ../input_files/sta_data\n...\nSuccess : 100.0% pins and 97.7% nets have annotated data.\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0016",
                "summary": "这段资料是关于XTop工具中“don’t_touch”设置的说明，包括其在cell, net, pin, path和library cell等对象上的应用和效果。同时，还解释了set_module_dont_touch和set_hier_path_dont_touch两个指令的作用。",
                "content": "Q1：don’t_touch设置在cell/pin/net/path上有什么区别？\nA：don’t_touch可以设置在cell, net, pin, path和library cell等对象上。\n\t这里的pin有些特殊，因为它们代表连接关系，并不是design中真实的objects，\n只是用来控制工具在优化过程中的扫描点，基于debug的目的。\n\n\t对于cell/net，如果设定了don’t_touch，就不会在相应的单元/线网上做eco动作。\n\t对于library cell，don’t_touch意味着库中的所有该单元的实例，都don’t_touch了。\n\t对于pin，如果设定了don’t_touch，在时序优化的扫描过程中就会跳过这个点。\n（譬如，后果是不会在它上插buffer的）\n\t对于path，如果设定了don’t_touch，在扫描过程中就会跳过path上的所有pin。\n\n\t另外，需要注意：\n\tset_module_dont_touch $ref_name \t相当于把该ref_name对应的module 内部所有的cell，net和pin都dont touch了；\n\tset_hier_path_dont_touch $hier_path \t相当于把该hier_path下所有的cell，net和pin都dont touch了；\n在hierarchy pin上设dont_touch 无效（它并不是实体，不参与扫描）；\n在hierarchy net上设dont_touch 有效（它对应着top net实体）。\n."
            },
            {
                "doc_id": "_xtop_faq_0017",
                "summary": "这段资料是关于XTop工具在时序优化中如何跳过某些操作的说明，包括跳过I/O路径、子设计、层次路径、起点/终点以及内部/边界路径等操作。同时，提供了相应的指令和参数选项。",
                "content": "Q2：时序优化中如何去skip某些XXX？\n\tSkip I/O Path\n···\nxtop> set_dont_touch [get_io_path_pins] 1\n···\n\tSkip Sub Design\n···\n# only fix sub design\nxtop> set_module_dont_touch  top_module  true \nxtop> set_module_dont_touch  {sub_module1 sub_module2}  false\n# skip sub design\nxtop > set_module_dont_touch  module_xxx\n···\n\tSkip Hier Path\n···\n# only fix hier path\nxtop> set_hier_path_dont_touch  /  true\nxtop> set_hier_path_dont_touch  {hier_path1 hier_path2} false\n# skip hier path\nxtop >  set_hier_path_dont_touch {hier_path1 hier_path2} true\n\tSkip Startpoins/ Endpoints\nxtop > set_dont_touch  [get_paths -end_points  $end_points_list]\nxtop > set_dont_touch  [get_paths -start_points  $start_points_list]\n···\n\tSkip internal/ boundary paths\n···\n# boundary paths\nforeach sub_design $subdesign_list { set_dont_touch [get_paths -across $sub_design] }\n# internal paths\nforeach sub_design $subdesign_list { set_dont_touch [get_paths -within $sub_design] }\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0018",
                "summary": "这段资料是关于如何使用XTop工具中的set_placement_constraint命令来设置legalization的margin, density和congestion的。其中包括了如何设置设计中的最大displacement距离，最大congestion值，以及在指定矩形区域内设定placement density阈值等选项。",
                "content": "Q3：如何设置legalization的margin, density和congestion？\nA：可以运行set_placement_constraint命令。例如：\nxtop> set_placement_constraint -design cpu -max_displacement {150t 0} -max_congestion 0.9\n例如，上述命令设置了eco单元最大displacement距离为 150*track_pitch（这里的track_pitch是第一个水平走线层的routing pitch）。\n对于design中的原有单元，最大displacement距离为0。也就是说legalizer不会去移动design中原有的单元。max congestion设定为0.9，意味着legalizer不会去在routing congestion值大于0.9的区域进行插buffer的eco操作。\n···\nxtop> set_placement_constraint -design B_CORE -max_density 0.6 -density_region {(0, 0, 30, 30)}\n···\n对于B_CORE，上述命令会在指定矩形区域内设定placement density阈值为0.6。\n."
            },
            {
                "doc_id": "_xtop_faq_0019",
                "summary": "",
                "content": "Q4：当design中已经插了filler单元怎么办？\nA：可以使用set_removable_fillers命令，给出filler单元的pattern名称。它们在eco优化过程中可以被删掉（如果是fixed/locked单元不可以）。\n\t例如：\n···\nxtop> set_removable_fillers {FILLX2 FILLX4 DCAPX8 DCAPX12}\nSet 4 cells as removable.\n···\n\t用户可以指定一个空string串，来清除所有的removable fillers设置。\n."
            },
            {
                "doc_id": "_xtop_faq_0020",
                "summary": "这段资料主要解释了XTop工具中的两个命令：set_lib_per_instance和set_specific_lib_cells。set_lib_per_instance命令用于指定某些module实例只能使用特定的library，通常用于多电压域的设计中。而set_specific_lib_cells命令则用于指定某些特定module中只能使用某些特定的library cell。",
                "content": "Q5：“set_lib_per_instance”和“set_specific_lib_cells”什么区别？\nA：set_lib_per_instance命令，指定某些module实例只能用特殊的library（通常发生在多电压域的design中）。这些特殊的library必须已经link到当前的corner。在eco过程中，只会在规定的library中寻求优化方案。例如：\n···\nxtop > set_lib_per_instance  “cpu0”  “custom1.lib”   [-corner  cornerName]\n···\n set_specific_lib_cells命令，指定某些特定module中只能使用某些特殊的library cell。这些特殊的单元通常有特定的pattern名称，在eco过程中只能使用它们。例如：\n···\nxtop > set_specific_lib_cells -design cpu -recursive  SP*\nxtop >  report_specific_lib_cells\n   cpu : 470\n     SPND2D2B\n     ...\n   regs : 240\n     SPND2D2B\n     ...\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0021",
                "summary": "",
                "content": "Q6：为什么无法清除掉某些单元上的don’t_touch属性？\nA：用户运行了下列命令，但是单元的don’t_touch属性依然存在。\n···\nxtop > set_dont_touch [get_cells xxx] 0\nxtop > get_dont_touch_cells\nxxx\n···\n\n默认情况下，XTop会honor 第三方P*T工具的don’t_touch设置。\n如果想修改P*T 数据的don’t_touch属性，需要设定下列参数：\n···\nxtop> set_parameter  honor_annotated_dont_touch false\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0022",
                "summary": "",
                "content": "Q1：GBA/PBA mode下pin的slack到底怎么算？\nA：GBA mode\t如果有timing path存在，会用path的slack；否则，用GBA slack\nPBA mode\t只看timing path上的slack；会以GBA的时序值作为margin\n."
            },
            {
                "doc_id": "_xtop_faq_0023",
                "summary": "",
                "content": "Q2：GBA/PBA mode下pin的margin到底怎么算？\nA：hold margin\t如果有timing path存在，会用path上的；否则，用GBA 的\nsetup margin\t参数 eco_setup_margin_source控制：\n\t\t\t默认取setup_global_slack，\n\t\t\t可设为取setup_path_slack（但最好是fix_path的时候才这么用）\n."
            },
            {
                "doc_id": "_xtop_faq_0024",
                "summary": "这段资料是关于XTop工具在处理多电压域设计时，如何进行buffer插入和split net的操作。其中，根据单元类型（普通单元或特殊单元）和电源域信息，详细规定了何时可以插入buffer，何时不允许插入。同时，提到了tcl变量strict_power_domain_check的设置对插入buffer的影响。",
                "content": "Q3：在插buffer的时候，是如何处理多电压域design情况的？\nA： 首先，XTop会根据lib cell type来判断单元的类型，如果是always on cell, level shifter, switching cell , isolation cell 之类的，单元就是“特殊单元”；否则，单元是“普通单元”。\n\t对于 buffer insertion：（会在load点插buffer）\n1\t当load是普通单元，它的power domain可以插buffer；\n2\t当load是特殊单元\na)\t当netlist线网不是one-on-one 的情况，不允许插；\nb)\t当netlist线网是one-on-one 的情况\ni\t当driver是普通单元，它的power domain可以插buffer；\nii\t当driver是特殊单元，不允许插。\n注：当tcl变量 strict_power_domain_check设置为false，而且读入了power domain相关文件（upf/cpf或者.pd），这种情况下，当driver和load的power domain信息一致，则可以插buffer。\n\n\t对于 split net：\n1\t当driver是普通单元，它的power domain可以插buffer；\n2\t当driver是特殊单元，它的power domain不允许插buffer。需要看load：\na)\t如果所有load都是普通单元，或者都在同样的power domain下，则可以插buffer；\nb)\t否则，不允许插。\n."
            },
            {
                "doc_id": "_xtop_faq_0025",
                "summary": "这段资料是关于XTop工具在进行单元sizing或置换时的规则说明，主要涉及到的参数有eco_cell_classify_rule、eco_cell_match_attribute、eco_cell_nominal_swap_keywords和eco_cell_nominal_sizing_pattern。同时，提供了一个命令report_cell_classification，用于查看单元的分类情况。",
                "content": "Q4：在做单元的sizing或者置换，是根据什么规则来进行的？\nA：XTop会根据eco_cell_classify_rule参数来决定单元如何分类进行sizing eco操作。\n\tcell_attribute\n会根据参数eco_cell_match_attribute看.lib文件中的单元属性定义，内容相同的单元会归为一组：\n\tfoot_print\n\tuser_function_class\n\tpin_function\n\tnominal_keywords\n会根据参数eco_cell_nominal_swap_keywords来决定不同VT的单元会归为一组，例如：\n\n在设定eco_cell_nominal_swap_keyword的时候，可以利用“@”符号进行VT、channel length等多维的关键字替换，例如：“LVT@n30  NVT@n40  HVT@n40\"。\n\tnominal_regex\n会根据参数eco_cell_nominal_sizing_pattern，用正则表达式来提取、匹配单元的驱动能力，从而归为一组，例如 \"AND2X2TH\", \"BUFX24TH\"：\n \n用户可以运行命令：report_cell_classification\n [-by_attribute | -by_swap_keywords | -by_sizing_pattern]\n来查看哪些单元被分为一组，可以相互交换\n."
            },
            {
                "doc_id": "_xtop_faq_0026",
                "summary": "",
                "content": "Q5：Fix transition之后，需要返回APR工具，再进行其它优化吗？\nA：虽然XTop支持fix transition之后，接着修复其它violation。\n但是我们建议fix transition之后，应该返回APR工具，因为split_net操作很可能会造成布线的改变（进而会影响时序）。\n."
            },
            {
                "doc_id": "_xtop_faq_0027",
                "summary": "",
                "content": "Q6：5nm工艺，针对fix hold及leakage优化的setup derate如何设置比较合适？\nA：对于N5先进工艺，为了保护setup 时序和精度，通常设置下面参数来收敛：\n···\nxtop > set_setup_extra_derate -scenario .*024_F2.* 1.14\t#低压corner, 0.55V\nxtop > set pocvm_logic_depth_scale_factor 0.5\t\t\t#POCV 的logic depth\nxtop > set pocv_cell_delay_factor_transition_sigma 1.5\t\t#如果有OCV sigma transitio\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0028",
                "summary": "",
                "content": "Q7：7nm工艺，为什么Sizing修hold会引起setup时序变坏？\nA：有可能是修hold的时候，单元被size down到D1。\n但是D1单元的驱动能力非常弱，引起了严重的SI问题，导致setup变坏。\n\n尤其是先进工艺，或者低电压设计，推荐用户在fix hold的时候禁用D1/D2单元。\n···\nxtop> set_dont_touch  [get_lib_cells*D1BWP*]\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0029",
                "summary": "",
                "content": "Q8：28nm工艺， ECO单元之间存在一个Filler1的间隔，如何避免？\nA：如果design要求不能出现Fill1间隔，XTop中可以用set_placement_constraint命令来避免出现这个问题。\n···\nxtop> set_placement_constraint  -min_filler_width 2\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0030",
                "summary": "",
                "content": "Q9：buffer应该怎么选？\n\tSetup fix\t要尽量选择不同驱动能力的buffers\n···\nxtop> summarize_buffers [get_lib_cell *BUFFD*] >buffer.rpt \n···\n\n在buffer.rpt文件中，按照驱动能力大小排序，在各驱动能力group中挑选一个max delay最小的buffer（尽量不要选D0和D24及以上的单元）\n\n\tHold fix\t要选择不同min delay（max delay尽量小）的buffers\n···\nxtop> summarize_buffers [get_lib_cell  “*BUFFD* *DEL*”] >buffer.rpt \n···\n在buffer.rpt文件中，按照下列标准进行排序：\n1\tmin delay\n2\tmax delay/min delay 的比值\n3\tarea\n4\tleakage power\n."
            },
            {
                "doc_id": "_xtop_faq_0031",
                "summary": "",
                "content": "Q10：split_net之后，应该如何输出eco脚本？\nA：客户使用split_net进行时序优化时，容易出现Eco动作不在同一个hierarchy的情况。这时输出macro命令会出错。为了避免输出 atomic 与 macro 命令的一致性问题。write_design_changes命令提供了-force  选项。\n不加-force，如果写macro命令时遇到cross hier不合法的命令，会报错不写；\n加-force，如果写macro命令时遇到不合法的命令，会把不支持的命令输出为可直接source（不用loadECO）的atomic格式的脚本\n比如ADDINST，这里会输出成addInst，直接混在macro命令里就可以直接source，就不需要生成大量文件了，也可以保证eco的顺序。\n2021.12版本及以后，添加了“-force -reorder”选项，以避免输出脚本中atomic命令和macro命令来回切换，导致运行时间慢的问题。\n."
            },
            {
                "doc_id": "_xtop_faq_0032",
                "summary": "这段资料是关于XTop工具中单元的leakage值获取方式的说明，包括200825版本之前和之后的取值方法，以及在Fix_leakage时的取值来源。同时，还提到了reference corner的选取可能会影响替换cell的数量，举例说明了default reference corner和leakage之间的关系。",
                "content": "Q11：XTop中单元的leakage值是怎么取的？\nA：\n1    200825版本之前，取cell leakage中worst值；\n2    200825版本之后，对定义了primary power pin的lib cell，取related_power_pin为primary power pin的leakage均值；对没有定义primary power pin的lib cell，取该cell所有leakage的均值；\n3    Fix_leakage时，leakage值取自reference corner lib，因此如果leakage trend在不同corner下不一致，reference corner的选取可能导致替换cell的数量不同；\n\n例如：如果default reference corner由于channel 11 leakage> channel 8 leakage，\nkeywords设置为“8P57PDSVT 11P57PDSVT”导致大量no_alternative_cell fail reason；\n切换reference corner，leakage变为channel 8>channel 11，no_alternative_cell fail reason大量减少。\n."
            },
            {
                "doc_id": "_xtop_faq_0033",
                "summary": "",
                "content": "Q1：如何debug未修干净/剩余的violations？\nA：剩余的未修正的violation endpoint可以通过“-with_top_n”选项来报告出来。\n···\nxtop> summarize_path_violations  -with_top_n 100\nxtop> summarize_gba_violations -setup  -with_top_n 10\n···\n\n如果想要查看未修正的原因，可以通过命令：\n···\n# having paths\nxtop>  report_fail_reasons -paths [get_paths -to $endpoint]\n# no path\nxtop>  report_fail_reasons -pins [get_critical_gba_paths -delay_type max -to $endpoint]\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0034",
                "summary": "",
                "content": "Q2：如何打开debug模式，输出更多eco计算过程的log信息？\nA：可以通过命令：\n···\nxtop>  set opt_log_level “debug_level”\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0035",
                "summary": "",
                "content": "Q3：如何在版图中高亮显示fail_to_legalize的violation？\nA：可以通过命令：\n···\nxtop>  highlight_objects  [get_failed_pins -reasons fail_to_legalize]\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0036",
                "summary": "",
                "content": "Q4：如何debug“0 solution committed”因为fail_to_legalize原因？\nA： \n1\t使用check_placement_readiness命令，确认design被正常导入。\n避免缺失 LEF文件， 或 DEF 与tech LEF文件不一致的问题。\n\n2\t检查design中是否存在filler单元，是否没有空地无法插buffer优化。\n如果是，可以使用set_removable_fillers {FILL*} 命令。\n\n3\t使用report_placement_constraint命令看一下：\nmax congestion（通常是0.8-0.9）；\nmax displacement @16nm 通常是 15-20 micros\nmax displacement @12nm 通常是 10-15 micros\nmax displacement @7nm 通常是  10 micros\n\n4\t可能先进工艺会有特殊的规则要求，可以用report_placement_context命令报告一下，反馈结果给研发分析。\n."
            },
            {
                "doc_id": "_xtop_faq_0037",
                "summary": "",
                "content": "Q5：如何用gdb来debug XTop？\nA： \n\tCommand命令模式\ngdb program\ngdb program core\t\t//给core文件\ngdb program pid\t\t//给进程 id\ngdb attach pid\t\t//用 where 查看stack info\n\n\tInteractive交互模式\nrun\t\t\t//运行程序\ncontinue\t\t\t//从断点继续运行\nstep/next\t\t\t//单步执行\nfinish\t\t\t//执行完function\n(backtrace) bt\t\t//显示 stack\nbt N\t\t\t//显示开始的N stacks\nbt -N\t\t\t//显示最后的N stacks\nlist\t\t\t\t//显示source\npwd\t\t\t//显示当前工作路径\n."
            },
            {
                "doc_id": "_xtop_faq_0038",
                "summary": "",
                "content": "Q6：手工删除.lock文件copy workspace会导致crash吗？\nA：在原来的workspace没有退出的情况下，删除了.lock文件，然后copy到其它目录，这会导致XTop crash。因为OA目录下存有一些乱七八糟的文件，不能这样不退出的情况下直接copy。\n\n建议正常退出之后，再copy到别的目录。或者用save as功能另外保存到其它目录。\n."
            },
            {
                "doc_id": "_xtop_faq_0039",
                "summary": "",
                "content": "Q7：为什么出现not_parallel_mib的原因导致无法优化？\nA：\t在进行Top Level的时序优化过程中，有的时候会碰到：fail reason是 “not_parallel_mib” ，导致有一些instance无法修。\nMIB是多次实例化模块的缩写，如果设计中有模块被实例化多次，但是它们的逻辑层次不是平行/对等的，就无法进行时序优化\n \n在上面的例子中，如果M1和M2可以保证相同的流水线结构（绿色），这样的MIB是XTop可以自动处理的。\n但是如果出现 feed through 直穿的结构（红色），或者 feed through 跟其它R2R有关系，相应的点就没法去做优化。\n//如果能保证流水线结构中（从M1进入M2的path的startpoint，不会在1内部相互关联），XTop其实是可以自动去修的。\n自23.03 release，添加了参数控制（default为False；如果enable之后，可以对上述unparallel mib pin进行优化）：\nxtop > set_parameter eco_handle_unparallel_mib_pin true\n."
            },
            {
                "doc_id": "_xtop_faq_0040",
                "summary": "",
                "content": "Q8：“X Error: BadDrawable (invalid Pixmap or Window parameter)” 错误？\nA：在启动XTop之前，在console里出现报错：\n\n应该是在windows下用了旧版的xwindow模拟器导致。\nsetenv QT_X11_NO_MITSHM 1 可以绕过这个问题。\n但是禁用了一些渲染的指令，可能会引起渲染速度变慢，渲染出来的颜色填充效果异常。可以推荐用户直接用vnc，或者让他们换新一点xwindow模拟器。\n."
            },
            {
                "doc_id": "_xtop_faq_0041",
                "summary": "",
                "content": "Q9：带Filler的小模块，import design的时候 crash？\nA：一个block level的模块 import design的时候 crash，（只load verilog 没问题）\n（.v.gz 26M; .def.gz 862M 一个block design，一共1M+ instances）\n从core stack上看，怀疑是没内存，或者没硬盘空间了。\n\n有可能是因为名字总长度超2G所导致，检查def文件中包含了77M个physical only的filler单元，去掉之后就可以了。\n\n有些block density比较小，大量的filler cell有可能会把OA的名字空间撑爆。\n这种情况可以建议客户把filler cell 删了再出DEF。\n."
            },
            {
                "doc_id": "_xtop_faq_0042",
                "summary": "这段资料是关于XTop工具中debug_pins选项的使用说明，该选项可以帮助用户调试某些点的具体原因，当访问到这些点时，会自动打出详细的log，而其它点则用默认的log_level，不输出信息。",
                "content": "Q10：如何使用 debug_pins输出详细原因？\nA：不管是原因显示限制也好，是设计惯例也好，还是用户理解难度也好，XTop针对一种方法，只记录一个原因。  一般情况下，我们记录最后尝试有gain的方案的原因，虽然这个原因可能不是你最喜欢的。  从原因统计的角度来看，这样也够了，我们也不希望用户追着某个点去调试原因对不对。\n\n打开debug_level，然后用only_pin是去修，再看看log信息。这种方法都有一个问题，就是原因未必能原样重现，毕竟很多原因是由于前面的动作占用资源，从而影响到当前点的，这时只能打出详细的巨大的log，才可能重现当前点的原因。\n\n如果客户就想知道某个点为什么是这个原因，详细log是绕不过去的，但是太过巨大也是个代价。为此，在各个auto opt里命令增加了debug_pins选项，用法和only_pins类似，默认为空，不影响结果。\n···\nxtop > fix_hold_path/gba_violations  ...  -debug_pins ...\nxtop > fix_setup_path/gba_violations ...  -debug_pins ...\nxtop > fix_transition/capacitance/fanout/si/wire_length_violations ...  -debug_pins ...\nxtop > optimiza_leakage_power/design_area ...  -debug_pins ..\n···\n\n当你想调试某些点的具体原因时，设置debug_pins，在优化时，当访问到这些点时，会自动打出详细的log。而其它点则用默认的log_level，不输出信息。当所有的debug_pins都被访问过，则不再做任何优化动作，只更新时序。\n."
            },
            {
                "doc_id": "_xtop_faq_0043",
                "summary": "这段资料主要讨论了XTop工具在修复hold timing时可能遇到的问题及其原因，包括setup hold相互阻碍、布局密度过高、网络绕行过大等。同时，也提出了一些可能的解决方案，如调整电压信息、优化网络绕行、更新LEF等。",
                "content": "Q11：有哪些原因会导致XTop fix hold timing效果不佳？\nA：\t一、setup hold 互相卡\n二、placement density 过高\n三、net detour过大，导致对插入buffer的delay估计失真\n\nFix hold之后，导致setup timing飞掉了，可能会因为：\n1.\tFix hold在低压corner下的path上insert了很多的delay cell，导致setup timing飞了。通过report_annnotated_pin进行debug，发现有violation的pin上没有voltage信息，导致对transition和delay评估不准。在dump STA data的时候dump了所有pin的voltage后问题得以解决。\n2.\tFix hold之后，因为net detour的原因，setup timing飞掉了。原因是scan的tree不平，工具在一个区域插了很多buffer和delay cell，导致绕线detour，transition变大很多。\n3.\tFix hold之后，发现和某个memory相关的setup timing飞了。在P*中report对应的timing，发现transition变大很多。同时在XTop和innv*中查看对应的physical view，发现memory的pin location改变了。最终替换到最新的LEF之后，问题得以解决。\n."
            },
            {
                "doc_id": "_xtop_faq_0044",
                "summary": "",
                "content": "Q12：”Error while save design: ... cannot be on a higher data model revision”错误？\nA：\t导成单个的大design，OA有性能问题（XTop是故意用的低版本的data model）\n\n\t如果遇到这种错误，别导成一个大的flatten的design，要分层次导入。\n\t（否则导进去了，后面的操作会很慢）\n\n\t如果导入了DEF文件，还有一种可能是design中有很多名称很长的filler cell，导致单元名称超出了2G的限制。\n."
            },
            {
                "doc_id": "_xtop_faq_0045",
                "summary": "这段资料是关于XTop工具在导入LEF文件时出现崩溃的问题。原因是环境变量中引入了一个名为OA_PLUGIN_PATH的变量。解决方法是清除这个环境变量，之后XTop可以正常运行。",
                "content": "Q13：导LEF文件的时候出现crash，即使是tutorial也会有错，磁盘权限正常\nA：\t生成stack 信息如下：\n       ice2::LinkReferenceLibrary::execute()\n        ice2::JReferenceLib::linkFiles(QStringList const&, QStringList*, QString const&)\n         ice2::JAbstractCellPool::linkFiles(QStringList const&, QStringList const&, QStringList*)\n          ice2::JAbstractCellPool::linkFile(QString const&, QString const&, QString*)\n           ice2::JOaCellPool::loadInOaLib(QString const&, QString const&, QString const&, QString*, QString*)\n            ice2::JLefParser::readFile(QString const&)\n             ice2::JOaExtendedLib::destroy()\n              ice2::JLefLib::~JLefLib()\n               ice2::JOaExtendedLib::~JOaExtendedLib()\n\n原因是：客户的env会引入一个OA_PLUGIN_PATH的变量，虽然在环境变量设置里没有直接设置，但是默认环境配置加载进来后，就把这个变量带进来了！\n\n把这个变量清掉后XTop可以正常运行。\n···\n% unsetenv OA_PLUGIN_PATH\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0046",
                "summary": "这段资料是关于XTop工具中summarize_gba_violations和identify_io_path_pins命令的使用和问题解答。主要讨论了在使用summarize_gba_violations命令时，为何其结果与第三方工具report的差异，以及identify_io_path_pins命令的使用方法和其对IO pins的识别过程。",
                "content": "Q14：为什么summarize结果和第三方工具差的很多，identify_io_path_pins怎么用？\nA：\t如果发现XTop 用summarize_gba_violations -io_only或者-r2r_only，分类报告的数目和第三方工具report差距较大，可能是由于 I/O pin的认定不同所导致。\n\nXTop里识别IO pins，是通过读sta_data/ 目录下的ilm文件得到的，而这个文件是通过脚本从P*第三方工具里抓出来的，这个文件本身就有可能和第三方的report_global_timing命令结果不一致。\n\n\t命令identify_io_path_pins执行后，XTop内部自己识别IO pins，取消从ilm文件读入的结果，且不可逆。会把IO pins分为几个部分：\n\t从output ports向前trace所有的fanin，那么这些fanin和ports都是IO pins，对应io->io, reg->io\n\t对于input port，工具会从input port向后trace fanout，跳过组合逻辑单元，直到FF endpoints。如果遇到组合逻辑单元是非buf/inv的多输入单元 (例如：A1, A2, Y)，还需要从FF1再向前反向trace所有fanin ，如果从A2的fanin向前没找到FF，则从input port到A1到Y到FF1上的点会标记为I/O pins；如果找到 IN—A1—FF1, FF2—A2—FF1，那么从Y到FF1这一段公共部分不会标记I/O pins。 这部分对应io->reg\n\n注：推荐读入timing path来校准结果，工具会把io->io, reg->io, io->reg的I/O pin 起止的timing path上的点都累加标记为I/O pin，这样identify的结果会比较准。\n."
            },
            {
                "doc_id": "_xtop_faq_0047",
                "summary": "",
                "content": "Q1：XTop怎么启动多线程加速？\nA：请设置max_thread_number控制参数（建议设置为scenario的最大值）。例如：\n···\nxtop>  set max_thread_number 8\n···\n\n它指定了采用的多线程的thread数目。当大于1的时候，工具会采用并行的方法去import design，链接timing library，读入timing data/report等。（但是在做时序优化的时候，仍然会是单cpu的模式）\n\nmax_thread_number和scenario的最大值N还会影响timing fix check license的数量：licenses = log2(N)   （leakage优化还会check一个license）\n所以：\t2个scenario的leakage license需要1+1个license；\n8个scenario的leakage 优化需要3+1个license。\n."
            },
            {
                "doc_id": "_xtop_faq_0048",
                "summary": "",
                "content": "Q2：如何获取XTop的帮助信息？\nA：在GUI模式\t直接“F1”按键可以弹出Manual窗口；\n或者在参数配置窗口按下“F2”按键。\n\n在Shell模式\thelp command\t命令获取命令帮助；\n\t\thelp_parameter 命令获取参数帮助。\n."
            },
            {
                "doc_id": "_xtop_faq_0049",
                "summary": "",
                "content": "Q3：如何重定向命令输出到文件？\nA：可以使用redirect命令，例如：\n···\nxtop>  redirect  -file  filename  {cmd} \n···\n\n注意，对于非Tcl命令，不能直接定向命令输出，可以采用下列方式：\n···\nxtop>  redirect  -file  filename  {exec  cmd}\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0050",
                "summary": "",
                "content": "Q4：如何查看License的情况？\nA：XTop 的 release 包内，自带了 lmutil 工具，可以检查 license 的使用情况。\n\n以1912版本为例：icexplorer-xtop-2019.12.formal-Linux-x86_64-20200426/license/ \n目录下包括了下列工具：\n1. lmgrd\n2. lmutil\n\t检查licenser server 版本\n···\n % .../icexplorer-xtop-2019.12.formal-Linux-x86_64-20200426/license/lmutil lmstat\n···\n\t检查licenser 占用情况\n···\n % .../icexplorer-xtop-2019.12.formal-Linux-x86_64-20200426/license/lmutil lmstat -a -c port@licenseserver\n···\n."
            },
            {
                "doc_id": "_xtop_faq_0051",
                "summary": "这段资料主要讲述了XTop工具在处理大规模数据时，由于内存不足可能出现hang住的情况，以及解决方案。解决方案包括联系IT部门进行硬件调整，如设置min_free_kbytes为系统内存的5%，设置sysctl -w vm.swappiness=5以尽可能释放cached的memory到free memory，以及可能的话，给server添加一个SSD硬盘作为swap空间。同时，也解释了这个问题的根本原因在于Linux的内存分配方式。",
                "content": "Q5：工具没内存hang住，而cache memory得不到释放怎么办？\nA：但跑大规模的例子的时候，会出现由于内存不够，工具hang的情况。而用top命令去报告，有很多cache memory得不到释放，导致工具可用的free memory不够。\n···\n% free -m   (可查看当前内存使用情况) \n···\n\n需要联系客户的IT部门，管理员权限，进行下面的硬件调整方案：\n1. 建议 min_free_kbytes设置为系統内存的5％，临时命令为cat 27033600 > /proc/sys/vm/min_free_kbytes，系统重启后恢复原值\n2. 最好设置 sysctl -w vm.swappiness＝5，这个的用途是尽可能让系统把 cached的memory释放到free memory里面去\n3. 如果有可能，可以给server挂一个SSD的硬盘作为swap空间，万一用到swap区域，也会更快地swap\n\n当XTop在读 timing data的时候容易hang住，根本原因在于Linux的内存分为三级，free/cached/swap memory，程序总是使用 free memory，而系统不断的把 cached memory release到free memory;\n\n当free memory设置较少的时候，系统没有按照XTop的实际需求把 cached memory释放到free memory，而是一点点的释放，这样就不足与支撑大量timing data，就看起来hang住了。\n\n缓解这个hang住的方案就是把free memory设的足够大，能够支持大量读入timing data，然后系统度不断的释放cached memory到 free memory，这样虽然不能够跟free memory足够的时候那种全速，但也可以高速的读数据，解决hang住的问题。"
            },
            {
                "doc_id": "_xtop_faq_0052",
                "summary": "",
                "content": "Q6：exec报错“couldn't fork child process: not enough memory”怎么办？\nA：在XTop内部运行set Time [exec date +%Y%m%d]，会报错“couldn't fork child process ： not enough memory”\n\nXTop 里利用exec fork 进程偶尔会报内存不足的情况，有可能跟swap不足有关。\n\n可以用以下命令替代：\n···\nset curtime [clock seconds]\nset Time [clock format $curtime -format {%Y_%m_%d_%H_%M_%S}]\n%Y,%m,%d,%H,%M,%S 分别表示年月日时分秒。\n···\n."
            }
        ]
    },
    {
        "source": "_xtop_intro",
        "amount": 7,
        "knowledge": [
            {
                "doc_id": "_xtop_intro_0001",
                "summary": "",
                "content": "XTop Introduction\n\nQ：华大九天公司是做什么的？在哪个城市？\nA：北京华大九天科技股份有限公司（简称“华大九天”）成立于2009年，一直聚焦于EDA工具的开发、销售及相关服务业务。\n华大九天主要产品包括模拟电路设计全流程EDA工具系统、数字电路设计EDA工具、平板显示电路设计全流程EDA工具系统和晶圆制造EDA工具等EDA软件产品，并围绕相关领域提供包含晶圆制造工程服务在内的各类技术开发服务。\n华大九天总部位于北京，在南京、上海、成都和深圳设有全资子公司。\n公司网页  http://www.empyrean.com.cn\n联系Email: support@empyrean.com.cn\n联系Telephone: +8610-84776888"
            },
            {
                "doc_id": "_xtop_intro_0002",
                "summary": "这段资料主要介绍了XTop工具的功能和应用。XTop是一款针对先进工艺、大规模设计和多工作场景的时序收敛难题提供一站式时序功耗优化解决方案的工具，包括建立时间、保持时间、瞬变时间和漏电功耗优化等。该工具通过创新的层次设计数据并行处理技术、动态时序建图技术和增量布局技术等，提高了时序和功耗优化的效率和质量。",
                "content": "Q：XTop工具是做什么的？主要功能有哪些？\nA：时序优化是保证数字芯片设计功能正确、性能指标满足设计要求的关键流程。为保证数字芯片正常工作并达到预期频率，需要对时钟信号和数据信号到达寄存器的时间是否满足建立时间和保持时间的约束要求进行检查，同时对不满足约束要求的情况进行修复优化。时序优化在芯片设计过程中占据重要地位，是数字芯片设计特别是先进工艺数字设计的重要瓶颈。\n  先进工艺大规模数字电路设计可能包含上亿门级单元和数百个工艺角。时序优化工具首先需要具备超大规模数据处理能力。同时，在优化过程中，任何单元或走线的变化带来的时序影响都需实时更新到整个芯片以及所有工艺角，以避免其他元件或工艺角出现新的时序违例。另外，还要考虑因为单元或走线的物理位置变化是否可能引起版图设计规则的违反。上述优化过程对时序优化工具提出了严苛的性能、容量和物理规则检查能力的要求。\n  ICExplorer-XTop®针对先进工艺、大规模设计和多工作场景的时序收敛难题，提供了一站式时序功耗优化解决方案，包括建立时间（Setup）、保持时间（Hold）、瞬变时间（Transition）和漏电功耗（Leakage power）优化等。该工具通过创新的层次设计数据并行处理技术、动态时序建图技术和增量布局技术等，显著提高了时序和功耗优化的效率和质量。XTop还提供了Post-mask ECO、交互式ECO和Clock ECO等特色解决方案，帮助用户完成关键时序路径的修复，显著提升了时序收敛的效率。"
            },
            {
                "doc_id": "_xtop_intro_0003",
                "summary": "",
                "content": "Q：XTop工具有哪些亮点功能和优势？\n超大容量的时序收敛\n-支持100M+单元 超大规模层次化设计\n-支持100+MCMM 多工作场景同时进行时序优化\n强大的物理布局引擎\n-支持先进工艺复杂物理规则约束\n-有效处理高Density, \n高Congestion的复杂设计\n全面的时序功耗优化方案\n-自动修复Setup, Hold，Max transition等时序及设计约束问题\n-自动优化芯片的漏电功耗、动态功耗及面积\n-Clock ECO以最小代价解决尽可能多的时序问题\n-Post-mask ECO支持Silicon Frozen阶段的时序优化\n灵活的交互式优化\n-交互式ECO解决关键路径的疑难时序问题\n-内置高级时序分析功能帮助快速定位瓶颈点"
            },
            {
                "doc_id": "_xtop_intro_0004",
                "summary": "",
                "content": "Q：XTop支持做哪些时序、功耗优化？\nA：\nSetup/Hold timing 优化\nMax transition/Capacitance/Fanout 优化\nWire length/SI/Glitch 优化\nDesign area/Leakage power/Dynamic power 优化"
            },
            {
                "doc_id": "_xtop_intro_0005",
                "summary": "",
                "content": "Q：XTop支持做哪些交互式ECO操作？\nA：\n-Insert buffer (chain)\n-Size cell\n-Split net\n-Split load\n-Remove buffer\n-Move cell\n-Exchange cell\n-Connect clock tree"
            },
            {
                "doc_id": "_xtop_intro_0006",
                "summary": "",
                "content": "Q：XTop支持什么工艺、多大容量的Design规模？\nA：\n容量方面：\n-能够处理100M+单元规模的数字设计\n-能够同时处理100+应用场景\n-针对Setup/Hold修复提供Turbo/Pro模式提升优化速度，减少内存占用\n\n支持先进工艺方面：\n-支持成熟工艺（90/65/40/28nm），也支持先进工艺（16/10/7/5nm）\n-支持基于LVF时序模型的POCV signoff时序优化\n-能够处理先进工艺下复杂物理规则约束：\n 复杂pin track对齐、pin access估算, VT单元邻接摆放、多种行高混合摆放等"
            },
            {
                "doc_id": "_xtop_intro_0007",
                "summary": "",
                "content": "Q：XTop支持的数据与平台是什么？\nA：\n输入: Verilog, DEF, LEF, Liberty, STA Timing 数据\n输出: ECO 脚本，incr. SDF\nXTop支持X86 64-bit Linux操作系统，可以在Red Hat Enterprise V6, and V7等操作系统上运行。"
            }
        ]
    },
    {
        "source": "_xtop_quickstart",
        "amount": 20,
        "knowledge": [
            {
                "doc_id": "_xtop_quickstart_0001",
                "summary": "",
                "content": "XTop Quick Start\n\nPost-Mask ECO\nWhen user finds timing violation in the very late stage of design, he may not want to change the mask to clean the timing. Post-mask ECO can help to do small changes to fix timing violations, by buffer insertion and cell sizing methods. It will only contain physical wire modification and avoid any placement adjustment in the layout.\nIn XTop, please set the parameter eco_post_mask_mode to enable the post-mask eco mode.\nXTop can support both Spare Cell flow and GA Filler flow."
            },
            {
                "doc_id": "_xtop_quickstart_0002",
                "summary": "The document provides information about the \"Spare Cell Flow\" in Post-Mask ECO. It defines the conditions of a spare cell and explains the flow process, which is similar to the usual eco flow after enabling the post mask mode. It also notes that certain commands are not supported in post mask mode, while others like insert_buffer and size_cell methods are supported. Additionally, it mentions that the buffer list parameter supports not only buffer and inverter but also AND and OR cell, while NAND, NOR, and XOR cells are not supported.",
                "content": "Post-Mask ECO: Spare Cell Flow\nWhat is “Spare Cell”? It can be defined by following conditions:\nSpare cell is not a physical-only cell (like filler cell).\nAll inputs of the space cell (except for the clock pin) are unconnected or tie_HIGH/tie_LOW. \nThe clock pin of the spare cell can be connected to the clock network.\nAll outputs of the spare cell are unconnected.\n\nFor the spare cell flow, it just likes the usual eco flow, after enabling the post mask mode. \nThe below is an example.\n\nPlease note:\n- fix_fanout_violations, fix_wire_length_violations and optimize_design_area commands are not supported in post mask mode. \n- only insert_buffer and size_cell methods are supported in post mask mode.\n- in the buffer list parameter, not only allows buffer and inverter, but also support AND and OR cell.\nCurrently, NAND, NOR and XOR cell are not supported."
            },
            {
                "doc_id": "_xtop_quickstart_0003",
                "summary": "This document provides instructions on setting parameters for the GA filler flow in the Post-Mask ECO process using the XTop tool. It details the use of parameters such as eco_ga_site, eco_ga_name_pattern, eco_ga_filler_list, and eco_cell_nominal_swap_keywords. It also notes the optimization process, the types of supported cells, and the rules for sizing between GA and non-GA cells.",
                "content": "Post-Mask ECO: GA Filler Flow\nFor the GA filler flow, please set the following parameters first:\neco_ga_site\t\tto specify the site of GA cells\neco_ga_name_pattern\tname patterns used by gate array cells (only in 2020.06.sp1 or later)\n\t\t\t\tIf both GA site and name pattern are set,  eco_ga_site has higher priority.\neco_ga_filler_list\tto set gate array filler cells, for buffer insertion and sizing\n\t\t\t\tIt must include the minimum GA filler (filler1). Otherwise, it will error out.\n(in 2020.06.sp1 or later, it will auto-traverse all GA cells, and get the greatest common divisor of all cell widths, which require the minimum GA filler must be included in the filler list.)\n(in 2021.09 or later, it will check the given GA filler cells, guarantee existing filler cell for each VT/channel length (by eco_cell_nominal_swap_keywords).)\neco_cell_nominal_swap_keywords\t\tin 2021.09 or later, used to identify the VT/channel length\n\t\nIn the optimization, XTop will delete the GA filler cells, and insert the new cells given, and use the GA filler cells to fill the blank space. The below is an example.\n\nPlease note:\n- Only insert_buffer and size_cell methods are supported in post mask mode.\n- Parameter placement_legalization_mode is not working in post mask mode.\n- Supported cells include: buffer/inverter/and/or .\n- By default, only allow sizing from GA cells to GA cells. In 2020.06.sp1 or later, if user wants to size between GA cell and non-GA cells, please set parameter eco_ga_cell_sizing_rule to complete."
            },
            {
                "doc_id": "_xtop_quickstart_0004",
                "summary": "This document provides information about the Clock ECO feature in XTop. It explains that XTop offers both interactive and automatic Clock ECO solutions, which can analyze the impact of changes in the clock tree on setup/hold timings and margins across multiple scenarios. It also provides a list of command options for clock_eco_analysis and commit_clock_eco.",
                "content": "Clock ECO\n\nBefore timing ECO phase is started, designers assume that the CTS structure has reasonable clock skew and setup/hold WNS and TNS are workable. But sometimes, it is more efficient to repair timing on clock path than on data path. Touching one cell on the clock tree may fix hundreds of timing violations. It needs to provide another opportunity to adjust the timing by changing the clock.\nXTop has provided both interactive and automatic Clock ECO solutions, which can analyze the influence of changing clock tree on setup/hold timings and margins on multiple scenarios. User can specify a reference buffer and a trace level, and run several rounds of ECO analysis until find better solutions to optimize timing.\n       clock_eco_analysis   {-setup | -hold} [-decrease_delay]\n\t\t\t  -buffer clock_buffer [-count buffer_count]\n\t\t\t  [-trace_level trace_level] [-top count]\n\t\t\t  [-target_pins target_pins]\n\t\t\t  [-include_begin_gain] [-detail]\n\t\t\t  [-honor_dont_touch]\n\t\t\t  [-setup_wns_threshold setup_wns_threshold]\n\t\t\t  [-hold_wns_threshold hold_wns_threshold]\n       commit_clock_eco\n  [-gain_ratio num  | -top num]\n {-setup  | -hold}"
            },
            {
                "doc_id": "_xtop_quickstart_0005",
                "summary": "This document provides an explanation of terms used in Clock ECO (Engineering Change Order) report results, such as DACKPin, DADPin, BQPin, TNS_Gain, and others. It also explains the calculation of various ratios like TNS_Gain_Ratio, Begin_Gain_Ratio, and Gain_Ratio. Additionally, it mentions the use of the -target_pins option for specifying hierarchical logic pins for analysis, with a note on its usage restrictions.",
                "content": "Clock ECO: Term Interpretation\n\n\nSome terms that are used in the reported results (take the picture above as an example):\nDACKPin \tDirectly affected CKPins, all fanout CKPins from eco point of view.\n\t\t\t{FFX/CK, FFY/CK}\nDADPin \t\tDirectly affected DPins, all related data pins of DACKPins.\n\t\t\t{FFX/D, FFY/D}\nBQPin \t\tBegin QPins, all fanin QPins of DADPin.\n\t\t\t{FF1/Q, FF2/Q, FFa/Q, FF2b/Q}\nTNS_Gain \t\t\tTotal negative slack gain on all DPins.\nTNS_Gain_Ratio\t\t=TNS_Gain/reference_buffer_delay\nBegin_Gain\t\t\tTotal negative slack gain on all BQPins.\nBegin_Gain_Ratio\t\t=Begin_Gain/reference_buffer_delay\nVio_Count\t\t\tsetup or hold violation count change\nMargin_TNS_Gain\t\tTotal margin (if fix setup, margin is hold) TNS gain \nMargin_TNS_Gain_Ratio\t=Margin_TNS_Gain/reference_buffer_delay\nW_Margin_TNS_Gain_Ratio\tthe worst Margin_TNS_Gain_Ratio of multi-scenarios\nGain_Ratio\t\t\t=TNS_Gain_Ratio + W_Margin_TNS_Gain_Ratio\n\t\t\t\t\t [+ 0.1*Begin_Gain_Ratio]\n\t\t\t\t\t   //if –include_begin_gain option specified\nNOTE: \n-target_pins \tThis option is used to specify the hierarchical logic pins for analysis.\nIt is useful for block interface clock timing schedule.\nWhen using -target_pins, user should not set -trace_level at the same time, and make sure there no topology relation between -target_pins. Tools will only work fine for pins on clock tree, so no clock reconvergence or clock overlap."
            },
            {
                "doc_id": "_xtop_quickstart_0006",
                "summary": "This is a description of the \"fix_violations_by_clock_eco\" command in Clock ECO: Auto-Fix. The command automatically fixes setup or hold violations by applying eco operations on the clock. It combines analysis and committing functions, and can commit optimal solutions with the -auto_scan option. It also includes options to prevent Setup or Hold timing WNS from getting worse.",
                "content": "Clock ECO: Auto-Fix\n\n  fix_violations_by_clock_eco  \t{-setup | -hold} \n-buffer buffer_name\n\t\t\t\t [-count num]\n\t\t\t\t [-trace_level num]\n[-gain_ratio num] \n[-auto_scan] \n[-setup_wns_threshold  setup_wns_threshold]\n[-hold_wns_threshold  hold_wns_threshold]\n\nThis command will auto fix the setup or hold violations by applying eco operations on clock. \nThis command is a combination of analysis (clock_eco_analysis) and committing (commit_clock_eco).\nIf –auto_scan option specified, it will commit the optimal solutions (whose total gain is the best) within the max trace level and max buffer count.\nTo prevent Setup or Hold timing WNS from getting worse, please specify –setup_wns_threshold and –hold_wns_threshold option."
            },
            {
                "doc_id": "_xtop_quickstart_0007",
                "summary": "The provided material is about the usage of XTop tool commands for clock ECO (Engineering Change Order) analysis and auto-fixing violations. The commands include 'clock_eco_analysis' and 'commit_clock_eco' for hold and setup timing analysis, and 'fix_violations_by_clock_eco' for automatically fixing hold and setup violations. Various options such as buffer type, trace level, top candidates, gain ratio, count, and auto scan are used with these commands.",
                "content": "Clock ECO: Example\nAnalysis Example\n```\n# performs clock eco analysis for hold timing\nxtop> clock_eco_analysis -buffer BUFF12 -hold\n...\nxtop> clock_eco_analysis -buffer BUFF12 –hold -trace_level 3\n...\n# select the best 10 candidates to commit\nxtop> commit_clock_eco –hold –top 10\n...\n# performs clock eco analysis for setup timing\nxtop> clock_eco_analysis -buffer BUFFD8 -setup\n# select the candidates whose gain ratio is larger than 100 to commit\nxtop> commit_clock_eco –setup –gain_ratio 100\n```\nAuto-Fix Example\n```\n# The following example fixs hold violation by clock eco.\nxtop> fix_violations_by_clock_eco -buffer CKBUFF1 -hold\n\n# Fix setup violation by clock eco and sets the basic unit buffer chain to 2.\nxtop> fix_violations_by_clock_eco -buffer CKBUFF1 –setup -count 2\n\n# Fix setup violation by clock eco and sets the maximum allowed trace level to 4.\nxtop> fix_violations_by_clock_eco -buffer CKBUFF1 -setup -trace_level 4\n\n# Fix hold violation by clock eco using auto scan and set gain ratio to 30 to filter solutions. \nxtop> fix_violations_by_clock_eco -buffer CKBUFF1 -hold \t\\\n-trace_level 10 -count 5\t\\\n-gain_ratio  30 \t\t\\\n-auto_scan\n```"
            },
            {
                "doc_id": "_xtop_quickstart_0008",
                "summary": "The document discusses the \"corner reduction\" functionality provided by XTop in complex SoC design. This feature helps filter out the most important scenarios, covering the most violations, thus improving memory usage and runtime. It also provides a command, \"analyze_scenario_reduction\", with various options for data directory, hold value, setup value, included scenarios, gain factor, force read, and verbosity.",
                "content": "Corner Reduction\n\nIn current complex SoC design, there are more and more corners in the timing closure. While some corners are inter-related, some corners have few timing violations. They are not necessarily to be all loaded at the same time when timing optimization, which will make the memory usage and runtime worse. XTop has provided the “corner reduction” functionality. It can help user to filter out the most important scenarios, which will cover the most violations.\n\n  analyze_scenario_reduction\n    -data_dir path\n    [-hold_top_n hold_val\n     | -hold_coverage hold_cov]\n    [-setup_top_n setup_val\n     | -setup_coverage setup_cov]\n    [-must_include  scenario_names]\n    [-factor gain_factor]\n    [-force_read]\n    [-verbose]"
            },
            {
                "doc_id": "_xtop_quickstart_0009",
                "summary": "This document provides information on the Corner Reduction related commands in XTop tool. It details the usage of commands like analyze_scenario_reduction, reduce_scenario, and report_dropped_scenario, along with their specific options such as \"-hold_top_n\", \"-setup_top_n\", \"-hold_coverage\", \"-setup_coverage\", \"-must_include\", \"-factor\", \"-force_read\", and \"-verbose\".",
                "content": "Corner Reduction: Related Commands\n\nanalyze_scenario_reduction  \nIt is suggested to run this command after build_timing_graph, before read_timing_data.\nIt will return a dropped scenario list.\n\nIf “-hold_top_n” or “-setup_top_n” specified, the worst N scenario(s) for hold/setup will be selected.\nIf “-hold_coverage” or “-setup_coverage” specified, the given coverage ratio (0.2~1.0) will be used as a threshold, selecting scenarios until the violation coverage is satisfied.\nIf “-must_include” specified, the given scenario will always be added into result list. If it is not contained in list by previous analysis, it will be marked a \"(*)\" in detail.\nIf “-factor” specified, it will force to read pin timing files specified by -data_dir.\nIf “-force_read” specified, it will print more detail information for picked scenarios. The violation counts and TNS of each scenario will be shown.\nIf “-verbose” specified, it will print more detail information for picked scenarios. The violation counts and TNS of each scenario will be shown.\n\nreduce_scenario \nThis command is used to remove the scenario list returned by analyze_scenario_reduction.\n\nreport_dropped_scenario \nThis command is used to report those dropped scenarios."
            },
            {
                "doc_id": "_xtop_quickstart_0010",
                "summary": "The provided material is about the usage of XTop tool for scenario reduction in timing analysis. It includes two examples: one for selecting the top 2 scenarios for hold violations and committing the reduction, and another for including a user-specified scenario and achieving hold coverage over 95% without committing the reduction.",
                "content": "Corner Reduction: Example\n\nThe following example uses scenario reduction to select the Top2 scenarios for hold violations. It will commit by reduce_scenario command, and then read_timing_data.\n\n```\nxtop > build_timing_graph\nxtop > analyze_scenario_reduction  -hold_top_n 2 \\\n-data_dir timing_data_dir -verbose -hold_uncovered 3\n\n2 of total 4 scenarios have been selected.\n\nSelected Scenario    Hold Count     Hold TNS    Setup Count    Setup TNS\n------------------------------------------------------------------------\nfunc_fast                   854    -240.6051              0       0.0000\ntest_fast                   853    -232.4843              0       0.0000\n\nHold covered 100.00% (892/892)    Setup covered 0.00% (0/1029)\n\nFollowing scenarios will be dropped after commit:\n  func_slow\n  test_slow\n\nFollowing pins with hold violation not covered after reduction:\n  Slack    Scenario      Name               \n--------------------------------------------\n-0.7102    test_fast    stacklevel_reg_0_/D\n-0.6942    test_fast    stacklevel_reg_1_/D\n-0.6862    test_fast    tmr0_reg_0_/D\n\nxtop > reduce_scenario {func_slow test_slow}\n2 scenarios are dropped.\n\nxtop > read_timing_data -data_dir timing_data_dir\t #only read 2 scenarios\n\n```\n\nThe following example uses scenario reduction for both include one user specified scenario and hold coverage over 95%. It will display the analysis result only, not commit.\n```\nxtop > build_timing_graph\nxtop > analyze_scenario_reduction -hold_coverage 0.95 \t\\\n                             -must_include mode0_best0 \t\t\\\n                             -data_dir timing_data_dir -verbose\n\n3 of total 5 scenarios have been selected.\n\nSelected Scenario    Hold Count       Hold TNS    Setup Count      Setup TNS\n-------------------------------------------------------------------------\nmode0_worst0             13069      -4933.2574            466       -19.8865\nmode0_worst1             13066      -4597.3354            139        -6.9144\nmode0_best0 (*)             11           -0.35              0         0.0000 \n\nHold covered 99.75% (13078/13111)    Setup covered 90.00% (486/540)\n\nFollowing scenarios will be dropped after commit:\n  mode0_best1\n\n```"
            },
            {
                "doc_id": "_xtop_quickstart_0011",
                "summary": "The article provides detailed instructions on data preparation for using XTop, a tool that assists designers in achieving timing closure. It emphasizes the necessity of preparing timing library files and design information to fix timing violations. The required files include LEF files, Timing Lib Files, Timing Data Files, and Verilog/DEF/Power domain files.",
                "content": "Data Preparation\nXTop is the tools that help designers to achieve timing closure. In order to fix timing violations, it needs to prepare the timing library files and the design information first. This article will give detail instructions on how to prepare the necessary data before optimization.\nThe following files are required.\nLEF Files\t\t\tincluding technology LEF, standard cells and macros LEFs\nTiming Lib Files\t\t.lib or .idb files\nTiming Data Files\t\ttiming information (dumped from STA)\nVerilog/DEF/Power domain\tdesign information (netlist, physical, power domain files)"
            },
            {
                "doc_id": "_xtop_quickstart_0012",
                "summary": "This document discusses the ECO Merge feature in XTop, a tool for large-scale complex SoC design. It allows multiple designers to work independently on different subsystems or timing types, and then merge their ECO scripts to avoid conflicts. The document also explains the \"load_native_eco_files\" command, which imports and merges several ECO script files in native format, checks for conflicts and duplications, and updates the netlist and legalization without updating timing.",
                "content": "ECO Merge\nFor large-scale complex SoC design, it will include multiple subsystems. In order to speed up the schedule, several designers will perform top design timing fix at the same time. Everyone works independently by timing types (setup/hold/drv/special timing) or by different subsystems. In order to avoid ECO script conflicts caused by different people and solve the complexity of multiple ECO scripts, it is hoped that tool can provide a capability to merge ECO scripts.\nXTop provides a function of merging ECO scripts. It can combine the scripts produced by multiple people working in parallel, avoiding the conflicts of before and after ECO operations. For higher efficiency, there will be no update timing when merging ECO scripts.\n\n  load_native_eco_files\n    file_names\n    [-quiet]\n  quiet           \t: flag\n  file_names      : string_list\n\n\nAfter design has been created, or open previous workspace. ECO scripts can be loaded.\nTo speed up the process of read timing data command, “-ignore_data_for_sdf” option can be used. In this case, only GBA pin slack and used as clock data file will be read. Cell delay will be calculated using FO4 model, which may be different from the actual delay.\n“load_native_eco_files”  command will import several eco script files in native format, and try to merge them. XTop will enter the “timing irrelevant” mode, and print \"Enter timing irrelevant mode for merging ECO actions\" information on the shell. In this mode, tool will check for conflicts and duplications between eco script files. All ECO actions will only update netlist and legalization, and timing is not updated.\nEach call of “load_native_eco_files” means that a new round of ECO starts, which will check the previous ECO action, drop the duplicated action and report the information, for example:\nDrop command 'size_cell -design {regs} -location {( 119.2000, 119.4000 )} xxx' for previous conflicting command 'size_cell -design {regs"
            },
            {
                "doc_id": "_xtop_quickstart_0013",
                "summary": "This document provides instructions on how to use the XTop tool for ECO Merge. It includes steps on how to load native ECO files, write design changes, and handle errors during file loading. It also explains that the total number of dropped commands will be reported after executing the load_native_eco_files command.",
                "content": "ECO Merge: Example\n\n```\nxtop> source design_setup.tcl\nxtop> source mcmm.tcl\nxtop> load_native_eco_files  {1.txt  2.txt  3.txt}\nxtop> load_native_eco_files  4.txt   -quiet\n…\nxtop > write_design_changes -format NATIVE -eco_file_prefix xxx \\\n -output_dir $output_dir -force\n\n```\nThe total number of dropped commands will be reported after the load_native_eco_files command is executed, for example:\n```\nxtop > load_native_eco_files \"./result_fix_setup/native_eco_macro_netlist_pcsx16.txt\n ./result_fix_hold/native_eco_macro_netlist_pcsx16.txt\n ./result_wire_length/native_eco_macro_netlist_pcsx16.txt\" -quiet\nLoading './result_fix_setup/native_eco_macro_netlist_pcsx16.txt'...done.\nLoading './result_fix_hold/native_eco_macro_netlist_pcsx16.txt'...done.\nLoading './result_wire_length/native_eco_macro_netlist_pcsx16.txt'...done.\nDropped 3628 commands for duplication.\nAccepted 27284 commands\n```\nIf a file fails to be loaded due to an error, an error message will be printed and all files following the load will be stopped, unless using “set sh_continue_on_error 1” to keep going.\n```\nxtop > load_native_eco_files \"./result_fix_setup/native_eco_macro_netlist_pcsx16.txt\n ./result_fix_hold/native_eco_macro_netlist_pcsx16.txt\n ./result_wire_length/native_eco_macro_netlist_pcsx16.txt\" -quiet\nLoading './result_fix_setup/native_eco_macro_netlist_pcsx16.txt'...done.\nLoading './result_fix_hold/native_eco_macro_netlist_pcsx16.txt'...Error: Library cell 'SCJDLY3XH1AAA' not found.\nfailed.\nAccepted 1068 commands.\nError: Failed to load file ./result_fix_hold/native_eco_macro_netlist_pcsx16.txt.\n```"
            },
            {
                "doc_id": "_xtop_quickstart_0014",
                "summary": "This material is about the \"Rank Pins\" functionality in XTop, which defines the criteria for calculating the rank value of each pin. It is used to optimize design power, area, and timing. The document also explains the \"mark_hold_gba_pin_rank\" command, which includes the \"type\" and \"pins\" parameters.",
                "content": "Rank Pins\nWhen XTop is fixing the setup or hold timing, or optimizing the design power or area, there is an effort parameter that controls the internal fix iterations. Generally speaking, the larger the effort parameter is, the more fix iterations, and the better the effect of optimization will be. Meanwhile, it will take longer run time. During each fix iteration, XTop will sort the pins in the design by some certain rule and optimize according to the sequence of pins. Different sorting rules will bring different results. \n“Rank Pins” functionality will define the criteria for calculating rank value of each pin. It is used to handle pin´s priority, so that when -effort option is not low, unfixed pins can be put to different groups, for a better optimization result. Basically, our default rank weight is good enough for most cases, user can change the rank weight according to real requirement.\n\n  mark_hold_gba_pin_rank\n    -type  rank_type\n[pins]\n\ntype\t: enum in ‘count slack margin ...’\npins\t: Pins that will be marked,\n\t  all if not specified"
            },
            {
                "doc_id": "_xtop_quickstart_0015",
                "summary": "The provided material is about the commands related to Rank Pins in XTop tool. It includes various mark rank commands like 'mark pin rank', 'mark_hold_gba_pin_rank', 'mark_hold_path_pin_rank', etc., each having a specific rank_type enum value. The default values for different commands are also mentioned. The commands can be applied to all pins/paths or specific pin_list/path_list based on the options specified. It also mentions commands for reporting and summarizing pin rank.",
                "content": "Rank Pins: Related Commands\nmark pin rank\nmark_hold_gba_pin_rank\nmark_hold_path_pin_rank\nmark_setup_gba_pin_rank\nmark_setup_path_pin_rank\nmark_leakage_pin_rank\nmark_area_pin_rank\nThe rank_type enum value could be: 'count countSlack countDelay si siReverse margin slack congestion congestionReverse transition fanout wireLength', according to each mark rank command.\nBy default, for hold_gba/hold_path, ‘count’ will be used; for setup_gba/setup_path, ‘countdelay’ will be used; for leakage and area optimization, ‘count’ will be used.\nIf pins/paths options are not specified, it will apply to all pins/paths (for hold fix, it will mark at the input pins; otherwise, it will mark at the violated output pins). \nIf pins/paths options are specified, it will only apply to given pin_list/path_list (it will auto search the fanin and fanout pins of the given pins for hold/setup gba mode).\n\nreport pin rank\nsummarize pin rank\nget rank pins"
            },
            {
                "doc_id": "_xtop_quickstart_0016",
                "summary": "",
                "content": "Rank Pins: Example\n\n```\nxtop> mark_leakage_pin_rank –type leakageCount\n# set rank weight type to leakageCount  when optimize leakage power,\n# which means consider both pin’s library cell leakage power and pin’s impaction to others\nxtop> optimize_leakage_power ...\n\nxtop> mark_setup_gba_pin_rank -type si\n# set rank weight type to si when fix setup gba violations\nxtop> fix_setup_gba_violations ...\n\n```"
            },
            {
                "doc_id": "_xtop_quickstart_0017",
                "summary": "This document provides information about the XTop tool's feature of writing \"hacked\" SDF files for Setup/Hold timing fix. It explains the use case of this feature and provides the syntax and options for the 'write_incremental_sdf' command. It also mentions that this command changes the slack info and should not be used with other timing fix commands.",
                "content": "Write SDF\nSome logic designers may want start the post-simulation as early as possible, even having timing violations. For example, some customers may want to obtain a Hold-clean timing result for post-simulation to test the functionality. After timing ECO, they want the changed net delay annotated back to STA tool, to evaluate the effect of timing optimization. \nXTop provides a flow of writing “hacked” SDF. Instead of doing real timing eco, it will generate incremental SDF files for Setup/Hold timing fix. The SDF file can be back-annotated into STA tool.\n\n  int write_incremental_sdf\n    -dir dir_name\n    [-prefix prefix_name]\n    {-hold  | {-setup  [-reserved_cell_delay_percentage %}}]\n    [-target target_val]\n    [-anno_derate derate_val]\n    [-both_timing_type]\n\n  anno_derate     : float in '[0.5,2]'\n  both_timing_type: flag\n  dir             : string\n  hold            : flag\n  prefix          : string\n  reserved_cell_delay_percentage: float in '[0.2,1]'\n  setup           : flag\n  target          : float in '[0,100)'\n\nwrite_incremental_sdf will change the slack info, so it cannot be used mixing with other timing fix commands.\nGBA timing info will be considered during write_incremental_sdf, so it is not recommended to include PBA data."
            },
            {
                "doc_id": "_xtop_quickstart_0018",
                "summary": "This material provides instructions on how to use the write SDF command in XTop tool after running the read timing data command. It also suggests using the \"-ignore_data_for_sdf\" option to speed up the process, which will only read GBA pin slack and used as clock data file, and calculate cell delay using the FO4 model.",
                "content": "Write SDF: Example\nPlease run write SDF command after read timing data command.\nTo speed up the process of read timing data command, “-ignore_data_for_sdf” option can be used. In this case, only GBA pin slack and used as clock data file will be read. Cell delay will be calculated using FO4 model, which may be different from the actual delay.\n```\nxtop> source design_setup.tcl\nxtop> source mcmm.tcl\nxtop> read_timing_data -data_dir ...\nxtop> write_incremental_sdf -dir result -hold -target 0.02\n\n#using -ignore_data_for_sdf to speed up\nxtop> source design_setup.tcl\nxtop> source mcmm.tcl\nxtop> read_timing_data -data_dir ...  -ignore_data_for_sdf\nxtop> write_incremental_sdf -dir result\t-setup \\\n-reserved_cell_delay_percentage 0.6\n\n```"
            },
            {
                "doc_id": "_xtop_quickstart_0019",
                "summary": "The document provides information about the \"attribute\" system in XTop, which offers additional details about objects in the design. It introduces three commands: \"list_attribute\" to list the attribute types for a specified class of object, \"get_attribute\" to return the attribute value for a specified class of objects, and \"filter_collection\" to filter a given collection using some attribute value. The classes could be 'design pin cell port net lib_cell lib_pin lib timing_path'.",
                "content": "Attribute\nUser may need to get some objects (e.g. cells, nets, pins) to perform further operation (e.g. to set don’t touch, to optimize, to view in layout ...). XTop has supported the “attribute” system, which provides extra information on objects in the design. It will be helpful to filter the collection.\nTo see what kind of attributes does an object have, please run list_attribute command.\nlist_attribute\nIt will list the attribute types for the specified class \nof object, as shown in the example below.\n\nThe -class option could be value of 'design pin cell port net lib_cell lib_pin lib timing_path'.\n\nTo get the value of an attribute on a given object\n(or an collection), please run get_attribute command.\nget_attribute\nIt will return the attribute value for the specified class \nof objects, as shown in the example below.\n\n\nTo filter a given collection using some attribute value, \nplease run filter_collection command.\nfilter_collection\n\nIt will filter a given collection by the filter expression, and result in a new collection.\nThe input base collection will remain unchanged."
            },
            {
                "doc_id": "_xtop_quickstart_0020",
                "summary": "The document provides information about the filter option for the get_xxx series commands in XTop tool. This option allows users to filter objects by a specific expression and return the qualified collection. Examples of commands that support this option include get_cells, get_pins, get_ports, get_nets, get_libs, get_lib_cells, get_lib_pins, and get_paths.",
                "content": "Attribute: Filter Option for Get Commands\nIt has provided a –filter option for get_xxx series commands.\nFor example,\nget_cells\nget_pins\nget_ports\nget_nets\nget_libs\nget_lib_cells\nget_lib_pins\nget_paths\n\nJust like filter_collection command, it will filter the objects by the filter expression, and return the qualified collection.\n```\nxtop > get_cells -filter \"ref_name == SCJBUFXC1\"\n\"U701\", \"U647\", \"U710\", \"U713\", \"U719\", \"U680\"\nxtop > get_paths  -filter   \"slack < -2.5\"\n“Path_838”, “Path_894”, “Path_948”,  ...\n```"
            }
        ]
    },
    {
        "source": "_xtop_release",
        "amount": 16,
        "knowledge": [
            {
                "doc_id": "_xtop_release_0001",
                "summary": "The XTop Release Notes for version 2023.03 detail new features, enhancements, and bug fixes. New features include dynamic power optimization and cell sizing to fix glitch violations. Enhancements cover areas such as timing fix efficiency, corner reduction, metal eco flow, and more. Several bugs have been fixed, including crashes, parsing errors, and optimization issues. The manual of set_site_map has also been polished.",
                "content": "XTop Release Notes\nRelease Note: 2023.03\nNew Features\nSupported dynamic power optimization.\nSupported cell sizing to fix glitch violations.\nEnhancements\nEnhanced timing fix efficiency, solving previous MIB fail reason.\nEnhanced corner reduction, considering rail voltage information.\nEnhanced metal eco flow, connecting spare cell’s input to original driver net.\nEnhanced clock_eco_analysis result, printing more details when only one target pin.\nEnhanced import_designs, allowing to skip filler and PG special layers in DEF.\nEnhanced report_placement_constraint, displaying micrometer for design.\nEnhanced fix_fanout/wire_length/si_violations using buffer list.\nAdded a command to dump picture to debug incomplete_net fail reason.\nAdded a command to clear existing fail reasons.\nAdded a script to copy workspace safely enable linking timing library.\nEnhanced scripts to dump SI data from third party tools.\nEnhanced parsing timing report, supporting timing borrow and timing given format.\nEnhanced dumping power domain file, to skip virtual power domains.\nImproved the speed of get_paths across design in top level.\nFixed a crash when checking power intent cell in hold fix.\nFixed a bug that hold fix used delay buffer to drive loads when cluster loads.\nFixed a bug that endpoint FF cells could not be sized to fix hold timing.\nFixed a bug that auto and manual eco failed due to legal fail drc reason.\nFixed a bug that UPF command parse error when switching set_scope.\nFixed a bug that max fanout number not changed after optimization.\nFixed a bug that max fanout optimization result not balanced.\nFixed a bug that check_placement_overlap reported overlap with removable fillers.\nFixed a bug that the fail reason of \"legal_fail_density\" is untrue.\nFixed a bug that error reported when source *physical*.txt, add repeater without -hinstGuide option.\nPolished the manual of set_site_map, with declaration must run before import_designs."
            },
            {
                "doc_id": "_xtop_release_0002",
                "summary": "The release note for XTop tool version 2022.06.sp1 includes several enhancements and bug fixes. Enhancements include added setup and hold constraint attributes for timing_path objects, parameter control for skipping building logic depth, and support for post-mask eco cell refill. Numerous crashes and bugs were fixed, including issues with MIB design, timing data file, legalizer initialization, and buffer removal in manual eco.",
                "content": "Release Note: 2022.06.sp1\nNew Features\nNone.\nEnhancements\nAdded setup and hold constraint attributes for timing_path objects.\nAdded parameter control to skip building logic depth.\nRelaxed the max displacement constraint of new eco instance to 1000t.\nSupported to honor dont_use when post-mask eco cell refill.\nAdded command get_tmlib_cell_property to return delay, transition attributes of cell.\nAdded parameter control to size cells between different physical_variant types.\nFixed a crash when split_net in MIB design.\nFixed a crash when clock eco solution committed in MIB design.\nFixed a crash when dumping the timing data file of clock root info.\nFixed a crash when read_timing_data due to legalizer initialization.\nFixed a crash when summarize_inst_displacement.\nFixed a crash when buffer removal in manual eco.\nFixed a bug that result not updated after fix_glitch_violation.\nFixed a bug that get_pins command changed the collection to string.\nFixed a bug that readiness_check_level value could not be saved for set_placement_constraint.\nFixed a bug that append_to_collection command could not append objects.\nFixed a bug that power domain conflict reported when merging eco scripts.\nFixed a bug that WNS became worse when fixing Setup timing using buffer insertion.\nFixed a bug that setup paths could not be dumped from 3rd party tools.\nKnown Issues\nNone."
            },
            {
                "doc_id": "_xtop_release_0003",
                "summary": "The document is a release note for XTop tool version 2022.06. It details new features such as corner reduction, downsizing for setup timing, and support for various formats and scripts. It also outlines enhancements in GUI, flow, DEF parsing, and optimization speed, among others. Additionally, it provides a list of bug fixes related to ECO analysis, timing report parsing, and setup timing, to name a few.",
                "content": "Release Note: 2022.06\nNew Features\nSupported corner reduction to filter TopN worst scenarios.\nSupported downsizing to fix Setup timing.\nSupported mixed heights GA filler for post-mask ECO.\nSupported to output Verilog and incr. DEF result.\nSupported to hack SDF for post-simulation.\nSupported pba2gba timing calibration.\nSupported to merge multiple ECO scripts.\nEnhancements\nGUI Enhancements.\nAdded set_highlight_color command.\nSupported snapshot in Layout viewer.\nSupported to highlight all eco cells in path view.\nSupported to highlight multiple timing paths.\nEnhanced MIB, add parameter eco_copy_mib_timing_data to duplicate RC info.\nEnhanced flow, support “xtop -f script.tcl | & tee xtop.log” usage.\nAdded -pretend option for \"read_timing_report\" to support reading in parallel.\nEnhanced DEF parsing, support REGION constraint without type.\nSupported physical variant cell defined in special library.\nEnhanced “check_placement_readiness”, report site mismatch between tech LEF and DEF.\nAdded a new command “report_design_hierarchy”.\nEnhanced the scenario report which includes nets with no annotated data.\nEnhanced leakage optimization speed, for ccs lib having macros with many output pins.\nEnhanced data preparation for Turbo mode, support to dump cap information.\nEnhanced script for Turbo mode to dump timing info of preferred hier_paths or module boundaries.\nAdded -hier_path option for “set_specific_lib_cells”, support setting by hierarchy path.\nAdded -include_common_path option for “identify_io_path_pins”.\nEnhanced “fix_hold_violations -dff_only”, support VT swapping.\nEnhanced “fix_hold_violations -fix_timing_window”, allow breaking hold a little.\nFixed a crash when clock eco analysis due to long pin name.\nFixed a bug that error reported when parsing timing report with propagated network delay removal.\nFixed a bug that error reported for extra_supplies and isolation_supply_set UPF commands.\nFixed a bug that eco cell overlapped with endcap cell when manual eco.\nFixed a bug that multi-bit DFF could not be sized when manual eco.\nFixed a bug that legal fail reason not reported when manual eco .\nFixed a bug that fail to legal reported when buffer insertion, due to unmatched power domain.\nFixed a bug that no cell or net arc error reported, when parsing latch time borrowing path.\nFixed a bug that broke setup timing when fix setup, due to pocv transition sigma number.\nFixed a bug that broke setup timing when fix setup using -dff_only.\nFixed a bug that hold timing fix was slow due to long buffer list.\nFixed a bug that attributes “launch/capture/data_points” not supported for timing_path.\nFixed a bug that max_density and max_congestion not worked well in set_placement_constraint.\nFixed a bug that -location {0 0} outputted by “write_design_changes” when place_not_ready.\nFixed a bug that in post-mask ECO, all output pins of sized cells were tie 0.\nFixed a bug that -max_displacement constraint was too restrictive for post-mask ECO."
            },
            {
                "doc_id": "_xtop_release_0004",
                "summary": "The release note for XTop tool version 2021.12 details new features, enhancements, and bug fixes. New features include support for temperature scaling in timing optimization. Enhancements cover areas such as delay calculation, setup fix, leakage analysis, eco script generation, and more. Several new attributes and commands have been added. Numerous bugs have been fixed, including tool crashes, timing update issues, and attribute and filter condition problems.",
                "content": "Release Note: 2021.12\nNew Features\nSupported temperature scaling in timing optimization.\nEnhancements\nEnhanced delay calculation, consider R/C tree to estimate wire delay when size_cell.\nEnhanced setup fix, improve the accuracy of pre-analysis to speed up the evaluation.\nEnhanced setup fix, add parameter control for area change ratio during sizing.\nEnhanced setup fix, support auto off-path factor adjustment for better accuracy.\nEnhanced delay calculation, consider the impact of ocv sigma transition.\nEnhanced timing fix, enable when LEF files are not complete.\nEnhanced leakage analysis and optimization, provide option to control iterations.\nEnhanced clock eco, support using inverter pair to fix.\nEnhanced post-mask eco, for the spare cell identification.\nEnhanced eco script generation, improve the PR tool implementation speed.\nEnhanced the fail reason of \"fail_to_legalize\", including more details.\nAdded a new attribute length for net objects.\nAdded a new attribute is_spare_cell for cell objects.\nAdded new commands to set and report setup extra derate value for scenarios.\nAdded a new command to return an empty collection.\nAdded a new command to check cell placement overlap.\nAdded a new parameter to auto set setup_extra_derate according to process.\nFixed a bug that tool crash when fix_glitch_violations, due to split_net.\nFixed a bug that tool crash when solution commit in clock eco.\nFixed a bug that tool crash when remove_buffer connecting to P/G port.\nFixed a bug that tool cannot read timing report with \"cycle clock jitter\".\nFixed a bug that timing not updated correctly after move_cell manual eco.\nFixed a bug that IP bus timing arc not recognized due to bus and bit timing group definition.\nFixed a bug that pin attribute \"fanin/fanout_points\" not return a collection.\nFixed bugs that attribute and filter condition not working correctly.\nFixed a bug that power domain conflict error reported when buffer insertion to fix hold.\nFixed a bug that inconvenient error information for scenarios failed when read timing data.\nFixed a bug that some buffer left some aborted when split net, causing transition to get worse.\nFixed a bug that inverter pairs can not be deleted by remove buffer of auto optimization."
            },
            {
                "doc_id": "_xtop_release_0005",
                "summary": "The document is a release note for XTop tool version 2021.09. It details new features, enhancements, and bug fixes. New features include license control for ADV3 process and a new leakage power optimization strategy. Enhancements cover areas like DEF importing, hold fix, setup fix, and power intent cell recognition. Several bugs causing tool crashes and issues with setup timing, command completion, and memory bus arc recognition have been fixed.",
                "content": "Release Note: 2021.09\nNew Features\nAdded license control for ADV3 process.\nAdded new leakage power optimization strategy.\nSupported to fix noise glitch violations.\nEnhancements\nEnhanced DEF importing, improve the speed if DEF file having special VIAs.\nEnhanced hold fix, support to control the length of delay cell chain when buffer insertion.\nEnhanced setup fix, improve the fix ratio when gain is small.\nEnhanced rank pin strategies, for better group cluster analysis.\nEnhanced split net, support cross hierarchy in automatic optimization.\nEnhanced script generation for split_net, to allow buffers can be inserted along route.\nEnhanced leakage power optimization, to skip unconstrained cells.\nAdded command analyze_leakage_keywords, to guide cell swapping for leakage optimization.\nEnhanced power intent cell recognization defined in UPF during auto and manual eco.\nEnhanced post-mask eco, using eco_cell_nominal_swap_keywords to support VT for GA cells.\nEnhanced fail reason report, add master and timing information.\nEnhanced SI fix, support wire length limit.\nAdded tcl variable scan_at_new_pin, to allow eco action before new cells inserted.\nAdded -adjacent_rows and -halo options, for set_placement_spacing_rule command.\nFixed a bug that tool crash when split net to fix transition for MIB pins.\nFixed a bug that tool crash when split net using inverter allowing to push cells.\nFixed a bug that tool crash when check placement readiness with some DEF not loaded.\nFixed a bug that tool crash when loading tmlib file, having include_file statement.\nFixed a bug that break setup timing when leakage optimization.\nFixed a bug that cannot read the pocvm file without coefficient.\nFixed a bug that cannot support automatic completion of command in GUI shell.\nFixed a bug that tool has slow fresh speed when doing the first manual eco.\nFixed a bug that slack of inout IO pins was not recognized.\nFixed a bug that no setup gain reported, if cell rise and fall delay are unbalanced.\nFixed a bug that memory bus arc not recognized properly when parsing timing lib.\nFixed a bug that no_alternative_cell reported when leakage optimization, for multi-tech design.\nFixed a bug that cell has zero transition if there is a blackbox or intrinsic delay defined in previous level."
            },
            {
                "doc_id": "_xtop_release_0006",
                "summary": "The release note for XTop 2021.03 introduces new features such as the \"insert dummy\" optimization method and the \"exchange cell\" manual eco action. It also includes enhancements in various areas like legal placement information acquisition, cell sizing, leakage power optimization, and more. New commands like \"build_timing_graph\" and \"list eco action candidates\" have been added. The note also mentions a bug fix related to the set_units command.",
                "content": "Release Note: 2021.03\nNew Features\nAdded new optimization method \"insert dummy\" to fix small hold violations.\nAdded one new manual eco action: exchange cell.\nEnhancements\nSupported to acquire legal placement information from UPF/CPF commands.\nEnhanced cell sizing to consider off path gain when fix setup timing.\nConsidered pin alignment when cell legalization.\nEnhanced leakage power optimization to enable multi-thread acceleration.\nAdded a new command \"build_timing_graph\" for large design setup process.\nEnhanced extra setup derating settings by voltages using linear interpolation.\nEnhanced eco converters, for better eco result (especially for split net).\nEnhanced transition margin to support both relative and absolute value.\nEnhanced transition fix to consider timing margin.\nEnhanced filter operations to speed up the runtime.\nEnhanced clock eco to consider violation count changes when TNS gain is tiny.\nEnhanced clock eco commands to add WNS threshold options.\nEnhanced output script generated by post-mask eco.\nEnhanced manual split net to support cross hierarchy net.\nEnhanced summarize_buffers to report scenario information.\nAdded new commands: list eco action candidates and commit_candidate.\nEnhanced XTop to allow user to specify the saving directory for the log file.\nFixed a bug that set_units cannot be set before link_library."
            },
            {
                "doc_id": "_xtop_release_0007",
                "summary": "The release note for XTop tool version 2020.06.sp1 includes new features such as GUI for clock eco analysis, -auto_scan option for fix_violations_by_clock_eco, and license wait feature. It also includes several enhancements and bug fixes related to crash issues, power domain import, max_transition gain check, MIB pins expansion, clock_eco_analysis result, post-mask eco flow, cell overlap, and more. New parameters for post-mask eco and DRC fix for heavy fanout nets were added.",
                "content": "Release Note: 2020.06.sp1\nNew Features\nAdded GUI for clock eco analysis.\nAdded -auto_scan option for fix_violations_by_clock_eco.\nAdded license wait feature.\nEnhancements\nFixed crash when report dont use before creating corners.\nFixed crash when open GUI after remove_buffer action.\nFixed crash when import power domain, if power domain element is empty.\nEnhanced the max_transition gain check for size_cell.\nEnhanced expanding MIB pins when fix transition with pin collection.\nAdded Gain_Ratio value display for clock_eco_analysis result.\nAdjusted fail reason report in post-mask eco flow for no GA cell found.\nFixed a bug of cell overlap by post-mask eco method.\nAdded a parameter \"eco_ga_cell_sizing_rule\" to allow sizing between GA and non-GA cells in post-mask eco.\nAdded a parameter \"eco_allow_optimize_heavy_fanout_net\" to allow DRC fix for nets with more than 128 fanouts.\nFixed a bug that leakage power fix would break setup timing for multi-fanout nets.\nFixed a bug that lots of buffers inserted to fix transition, if transition target/margin is not correct.\nFixed a bug that write_design_changes result in NATIVE format cannot be re-loaded.\nFixed bugs of legalization due to cell symmetry and multiple row cell."
            },
            {
                "doc_id": "_xtop_release_0008",
                "summary": "The release note for XTop tool version 2020.06 highlights new features, enhancements, and bug fixes. New features include improved clock eco analysis, DeltaTrans support in max-transition optimization, and a new command for identifying IO path pins. Enhancements focus on buffer insertion strategy, 5nm VT layer pin touch, and timing data format. Several bugs causing crashes and a timing path drop issue have been fixed. The tool also switched from tcl8.5 to tcl8.6.",
                "content": "Release Note: 2020.06\nNew Features\nImproved the solution commit performance of clock eco analysis.\nSupported DeltaTrans in max-transition optimization.\nAdded \"identify_io_path_pin\" command to identify IO path pins of design.\nEnhancements\nEnhanced the buffer insertion strategy for better margin protection.\nEnhanced 5nm VT layer pin touch and min implant area rule.\nEnhanced dont_touch classification into data_dont_touch and user_dont_touch.\nEnhanced timing data and report format from STA tools.\nAdded an option \"-ip_pin_exception\" for command \"set_placement_constraint\".\nAdded a new cell attribute \"is_physical_hierarchical\", a new pin attribute \"used_as_clock\".\nAdded a parameter \"placement_legalization_obligated\" to skip some manual eco solution with failed legalization.\nAdded a Tcl variable \"power_enable_greedy_strategy\" for swapping cells to get better power result and setup margin.\nSwitched the tcl version from tcl8.5 to tcl8.6.\nFixed a crash when legalization of S12 process.\nFixed a crash when some module name having the escape character.\nFixed a crash when import design due to too many fillers in DEF.\nFixed a bug when deleting filler cells with double row height.\nFixed a bug of timing path dropped, due to \"checkpin1\" type of internal pin."
            },
            {
                "doc_id": "_xtop_release_0009",
                "summary": "The release note for XTop tool version 2019.12 highlights new features such as the addition of clock eco analysis command, commands to get attributes of objects, and ranks to pins. It also mentions enhancements in design database, reconnect_pin, timing fix, split net method, timing path report, and DEF file parser. New options for write_design_changes and commands to set rail voltage and report cell displacement were added. Fixes were made for crashes related to buffer removal method and module connect in netlist.",
                "content": "Release Note: 2019.12\nNew Features\nAdded clock eco analysis command for fixing setup and hold violations.\nAdded commands to get attributes of objects and filter objects by attributes.\nAdded a variety of ranks to pins, which can help to improve the quality of optimization.\nEnhancements\nEnhanced design database to support multiple technologies.\nEnhanced reconnect_pin to support crossing logical hierarchy.\nEnhanced timing fix on clock gating endpoint of combinational cell.\nEnhanced split net method for fixing capacitance violations.\nEnhanced timing path report and DEF file parser.\nAdded \"-exclude_new_created\" and \"-keep_route\" options for write_design_changes.\nAdded command to set rail voltage for instances.\nAdded command to report cell displacement information after optimization.\nFixed a crash when fix hold using buffer removal method.\nFixed a crash due to module connect by order in netlist."
            },
            {
                "doc_id": "_xtop_release_0010",
                "summary": "The release note for XTop tool version 2019.06.sp1 details several enhancements and bug fixes. These include resolving crashes during legal placement handling, undo actions during interactive eco, and design importation. It also addresses legalization issues of 22nm process, M0PO max length rule for 12nm process, and cell edge identification. Additionally, it enhances the \"get_paths\" command and the control of layout settings.",
                "content": "Release Note: 2019.06.sp1\nNew Features\nNone.\nEnhancements\nFixed crash while handling legal placement of 28 hkc+ process.\nFixed crash when undo action during interactive eco.\nFixed crash when importing design, if missing some via definitions in the DEF file.\nFixed legalization issues of 22nm process, which resulted in 1x filler width gap.\nFixed issue on M0PO max length rule for 12nm process.\nFixed issue of cell edge identification when cells had multiple definitions in LEF.\nFixed issue of zoomfit in top level layout viewer.\nEnhanced \"get_paths\" command, support \"-from_hierarchy\" and \"-to_hierarchy\" option.\nEnhanced the control of layout settings, supporting the cover cells."
            },
            {
                "doc_id": "_xtop_release_0011",
                "summary": "The document is a release note for XTop tool version 2019.06. It details new features such as pro mode for large designs, support for N5 rules, post-mask ECO flow, and timing window fix. It also mentions enhancements like improved speed of reading aocv tables, new options for auto optimization and get_paths commands, and enhanced scripts for hyperscale mode. Additionally, it addresses fixes for crashes during design import and buffer insertion, and rule violations for S14nm and S11nm processes.",
                "content": "Release Note: 2019.06\nNew Features\nAdded pro mode to reduce the memory consumption for large designs.\nSupported N5 rules in placement legalization.\nSupported post-mask ECO (both spare cell and GA cell) flow.\nAdded timing window fix for hold timing optimization.\nEnhancements\nImproved the speed of reading aocv tables.\nAdded “-debug_pins” option for auto optimization commands.\nReplaced “-force_include/exclude” option with \"-force\" option for write_design_changes command.\nEnhanced “-path_type” option for get_paths commands.\nEnhanced scripts to read timing reports and get ilm objects for hyperscale mode.\nFixed a crash while importing designs in parallel.\nFixed a crash while buffer insertion in manual eco, due to assign nets.\nFixed VT rule violations for S14nm process.\nEnhanced to support -side both abutment rule for S11nm process."
            },
            {
                "doc_id": "_xtop_release_0012",
                "summary": "The release note for XTop tool version 2018.12.sp1 details various enhancements made to the software. These include fixes for crashes during handling large designs in turbo mode and zooming with multi-threading enabled, legalization issues of 16nm and 12nm eco placement, and issues with importing verilog files and timing reports. It also mentions bug fixes related to split_net and setup path GBA slack. New support for POCV LVF format timing data and additional controls and parameters for timing path and PBA violations have been added. Lastly, enhancements were made to the 3rd party tools timing data generation script and physical eco script generation.",
                "content": "Release Note: 2018.12.sp1\nNew Features\nNone.\nEnhancements\nFixed crash while handling huge design in turbo mode.\nFixed crash when zoom in and zoom out with multi-threading enabled.\nFixed legalization issues of 16nm and 12nm eco placement.\nFixed issue on importing verilog file with \"strength\" keyword.\nFixed issue on importing timing report with \"clock\" port name.\nFixed a bug of split_net for SI fixing, with non-optimal buffer location.\nFixed a bug of large value of setup path GBA slack after setup PBA fixing.\nSupported POCV LVF format timing data.\nAdded control to copy driver's slack to endpoint, for timing path of blackbox-blackbox interface.\nAdded parameter to consider GBA margin when fixing PBA violations.\nEnhanced 3rd party tools timing data generation script for turbo mode.\nEnhanced physical eco script generation, improve the execution speed in PR tools."
            },
            {
                "doc_id": "_xtop_release_0013",
                "summary": "The release note for XTop tool version 2018.12 highlights new features and enhancements. New features include turbo mode for violation fix iteration, support for n7+ rules, clustering load pins, and saving/restoring 'dont touch' objects during optimization. Enhancements include optimized buffer chain placement, improved sizing down policy, a parameter for filtering solutions, a fix for a crash issue, and improved speed of getting violated pins.",
                "content": "Release Note: 2018.12\nNew Features\nAdded turbo mode to speed up violation fix iteration for large designs.\nSupport n7+ rules in placement legalization.\nSupport to cluster load pins in the same hierarchy while inserting buffer to fix hold.\nSupport to save and restore dont touch objects during optimization process. \nEnhancements\nOptimized buffer chain placement strategy for better routing result.\nEnhanced sizing down policy to reduce the error of transition estimation.\nAdded parameter to filter those solutions with too small gains while fixing setup.\nFixed a crash while sizing cells driven by black box.\nImproved the speed of getting violated pins."
            },
            {
                "doc_id": "_xtop_release_0014",
                "summary": "The release note for XTop tool version 2018.06.sp2 details new features, enhancements, and improvements. The new feature includes support for swapping flip-flops while fixing setup and hold violations. Various issues have been fixed, including crashes, processing issues, and displacement issues. The tool's placement legalization algorithm has been enhanced, and support for reading uncompressed timing data files has been added. The speed of certain operations has been improved, and a notice has been added for eco actions that cannot be dumped as macro commands.",
                "content": "Release Note: 2018.06.sp2\nNew Features\nSupport to swap flip-flops while fixing setup and hold violations.\nEnhancements\nFixed a crash of eco action reconnect pin.\nFixed a crash on legalizing multiple height cells.\nFixed an issue on reading non-rectangle power domain definition.\nFixed an issue on fixing violation with specified pins in multiple instantiated blocks.\nFixed an issue on processing bus pins defined with ascending order.\nFixed an issue on processing clock attribute on inouts while fixing setup or hold violations.\nFixed an issue on processing pulse latches.\nFixed an issue on processing memory switch pin.\nFixed an issue of displacement while swapping cells with different vt and overlap while inserting buffers.\nEnhanced placement legalization algorithm to avoid implant minWidth or minArea violations.\nEnhanced to support reading uncompressed timing data files.\nEnhanced timing report parser to support comments with multiple levels of parenthesis.\nEnhanced path view to show the worst margin of all multiple instantiated blocks. \nImproved speed on dumping timing data from STA tools.\nImproved speed of manual eco actions on pin, cell, or net with large fanin and fanout. \nAdded notice of those eco actions that cannot be dumped as macro commands while dumping with macro format specified."
            },
            {
                "doc_id": "_xtop_release_0015",
                "summary": "The release note for XTop tool version 2018.06.sp1 details various enhancements made to the software. These include fixes for crashes and issues related to eco placement, processing of cells, pins, and coordinates, and handling of placement density. The update also improved the algorithm for fixing hold violations, efficiency of fixing transition violations, and the process of fixing GBA and design rule violations. Additionally, the command source was enhanced to support option echo and log file content, and the eco script was updated for better routing results with third party PR tools.",
                "content": "Release Note: 2018.06.sp1\nNew Features\nNone.\nEnhancements\nFixed crash on eco placement while processing vt abutment rule.\nFixed crash on manually splitting net with special route structure.\nFixed issue on handling placement density in eco placement.\nFixed issue on processing cells with ring shapes in eco placement.\nFixed issue on processing pin shapes with non rectangle definitions.\nFixed issue on processing negative coordinates in power domain file.\nImproved algorithm of fixing hold violations to reduce the number of buffers by relaxing the constraint of driver.\nImproved the efficiency of fixing transition violations.\nEnhanced fixing violation process to fix specified GBA and design rule violations.\nEnhanced summarizing violations with fail reasons and exclude dont touch pins.\nEnhanced fixing violation process to generate a report automatically in workspace.\nEnhanced command source to support option echo and log the file content.\nUpdated the eco script for third party PR tools for better routing result."
            },
            {
                "doc_id": "_xtop_release_0016",
                "summary": "",
                "content": "Release Note: 2018.06\nNew Features\nSupport to fix fanout violations.\nSupport to fix wire length violations.\nSupport to fix SI violations.\nSupport to swap FF while optimizing leakage power.\nSupport pin access rule up to 7nm process.\nEnhancements\nAdjusted GUI architecture for automatic optimization flow.\nFixed issue of reporting fail reasons of automatic optimization flow."
            }
        ]
    },
    {
        "source": "_xtop_ug",
        "amount": 25,
        "knowledge": [
            {
                "doc_id": "_xtop_ug_0001",
                "summary": "ICExplorer-XTop is a tool designed to fix timing and design rule violations, and reduce power and area cost in designs. It can address issues such as setup and hold timing violations, transition, capacitance, fanout, SI, noise glitch, and physical rule violations. It also aims to reduce leakage power and cell area. The tool uses ECO operations supported by general design tools to fix issues and reduce costs, including size cell, move cell, insert or remove buffer or inverter chain, split load of net into groups, on-route split net, and reconnect clock pin.",
                "content": "ICExplorer-XTop User Guide\nVersion 2023.03\nChapter 2. Introduction\nOverview\nICExplorer-XTop is a tool which aims at fixing timing, design rule violations, reducing power and area cost in designs.\nIssues Can Be Solved\nICExplorer-XTop can help in following categories.\nTiming violations\nSetup timing violations\nHold timing violations\nDesign rule violations\nTransition violations\nCapacitance violations\nFanout violations\nSI violations\nNoise Glitch violations\nPhysical rule violations\nWire length violations\nReduce cost\nReduce leakage power\nReduce cell area\nMethods Used\nICExplorer-XTop uses ECO operations that general design tools supported to fixing issues and reducing cost.\nSize cell\nMove cell\nInsert buffer or inverter chain\nRemove buffer or inverter pair\nSplit load of net into groups\nOn-route split net\nReconnect clock pin"
            },
            {
                "doc_id": "_xtop_ug_0002",
                "summary": "The document provides instructions on how to install and invoke ICExplorer-XTop, a package that comes as a zipped tar ball. It details the process of setting the correct license file before invoking the tool, and outlines various command options for using ICExplorer-XTop, such as displaying information, software version, starting in GUI mode, sourcing a specified file, executing a specified command after setup, and setting a suffix for command.txt and log.txt. It also mentions an implicit option -auto_exit for handling errors during TCL command execution. The tool is only supported on Linux x86_64 systems, specifically RHEL5, RHEL6, RHEL7, and equivalent Linux releases.",
                "content": "Installing And Invoking ICExplorer-XTop\nInstalling\nThe ICExplorer-XTop package is a zipped tar ball, and can be installed by just extracting it.\n% tar zxvf icexplorer-xtop-2017.09-rhel5-x86_64-20171015.tar.gz \nInvoking\nBefore invoking ICExplorer-XTop, it needs to set correct license file first.\n% setenv LM_LICENSE_FILE port@host\n% install_path/bin/icexplorer-xtop \nCommand Options\nInvoking icexplorer-xtop with -h, it will print all information of options.\n% icexplorer-xtop -h\nUsage: \n  icexplorer-xtop\n    [-h | -help]            Display this information.\n    [-v | -version]         Display software version.\n    [-gui]                  Start in gui mode.\n    [-f | -file <file>]     Source specified file.\n    [-x <command>]          Execute specified command after setup.\n    [-log_suffix <suffix>]  Suffix for command.txt and log.txt.\n                            Log files will be command_suffix.txt\n                            and log_suffix.txt if specified.  \nThere is also an implicit option -auto_exit. While running test flow on multiple cases in background, it will interrupt and hang there if some error occurs while executing TCL commands, and this is not the expected behavior. By specifying -auto_exit, ICExplorer-XTop will exit automatically while encountering errors.\nSupported Platforms\nOnly Linux x86_64 systems are supported. The default package is for RHEL5, and is compatible with RHEL6, RHEL7, and other equivalent Linux releases."
            },
            {
                "doc_id": "_xtop_ug_0003",
                "summary": "The document provides a step-by-step guide on how to use ICExplorer-XTop, a tool for integrated circuit design. The process involves three main steps: building a workspace, optimizing the design, and exporting the eco actions. Each step includes specific commands for tasks such as creating a workspace, linking reference libraries, importing design data, creating corners, modes and scenarios, linking timing libraries, and reading timing data files.",
                "content": "Steps To Use ICExplorer-XTop\nThis section introduces a flow of how to use ICExplorer-XTop by running through the tutorial cases. There are roughly three main steps: build workspace, optimize design and export the eco actions. \nBuild Workspace\nTo build workspace and import design data, it needs the following steps. \nCreate a workspace.\nxtop> create_workspace tutorial \nLink reference libraries.\nxtop> link_reference_library -format lef \"./lef/turorial.lef\" \nImport design data.\nxtop> define_designs -verilogs netlistFileNames -defs defFileNames\nxtop> set_site_map  {unit core12T}\nxtop> import_designs \nCreate corners, modes and scenarios.\nxtop> create_corner {slow}\nxtop> create_corner {fast}\nxtop> create_mode {func}\nxtop> create_mode {test}\nxtop> create_scenario -corner {slow} -mode {func} {func_slow}\nxtop> create_scenario -corner {fast} -mode {func} {func_fast}\nxtop> create_scenario -corner {slow} -mode {test} {test_slow}\nxtop> create_scenario -corner {fast} -mode {test} {test_fast} \nLink timing libraries.\nxtop> link_timing_library -corner {slow} \\\n                          -search_type min_max {./lib/tutorialwc.idb}\nxtop> link_timing_library -corner {fast} \\\n                          -search_type min_max {./lib/tutorialbc.idb} \nRead timing data files.\nxtop> read_timing_data -data_dir ./sta_data"
            },
            {
                "doc_id": "_xtop_ug_0004",
                "summary": "The document provides a guide on how to use the XTop tool for design optimization. It covers how to analyze violations, configure ECO settings, perform manual ECO, and automatic flow for various optimizations. It also explains how to export ECO actions using the write_design_changes command.",
                "content": "Optimize Design\nAnalyze Violations\nIn the Timing view panel, select setup or hold timing paths of specified range. Click the \"Analyze Paths\" button at the bottom, tools will perform analysis on the given data paths or clock paths. \n\"Timing Analysis\" window will pop up, which shows the bottleneck points of violations. Click the bottleneck point, related paths will be listed in table. Double click the table item, the timing path will be displayed in the path view. \nIn the timing path, incremental delay and margin information of each cell or pin will be shown. Top 20% worst incr delay will be marked in red for notice. Right click the cell or pin to perform the eco action. Afterwards, timing information will be updated and marked in different color. \nConfigure ECO Settings\nIn the XTop main window, click the menu: Setup->Configure Parameters, \"Configure Parameters\" window will pop up. Parameter values can be changed in the table, which will control the tools optimization behavior. \nFor example, set the eco_buffer_list_for_hold parameter to specify the buffers that can be used to fix hold timing. \nManual ECO\nRight click the cell or pin on the path view or the layout, following manual eco actions can be triggered. \nMove Cell\nSize Cell\nInsert Buffer\nInsert Buffer Chain\nSplit Load\nSplit Net\nReconnect Pin\nRemove Buffer\nPlease note that, each manual eco can be cancelled by undo command step by step. \nAutomatic Flow\nXTop can also perform automatic optimizations for different purposes. \nxtop> fix_hold_path_violations \nxtop> fix_hold_gba_violations \nxtop> fix_setup_path_violations \nxtop> fix_setup_gba_violations \nxtop> fix_capacitance_violations \nxtop> fix_transition_violations\nxtop> fix_fanout_violations\nxtop> fix_wire_length_violations\nxtop> fix_si_violations\nxtop> fix_glitch_violations\nxtop> optimize_leakage_power\nxtop> optimize_design_area \nExport ECO Actions\nAfter eco actions (either in manual mode or auto mode), please run write_design_changes command to export the results according to the given format. \nxtop> write_design_changes -format NATIVE \\\n                           -eco_file_prefix xtop_opt -output_dir ./ \nThe result eco scripts can be directly applied by PR or STA tools."
            },
            {
                "doc_id": "_xtop_ug_0005",
                "summary": "This document provides instructions on how to manage a workspace in XTop, including creating a workspace, linking a reference library, importing designs and power domains. It also details the use of various command options such as -overwrite, -logical_only, -force, -format type_name, -verilogs, -defs, set_site_map, and import_power_domain.",
                "content": "Chapter 3. Manage Workspace\nWorkspace is a directory to store all the data for libraries, designs, and timing data. \nCreate Workspace\nError will be reported if it is failed to create the directory, or the directory is not writable. If the path already exists and is not empty, user can continue by specifying -overwrite option to continue. \nxtop> create_workspace [-overwrite] [-logical_only] workspaceName \nLink Reference Library\nReference library files can be LEF and OpenAccess library definition. For logical only workspace, timing libraries can be also used. For LEF files, it is recommended to put the technology LEF file in front of list. \nOnce any design data has been imported, option -force must be specified to modify the reference library, and all design data will be purged. \nxtop> link_reference_library [-force] [-format type_name] files \nImport Designs\nDesign can be defined with Verilog and DEF files. For a block hierarchical design, it needs to define each design from bottom up one by one. The contents of verilog and DEF files will be imported into the design. The design will be saved automatically. \nxtop> define_designs -verilogs vFileList -defs defFileList\nxtop> import_designs \nSome PR tools will output a meaningless site name (e.g. unit) while exporting the DEF files. It needs to specify a site map from DEF to those defined in the LEF library if the sites do not match. \nxtop> set_site_map { unit core6T } \nImport Power Domains\nPower domain configuration can be imported from UPF or region file. For hierarchical design having multiple power domains, please specify the -design option in the command. \nUse command report_power_domain to report power domain. Use command purge_power_domain to purge the power domain of the specified design. \nxtop> import_power_domain [-design designName] \\\n                          [-upf_file fileName] \\\n                          [-region_file fileName]"
            },
            {
                "doc_id": "_xtop_ug_0006",
                "summary": "This document provides instructions on how to use XTop tools, including creating corners, modes, and scenarios, linking timing libraries, reading timing data and paths, and saving and opening workspaces. It also provides specific command lines for each operation and notes the importance of consistency in scenario names.",
                "content": "Create Corners, Modes and Scenarios\nScenario consists of corner and mode. For multi-corners and multi-modes, it can also be created automatically by sweeping the corners and modes. \nxtop> create_corner cornerName\nxtop> create_mode modeName\nxtop> create_scenario -corner cornerName -mode modeName scenarioName\nxtop> create_scenario -auto sceName \nPlease note, the scenario name here must be consistent with the scenario name of annotated timing data files that were dumped from STA tools. \nLink Timing Libraries\nTiming library files are linked to the specified corner. By default, the library is used for both min and max analysis in this corner. LVF libraries for advanced process are supported.\nUse command unlink_timing_library to unlink timing library files from specified corner. \nxtop> link_timing_library -corner cornerName \\\n                         [-search_type min|max|min_max] files \nRead Timing Data and Paths\nTools will read timing data from files. The files are generated with the corresponding scripts from STA tools with a pre-defined naming format. If all the necessary files are available, it will read in all the timing data. Otherwise, error will be reported. \nxtop> read_timing_data -data_dir path \nSave and Open Workspace\nWhen current workspace is saved, all the designs, timing data, eco actions, user settings will be saved in to the workspace directory. Once the saved workspace is reopened again, all the data and eco actions are consistent except that the manual eco action cannot be undone since all check points have been cleaned. \nxtop> save_workspace [-as path [-overwrite]]\nxtop> open_workspace workspaceName"
            },
            {
                "doc_id": "_xtop_ug_0007",
                "summary": "This document provides instructions on how to use various commands in the XTop tool. It covers the 'Dont Touch' setting, which prevents certain objects from being modified during the optimization process. It also discusses the 'Library Per Instance' feature, which allows users to specify a special library for some module instances. Additionally, it explains how to skip certain scenarios that are not relevant to the user. The commands discussed include 'set_dont_touch', 'get_dont_touch_cells', 'get_dont_touch_nets', 'get_dont_touch_pins', 'is_dont_touch', 'set_lib_per_instance', 'remove_lib_per_instance', and 'set_skip_scenarios'.",
                "content": "Workspace Settings\nDont Touch\nIf one object (cell, net, pin, path) is set dont touch, it means it will not be modified during optimization process. For path, it means that tools will not try to fix the violations on that path. \nUse command get_dont_touch_cells, get_dont_touch_nets, get_dont_touch_pins to get those objects. Use command is_dont_touch to return if it is dont touch. \nxtop> set_dont_touch object_list [true|false] \nLibrary Per Instance\nFor hierarchical design, user can specify some module instance using the special library. The cells in such module will try to find the library cell only inside the specified libraries. \nThe special library can be given by the library name, or the library file name. The library of file must be already linked to the specified corner. Otherwise, error will be reported. \nUse command remove_lib_per_instance to remove the library per instance settings for the specified instance. \nxtop> set_lib_per_instance [-corner cornerName] instance libs \nSkip Scenarios\nUser can skip some dont care scenarios. While one scenario is set to be skipped, the corresponding timing will not be taken into account in ECO flow. However, it will also be updated after ECO to keep integrity of timing. \nxtop> set_skip_scenarios [-min] [-max] scenarioNames true/false \nIf none timing mode min or max is specified, it will act as both of them are specified, and all timing are skipped for this scenario."
            },
            {
                "doc_id": "_xtop_ug_0008",
                "summary": "This chapter discusses how to analyze and optimize design using both manual and automatic flows in XTop. It introduces the use of filters in the Timing view panel to select timing paths, and the get_paths command to select paths. It also explains the Timing Analysis feature, which includes a bottleneck page and a path view page for analyzing and optimizing timing paths.",
                "content": "Chapter 4. Optimize Design\nThis chapter is about how to analyze the design, and optimize it by manual and automatic flows. \nAnalyze Violations\nTiming Path Filter\nIn the Timing view panel, there are filters which can help user to select the proper range of timing paths. \nThe filter conditions include: path type (min or max), slack value, scenario, clock group, if path is from register to register, if path is completely conflict (all points in the path have negative margin)... \nThe qualified paths will be listed, with the path ID, path slack information. User can perform analysis and optimization based on those timing paths. \nUser can also select timing paths by get_paths command. \nxtop> get_paths -help\n\nSYNOPSIS\n  collection get_paths\n    [-quiet]\n    [-completely_conflict]\n    [-path_names names]\n    [-within within_module\n     | -across across_module]\n    [-from_hierarchy from_hierarchy_name]\n    [-to_hierarchy to_hierarchy_name]\n    [-delay_type dtype]\n    [-path_type ptype]\n    [-lower_bound lower_bound]\n    [-upper_bound upper_bound]\n    [-scenario scenario]\n    [-group group]\n    [-through_points through]\n    [-start_points start]\n    [-end_points end]\n    [-filter expression]\nThe return result will be a collection of paths. It can be passed into the tools to do reporting, analysis and optimization. \nTiming Analysis\nClick the analysis button (on selected paths or all paths), \"Timing Analysis\" window will pop up. There are two pages: bottleneck, and path view. \nIn the bottleneck page, tools will automatically select the best topN candidate points of given timing paths to optimize, according to some strategy. For setup timing analysis, the strategy could be: bottleneck, incremental delay, transition, SI, fanout, path length, violated path number, TNS, WNS; for hold timing analysis, the strategy could be: bottleneck, SI, violated path number, TNS, WNS. \nThe topN candidate points will be listed in the table. Click each point, the related timing paths will be displayed below, with path ID and timing information shown. Right click the point, manual eco actions can be performed. \nPath View\nClick each timing path, the path view page will show up. It will list the cell/pin in the path, with master name, incremental delay and margin information. User can select the cell or pin, right click to do manual eco, or show the location in layout view. \nOn the right, there are summary and options of the timing path. For example, user can control whether to display launch/capture path, whether to display cell or net on the path, whether to display the ratio bar, and also select the columns to display."
            },
            {
                "doc_id": "_xtop_ug_0009",
                "summary": "",
                "content": "Configure ECO Settings\nBefore real eco operations, it is necessary to set correct parameter according to the requirement and design status. \nGeneral settings.\n\nECO methods related settings.\n\nPlacement related settings.\n\nUser specified rules.\n\nTargets, margins and other timing related constraints."
            },
            {
                "doc_id": "_xtop_ug_0010",
                "summary": "The document provides instructions on how to use various features of the XTop tool, including sizing cell, inserting buffer, inserting buffer chain, splitting load, splitting net, moving cell, removing buffer, reconnecting pin, inserting dummy, exchanging cell, and undoing actions. Each feature is triggered by right-clicking on a specific element (cell, pin, net) in the bottleneck analysis table, path view, or layout and selecting the corresponding menu option. The actions are executed using specific XTop commands.",
                "content": "Manual ECO\nSize Cell\nRight click a cell on bottleneck analysis table, or path view, or layout, select \"Size Cell...\" menu, it will trigger sizing cell eco action. \nxtop> size_cell -design {cpu} {U414} {OAI222XD4EPHVT} \nInsert Buffer\nRight click a pin on bottleneck analysis table, or path view, or layout, select \"Insert Buffer...\" menu, it will trigger buffer insertion eco action. \nxtop> insert_buffer -design {cpu} {alu/U137/I} {BUFFD0EP} \nInsert Buffer Chain\nRight click a pin on bottleneck analysis table, or path view, or layout, select \"Insert Buffer Chain...\" menu, it will trigger buffer chain insertion eco action. \nxtop> insert_buffer -design {cpu} {alu/U137/I} \\\n                    {BUFFD0EPHVT BUFFD6EP BUFFD12EP BUFFD16EPLVT} \nSplit Load\nRight click a pin on bottleneck analysis table, or path view, or layout, select \"Split Load...\" menu, it will trigger split load eco action. \nxtop> split_load -design {cpu} -lib_cell {BUFFD12EP} \\\n                 -pin_group {...} -locations {(x,y)} \\\n                 -pin_group {...} -locations {(x,y)} \nSplit Net\nRight click a net on bottleneck analysis table, or path view, or layout, select \"Split Net...\" menu, it will trigger split net eco action. \nxtop> split_net -design {cpu} -lib_cell {BUFFD2EP} -segments 3 \\\n                -rule cap|wire_length -scenario func_fast { _netName_ } \nMove Cell\nRight click a cell on layout (press Ctrl to select multiple cells), select \"Move Cell...\" menu, it will trigger moving cell eco action. \nxtop> move_cell -design {cpu} -delta {(-15.400, +9.600)} { _cellName_ } \nUser can also continuously move cells without commit for each time, by selecting the \"Move Cell Plus...\" menu. \nRemove Buffer\nRight click a buffer on bottleneck analysis table, or path view, or layout, select \"Remove Buffer...\" menu, it will trigger deleting buffer eco action. \nxtop> remove_buffer -design {cpu} {regs/dram1/U181/add_buf_1} \nReconnect Pin\nRight click an input pin of clock path on bottleneck analysis table, or path view, or layout, select \"Reconnect Pin...\" menu, it will trigger reconnect pin eco action. \nxtop> reconnect_pin -design {designName} {inputPinName} {netName} \nInsert Dummy\nRight click a pin on bottleneck analysis table, or path view, or layout, select \"Insert Dummy...\" menu, it will trigger insert dummy eco action. \nxtop> insert_dummy_cell -design {cpu} {regs/dram1/C3/U457/I} {BUFFD12EP} \nExchange Cell\nRight click a pin on bottleneck analysis table, or path view, or layout, select \"Exchange Cell...\" menu, it will trigger exchange cell eco action. \nxtop> exchange_cell -design {cpu} { U333 } { U357 } \nUndo\nManual eco actions can be canceled by undo (at most 32 times suggested) \nIn the \"eco Actions\" panel, \"History\" page, the actions will be listed in table. Select the action and click \"Undo\" button. \nxtop> undo"
            },
            {
                "doc_id": "_xtop_ug_0011",
                "summary": "The document provides a detailed overview of the XTop tool's Automatic ECO feature, which is designed to automatically fix design violations and optimize costs. It discusses various methods used in the optimization flow, including buffer insertion, cell sizing, net splitting, and buffer or inverter pair removal. It also explains how to fix setup and hold violations, the disadvantages of GBA and PBA, and the commands to fix these violations.",
                "content": "Automatic ECO\nAutomatic eco provides a flow to fix the violations or optimize the cost automatically by scanning the design. It can fix the setup and hold timing violations, the design rule violations, include transition, capacitance, fanout, wire length, SI and glitch violations. Also, by swapping cells with different vt or channel length or sizing down cells, it can help to reduce the leakage power and cell area without bring new timing and design rule violations. \nA variety of methods can be used in the optimization flow, including insert buffer, size cell, split net, and remove buffer or inverter pairs. \nFix Setup and Hold Violations\nAs a normal flow, XTop will read in the global setup and hold slack information dumped from STA tool. Timing report is also supported but not obligated. XTop provides both commands to fix GBA and PBA violations. However it should be chosen carefully according to the design scale, the violation count, and the severity of violations. \nGBA disadvantages\nPessimistic violations which will cause over fix and extra cost of resources.\nLow flexibility to choose violations to fix.\nPBA disadvantages\nLow coverage while there exists plenty of violations.\nExtra memory and time to dump, read and update timing paths.\nAccording to the disadvantages of GBA and PBA, when there are only a small amount of violations or the design area are really limited, PBA is recommended. Otherwise, GBA is a better choice since it converges faster. \nFor hold violations, the most effective method is to insert buffer chain to increase the delay. In order to keep consistency, XTop only allows to insert buffers at the sinks of nets. For small hold violations, insert dummy optimization method can be used. Another way is to size cells to weaker drive strength, including size down cells, or size cell to different vt or channel length. Size up is prohibited here to avoid ineffective solutions though it is reasonable for delay buffers. For very small violations, XTop offers insert dummy cell method to increase wire load by adding a dummy cell on net. \nIn hold fix, we provide a flag -max_cluster_loader_count to try to reduce buffer count, and also improve fix result. This feature is suggested to turn on if user find buffer count is not optimized as expect. Sometimes, there are many 'break_setup' reasons in summary after a normal fix. For this case, flag -fix_timing_window can be turned on to try to get a better setup margin and fix result. \nFor setup violations, the recommended methods are size cell, insert buffer and split net. While these methods are specified together, XTop will choose the best one of them by evaluating the benefit and cost. Another special method is to remove redundant buffers or inverter pairs. \nThe normal flow does not allow to bring any new violations or worsen the existing violations. If such situation encountered, corresponding fail reason will be marked on pins, and current solution will be abandoned. \nFollowing are the corresponding commands to fix setup and hold violations. For detail, please query the handbook or with command man in XTop.\n\nxtop> fix_setup_gba_violations\nSYNOPSIS\n  int fix_setup_gba_violations\n    [-buffer_list buffer_names]\n    [-remove_buffer_only]\n    [-methods method_list]\n    [-size_rule rule_type]\n    [-dff_only\n     | -size_down_only]\n    [-setup_target slack_val]\n    [-hold_margin margin_val]\n    [-transition_margin margin_val]\n    [-rel_transition_margin rel_margin_val]\n    [-capacitance_margin margin_val]\n    [-effort effort_level]\n    [-group]\n    [-priority_weight type_name]\n    [-summarize_internal_iteration]\n    [-disable_report]\n    [-only_pins pin_list\n     | violations]\n    [-debug_pins pin_list]\n\nxtop> fix_setup_path_violations\nSYNOPSIS\n  int fix_setup_path_violations\n    [-buffer_list buffer_names]\n    [-remove_buffer_only]\n    [-methods method_list]\n    [-size_rule rule_type]\n    [-dff_only\n     | -size_down_only]\n    [-setup_target slack_val]\n    [-hold_margin margin_val]\n    [-transition_margin margin_val]\n    [-rel_transition_margin rel_margin_val]\n    [-capacitance_margin margin_val]\n    [-only_pins pin_list]\n    [-debug_pins pin_list]\n    [-effort effort_level]\n    [-priority_weight type_name]\n    [-summarize_internal_iteration]\n    [-disable_report]\n    [paths]\n\nxtop> fix_hold_path_violations\nSYNOPSIS\n  int fix_hold_path_violations\n    [-buffer_list buffer_names]\n    [-size_cell_only\n     [-size_rule rule_type]\n     [-dff_only]]\n    [-hold_target slack_val]\n    [-setup_margin margin_val]\n    [-transition_margin margin_val]\n    [-rel_transition_margin rel_margin_val]\n    [-capacitance_margin margin_val]\n    [-only_pins pin_list]\n    [-debug_pins pin_list]\n    [-effort effort_level]\n    [-summarize_internal_iteration]\n    [-disable_report]\n    [-max_cluster_loader_count max_count]\n    [-fix_timing_window]\n    [-use_dummy_cell\n     [-dummy_only]]\n    [-max_delay_cell_length max_delay_cell_len\n     -delay_cell_list delay_cell_names]\n    [paths]\n\nxtop> fix_hold_gba_violations\nSYNOPSIS\n  int fix_hold_gba_violations\n    [-buffer_list buffer_names]\n    [-size_cell_only\n     [-size_rule rule_type]\n     [-dff_only]]\n    [-hold_target slack_val]\n    [-setup_margin margin_val]\n    [-transition_margin margin_val]\n    [-rel_transition_margin rel_margin_val]\n    [-capacitance_margin margin_val]\n    [-effort effort_level]\n    [-group]\n    [-summarize_internal_iteration]\n    [-disable_report]\n    [-max_cluster_loader_count max_count]\n    [-fix_timing_window]\n    [-use_dummy_cell\n     [-dummy_only]]\n    [-max_delay_cell_length max_delay_cell_len\n     -delay_cell_list delay_cell_names]\n    [-only_pins pin_list\n     | violations]\n[-debug_pins pin_list]"
            },
            {
                "doc_id": "_xtop_ug_0012",
                "summary": "The document provides information about XTop's ability to fix three types of timing rule violations: transition, capacitance, and fanout. It details the solutions for these violations and mentions that it does not consider hold and setup timing violations during the fixing process. The document also explains the separate fixing of clock and data path violations and provides commands to fix timing rule violations, including 'fix_transition_violations', 'fix_capacitance_violations', and 'fix_fanout_violations', with their respective options.",
                "content": "Fix Timing Rule Violations\nXTop supports to fix all three types of timing rule violations: transition, capacitance, and fanout. The solutions for such violations are to improve the driver capability by sizing or inserting buffer, or decomposing the load by splitting net. \nWhile fixing such violations, it does NOT care about the hold and setup timing violations. That is to say it is possible to bring new hold or setup violations after fixing. Anyway, transition and capacitance rules are checked for the driver stage to avoid bring new transition or capacitance violations. But XTop also offered an option named check_timing_margin, which will allow user to check hold and setup. It may be useful when there's very few transition violations and almost has no timing violation. \nClock and data path violations are designed to fix separately since different policy or buffers may be specified. It is almost impossible for XTop to update the setup and hold time if a lot of eco actions applied on clocks, and XTop gives up to do this in the fixing process. So, it is recommended to fix violations on clock in the last step, and apply the whole flow immediately. \n-dff_only can be set to size only DFFs to fix transition and capacitance violations. \nFollowing are the corresponding commands to fix timing rule violations. For detail, please query the handbook or with command man in XTop.\n\nxtop> fix_transition_violations\nSYNOPSIS\n  int fix_transition_violations\n    [-on_clock | -dff_only]\n    [-buffer_list buffer_names]\n    [-methods method_list]\n    [-size_rule rule_type]\n    [-transition_target slack_val]\n    [-transition_margin margin_val]\n    [-rel_transition_margin rel_margin_val]\n    [-capacitance_margin margin_val]\n    [-check_timing_margin]\n    [-disable_report]\n    [-debug_pins pin_list]\n    [violations]\n\nxtop> fix_capacitance_violations\nSYNOPSIS\n  int fix_capacitance_violations\n    [-on_clock | -dff_only]\n    [-buffer_list buffer_names]\n    [-methods method_list]\n    [-size_rule rule_type]\n    [-capacitance_target slack_val]\n    [-transition_margin margin_val]\n    [-rel_transition_margin rel_margin_val]\n    [-capacitance_margin margin_val]\n    [-check_timing_margin]\n    [-disable_report]\n    [-debug_pins pin_list]\n    [violations]\n\nxtop> fix_fanout_violations\nSYNOPSIS\n  int fix_fanout_violations\n    [-buffer buffer_inverter_name]\n    [-max_fanout threshold]\n    [-on_clock]\n    [-disable_report]\n    [-debug_pins pin_list]\n[violations]"
            },
            {
                "doc_id": "_xtop_ug_0013",
                "summary": "This document provides information on how to use the XTop tool to fix wire length violations in certain processes. It explains that XTop can split nets that exceed the maximum length limitation using a specified buffer or inverter, but it may cause setup, hold or timing rule violations. The document also provides the command 'fix_wire_length_violations' with various options for this purpose.",
                "content": "Fix Wire Length Violations\nFor some process, there is a limitation on wire length to avoid issues of process. XTop can split the nets that exceed the max length limitation with specified buffer or inverter to meet the constraint. XTop calculates the timing but does NOT care about any setup, hold or timing rule violations. That is to say it is possible to bring any setup, hold or timing rule violations after fixing wire length violations. Thus, it is important to specify a proper buffer or inverter for splitting the nets. \nSimilar to fixing timing rule violations, it also gives up to update setup and hold timing while fixing violations on clock. \nFollowing are the corresponding command to fix wire length violations. For detail, please query the handbook or with command man in XTop.\n\nxtop> fix_wire_length_violations\nSYNOPSIS\n  int fix_wire_length_violations\n    [-buffer buffer_inverter_name]\n    [-max_wire_length threshold]\n    [-on_clock]\n    [-disable_report]\n    [-debug_pins pin_list]\n[violations]"
            },
            {
                "doc_id": "_xtop_ug_0014",
                "summary": "This document provides information on how to fix Signal Integrity (SI) violations using the XTop tool. It suggests reducing the delta delay of SI to a specified threshold before real timing eco. The tool also offers an option named check_timing_margin for checking hold and setup. The command for fixing SI violations in XTop is 'fix_si_violations', with various options such as -max_si, -on_clock, -buffer, -methods, -size_rule, -check_timing_margin, -wire_length_threshold, -disable_report, and -debug_pins.",
                "content": "Fix SI Violations\nThere is actually no default constraint on SI in timing verification. It is found that the bigger SI effects, the bigger uncertainty will be introduced in the eco flow. To avoid dramatic change of SI effect, it is recommended to reduce the delta delay of SI to a specified threshold by sizing cell or splitting net before real timing eco. \nSimilar to fixing timing rule violations, it also gives up to update setup and hold timing while fixing violations on clock. \nXTop also offered an option named check_timing_margin, which will allow user to check hold and setup. \nFollowing are the corresponding command to fix SI violations. For detail, please query the handbook or with command man in XTop.\n\nxtop> fix_si_violations\nSYNOPSIS\n  int fix_si_violations\n    [-max_si threshold]\n    [-on_clock | -dff_only]\n    [-buffer buffer_inverter_name]\n    [-methods method_list]\n    [-size_rule rule_type]\n    [-check_timing_margin]\n    [-wire_length_threshold length_threshold]\n    [-disable_report]\n    [-debug_pins pin_list]\n[violations]"
            },
            {
                "doc_id": "_xtop_ug_0015",
                "summary": "The document provides information about the XTop tool's ability to fix glitch violations. It explains that XTop can split nets to reduce glitch heights using a specified buffer or inverter, but it may cause setup, hold or timing rule violations. It also mentions the use of the size cell method for reducing glitch height and the option to check hold and setup using the check_timing_margin command. The command to fix glitch violations in XTop is fix_glitch_violations, with various options detailed.",
                "content": "Fix Glitch Violations\nThere is a limitation on noise glitch height to avoid issues of process. This limitation cannot be set by users, it is given from preceding tool. XTop can split the nets that reduces these glitch heights with specified buffer or inverter to meet the constraint. XTop calculates the timing but does NOT care about any setup, hold or timing rule violations. That is to say it is possible to bring any setup, hold or timing rule violations after fixing glitch violations. Thus, it is important to specify a proper buffer or inverter for splitting the nets. \nXTop can also use size cell method to reduce glitch height. But size cell method can only fix violation pins with small absolute value of slack. \nSimilar to fixing timing rule violations, it also gives up to update setup and hold timing while fixing violations on clock. \nXTop also offered an option named check_timing_margin, which will allow user to check hold and setup. \nFollowing are the corresponding command to fix glitch violations. For detail, please query the handbook or with command man in XTop.\n\nxtop> fix_glitch_violations\nSYNOPSIS\n  int fix_glitch_violations\n    [-on_clock | -dff_only]\n    [-buffer buffer_inverter_name]\n    [-methods method_list]\n    [-size_rule rule_type]\n    [-disable_report]\n    [-check_timing_margin]\n    [-wire_length_threshold length_threshold]\n    [violations]\n[-debug_pins pin_list]"
            },
            {
                "doc_id": "_xtop_ug_0016",
                "summary": "The document provides information about XTop's cost optimization features. It explains how XTop uses timing redundant slacks to reduce design cost, including leakage power and cell area, through processes called leakage optimization and area optimization. It also mentions that the default flow only commits eco operations on data path, with an option to swap DFFs. The document further provides commands for optimizing leakage power and design area, each with a list of options for customization.",
                "content": "Optimize Cost\nXTop can utilize the timing redundant slacks to reduce the cost of design, including leakage power and cell area. The process to swap cells between different vt and channel lengths is called leakage optimization, and the process to size down cell or remove buffers is called area optimization. During the optimization, setup, hold and all design rules are considered, and it avoids to bring new violations after optimization. \nThe default flow only commits eco operations on data path. DFFs can also be swapped with an extra option -dff_only. However, it will be more timing consuming than data path if there exists complex mutual constraints between DFFs. \nFollowing are the corresponding commands to optimize leakage power and design area. For detail, please query the handbook or with command man in XTop.\n\nxtop> optimize_leakage_power\nSYNOPSIS\n  int optimize_leakage_power\n    [-keywords name_list]\n    [-hold_margin margin_val]\n    [-setup_margin margin_val]\n    [-transition_margin margin_val]\n    [-rel_transition_margin rel_margin_val]\n    [-capacitance_margin margin_val]\n    [-effort effort_level]\n    [-group]\n    [-summarize_internal_iteration]\n    [-dff_only\n     | -enable_multithread]\n    [-auto_iteration iteration_number]\n    [-only_pins pin_list\n     | cells]\n    [-debug_pins pin_list]\n\nxtop> optimize_design_area\nSYNOPSIS\n  int optimize_design_area\n    [-remove_buffer_only\n     | -pattern str]\n    [-dff_only]\n    [-hold_margin margin_val]\n    [-setup_margin margin_val]\n    [-transition_margin margin_val]\n    [-rel_transition_margin rel_margin_val]\n    [-capacitance_margin margin_val]\n    [-effort effort_level]\n    [-summarize_internal_iteration]\n    [-only_pins pin_list\n     | cells]\n[-debug_pins pin_list]"
            },
            {
                "doc_id": "_xtop_ug_0017",
                "summary": "The information provided is about the XTOP tool's ability to write an incremental SDF file during the fix process. This process can clean hold violations and attempt to clean setup violations. The command 'write_incremental_sdf' is used with various options such as -dir, -reserved_cell_delay_percentage, -target, -anno_derate, and -both_timing_type to control different aspects of the process.",
                "content": "Write incremental SDF file.\nXTOP can write an incremental SDF file during fix process, which can clean hold violations and tries to clean setup violations. \nUse -dir to specify the directory to save these SDF files. -reserved_cell_delay_percentage is to control reserved delay when decreasing cell delay for setup. \nUser can specify extra -target to keep hold clean. \n\nxtop> write_incremental_sdf\nSYNOPSIS\n  int write_incremental_sdf\n    -dir dir_name\n    [-prefix prefix_name]\n    {-hold\n     | {-setup\n        [-reserved_cell_delay_percentage reserved_delay_percentage}}]\n    [-target target_val]\n    [-anno_derate derate_val]\n[-both_timing_type]"
            },
            {
                "doc_id": "_xtop_ug_0018",
                "summary": "This is a description of the XTOP tool's analyze_scenario_reduction command. It can analyze all scenarios after building a timing graph and before reading timing data, returning a list of dropped scenarios. The command includes options to specify -hold_top_n or -setup_top_n or both, to get the topN worst scenarios. Other options include -data_dir, -hold_coverage, -setup_coverage, -must_include, -factor, -force_read, -verbose, -hold_uncovered, and -setup_uncovered.",
                "content": "Analyze scenario reduction.\nXTOP can analyze all scenarios after build_timing_graph and before read_timing_data, by reading all GBA pin slack data, and return a dropped scenario list. \nUser can specify -hold_top_n or -setup_top_n or both, to get wanted \"topN\" worst scenarios, which is analyzed from data in -data_dir. \nIf reduce_scenario is not called, only analysis, no real reduction is made. \n\nxtop> analyze_scenario_reduction\nSYNOPSIS\n  string_list analyze_scenario_reduction\n    -data_dir path\n    [-hold_top_n hold_val\n     | -hold_coverage hold_cov]\n    [-setup_top_n setup_val\n     | -setup_coverage setup_cov]\n    [-must_include must_include_scenario_names]\n    [-factor gain_factor]\n    [-force_read]\n    [-verbose\n     [-hold_uncovered hold_limit\n      | -setup_uncovered setup_limit]]"
            },
            {
                "doc_id": "_xtop_ug_0019",
                "summary": "The document provides information about XTop's Clock ECO analysis tool, which analyzes the impact of changes in the clock tree on setup/hold timings and margins across multiple scenarios. It includes instructions for using the 'clock_eco_analysis' and 'commit_clock_eco' commands, as well as the 'fix_violations_by_clock_eco' command, which automatically fixes setup or hold violations. The commands have various options for customization, such as specifying a reference buffer, trace level, and target pins.",
                "content": "Clock ECO\nXTop has provided Clock ECO analysis, which can analyze the influence of changing clock tree on setup/hold timings and margins on multiple scenarios. User can specify a reference buffer and a trace level, and run several rounds of ECO analysis until find a better solution to optimize timing (especially for the TNS). \n\nxtop> clock_eco_analysis\nSYNOPSIS\n  clock_eco_analysis\n    -setup\n    | -hold\n    [-decrease_delay]\n    -buffer clock_buffer\n    [-count buffer_count]\n    [-trace_level trace_level\n     | -target_pins target_pins]\n    [-top count]\n    [-include_begin_gain]\n    [-detail]\n    [-scenario reference_scenario]\n    [-honor_dont_touch]\n    [-setup_wns_threshold setup_wns_threshold]\n    [-hold_wns_threshold hold_wns_threshold]\nThe target is to fix setup or hold TNS timing violations (specified by -setup or -hold). Before the analysis, please specify the reference clock buffers (specified by -buffer). By default, clock ECO will try to add buffers on clock sinks or common points to adjust timing. The reference buffer is used for timing and margin calculation in multiple scenarios. The delay change will be measured by buffer typical_delay * count (specified by -count). The early/late derate is not considered. \nWhen the analysis is completed, it will report the top N suggested candidates (specified by -top, default value is 50). The result will be sorted by Gain_Ratio. If want to print detail pin information in each scenario, please specify -detail option. If want to see the begin gain ratio, please specify -include_begin_gain option. User can select the best N candidates to commit. Or, select the candidates whose gain ratio is larger than some threshold to commit. \n\nxtop> commit_clock_eco -hold -top 10\nxtop> commit_clock_eco -setup -gain_ratio 100\nAn auto-fix command has also be provided to auto-fix the setup or hold violations by applying eco operations on clock. It is a combination of analysis (clock_eco_analysis) and committing (commit_clock_eco). \n\nSYNOPSIS\n  fix_violations_by_clock_eco\n    -setup\n    | -hold\n    -buffer buffer_name\n    [-count num]\n    [-auto_scan]\n    [-commit_separately]\n    [-trace_level num]\n    [-gain_ratio num]\n    [-setup_wns_threshold setup_wns_threshold]\n    [-hold_wns_threshold hold_wns_threshold]\n\nxtop> fix_violations_by_clock_eco -buffer CKBUFF1 -hold\nxtop> fix_violations_by_clock_eco -buffer CKBUFF1 -setup -trace_level 4\nxtop> fix_violations_by_clock_eco -buffer CKBUFF1 -setup -gain_ratio 30"
            },
            {
                "doc_id": "_xtop_ug_0020",
                "summary": "The document provides instructions on how to use the XTop tool for post-mask ECO (Engineering Change Order) in design stages. It details how to enable the post-mask ECO mode, insert buffers, size cells, and fix timing violations. It also explains the spare cell flow and GA filler flow, including setting parameters and defining GA site and name patterns.",
                "content": "Post-mask ECO\nPlease set the parameter eco_post_mask_mode to enable the post-mask eco mode. In late stage of design, user may not want to change the mask to clean the timing. Post-mask ECO can help to do small changes to fix timing violations, by buffer insertion and cell sizing methods. It will only contain physical wire modification and avoid any placement adjustment in the layout. \nFor the spare cell flow, it just likes the usual eco flow, after enabling the post mask mode. \n\nxtop> set_parameter  eco_post_mask_mode true\n\n# for manual eco\nxtop> insert_buffer -design {regs} {dram1/C3/U574/C1} {OR4D0BWP12THVT}\nxtop> size_cell -design {DIU_MDI_0_test_1} {HDMIFF/U13} {CKBD8BWP12T}\n\n# for auto eco\nxtop> set_parameter eco_buffer_list_for_hold  {AN2 OR2 BUF2 INV2}\nxtop> set_parameter eco_buffer_list_for_setup {AN2 OR2 BUF2}\nxtop> fix_setup/hold_gba_violation ...  \nFor the GA filler flow, please specify the parameter eco_ga_site or eco_ga_name_pattern first. If both GA site and name pattern are defined, eco_ga_site will have the higher priority. In the optimization, XTop will delete the GA filler cells, and insert the new cells given, and use the GA filler cells to fill the blank space. \n\nxtop> set_parameter eco_post_mask_mode true\nxtop> set_parameter eco_ga_site {gacore12T}\nxtop> set_parameter eco_ga_name_patterns {GFILL* GBUFF* GAN*}\nxtop> set_parameter eco_ga_filler_list {GFILL1BWP12T GFILL2BWP12T GFILL4BWP12T}\n\n# for manual eco\nxtop> insert_buffer -design {regs} {dram1/xtop_cell_0/I} {GBUFFD1BWP12T} \\\n      -locations {(190.200, 94.800)} size_cell \\\n      -design {cpu} {dram_t2/C3/U392} {GMUX2ND1BWP12THVT}\n\n# for auto eco\nxtop> set_parameter eco_buffer_list_for_hold  \\\n           {GBUFFD1BWP12T GBUFFD4BWP12T GBUFFD8BWP12T}\nxtop> set_parameter eco_buffer_list_for_setup \\\n           {GBUFFD1BWP12T GBUFFD4BWP12T GBUFFD8BWP12T}\nxtop> fix_setup/hold_gba_violations ..."
            },
            {
                "doc_id": "_xtop_ug_0021",
                "summary": "The document discusses the flow control feature of XTop tool. It explains how the tool optimizes design by scanning the timing graph in topology order, with different effort levels for higher optimization quality. It also mentions the classification of pins into groups for optimization. Furthermore, it provides a list of commands that allow users to change the criteria for calculating the priority of pins, known as pin rank.",
                "content": "Flow Control\nThe automatic flow optimizes the design by scanning the timing graph in topology order, thus it can complete the task with a linear complexity of design scale. And this is the only applicable way for modern designs that contains up to one hundred million of instances. However, XTop provides different effort levels to achieve higher optimization quality with extra timing cost. The pins are classified into several groups by a calculated priority for each pin, and optimized in iterations inside XTop. The higher effort, the more internal pin groups and iterations. \nXTop also provides a series of commands to allow user to change the criteria for calculating the priority of pins, known as pin rank. A better result is expected if a proper pin rank type is marked. These commands are mark_hold_gba_pin_rank, mark_setup_gba_pin_rank, mark_hold_path_pin_rank, mark_setup_path_pin_rank, mark_leakage_pin_rank and mark_area_pin_rank. But user should be aware that no single rank type can lead to best result for every case."
            },
            {
                "doc_id": "_xtop_ug_0022",
                "summary": "The document provides information on various ECO methods used in XTop tool. These methods include Insert Buffer, Size Cell, Split Net, and Remove Buffer. Each method has specific applications and parameters for optimization, such as fixing setup, transition, and capacitance violations, changing the reference cell of instances, solving transition, fanout, wire length, SI and glitch violations, and removing redundant buffers. The document also mentions the use of these methods in automatic flow.",
                "content": "ECO Methods\nInsert Buffer\nFor fixing setup, transition, and capacitance violations, this method means to insert a buffer at the source of net to enhance the drive capability of cell. It is recommended to select buffers with good drive strength. \nFor fixing hold violations, this method means to insert a buffer chain at the sink pins of net. The buffer chain prefers to grow toward the driver of net to avoid zigzag route as possible. For better effect, it is recommended to specify a buffer set with uniform delay distribution from both delay and normal buffers. \nSize Cell\nThis method is to change the reference cell of the specified instances. Modern process provides variety of cells, including different sizes, vts, channel lengths and so on. It does not just \"size\" a cell in the optimization flow. But for conventional reasons, it is still called \"size cell\" here. \nXTop sizes a cell according to three principles. And it is controlled by parameter eco_cell_classify_rule. \nLibrary attribute, the footprint, user function class, or just the function of all pins. Use parameter eco_cell_match_attribute to choose the correct attribute. \nNominal swap keywords in names. For different vt or channel length, commonly there are corresponding keywords in cell names. With this rule, cell can be sized between these keywords. Use parameter eco_cell_nominal_swap_keywords to set correct keywords. \nNominal sizing pattern in names. There is commonly a number represents the area or driven strength in cell names. With this rule, cell can be really sized with different size. Use parameter eco_cell_nominal_sizing_pattern to specify the sizing pattern. \nNormally, there is no extra limitation on sizing cell out of the principles. One exception is fixing hold, it is prohibited to size up to avoid unexpected area cost even though there perhaps exists reasonable sizing up solutions, for example, sizing a delay buffer up. \nSplit Net\nOn route split net is the most efficient way to solve transition, fanout, wire length, SI and glitch violations. Inverter is also supported, and XTop guarantees the polarity by patching extra inverters. \nTo get better effect, it is recommended to give a design with complete route. While the route of a net is not complete, XTop will try to patch it first. If it succeeds to make a patch, it will go on making split solutions. Otherwise incomplete fail reason will be reported. \nUnlike normal insert buffer, it is often unavoidable to introduce new module ports while splitting net along the route. XTop always tries to find the best module hierarchy for new buffer to minimize the count of ports to create. \nRemove Buffer\nThis method is useful if plenty of redundant buffers are inserted during the synthesis process. It can be applied while fixing setup or optimizing the design area. \nWhile eco_remove_inverter_pair is set to true, inverter pairs are also considered to remove. Two inverters cascaded in the same module hierarchy are treated as an inverter pair. \nMethods Used In Automatic Flow\nTable 4.6. Methods used in automatic flow"
            },
            {
                "doc_id": "_xtop_ug_0023",
                "summary": "The document provides information about XTop's optimization flow, detailing the violation or cost summary, fail reason summary, and ECO summary. It explains how these summaries provide insights into the optimization process, including the changes in violations or costs, reasons for failure, and the impact of ECO actions. It also mentions the commands and GUI menu items to access these summaries.",
                "content": "Review The Results\nFor every optimization flow, XTop provides a contrast timing violation or cost summary, a fail reason summary, and an eco action summary to users for later improvement on optimization policy. \nViolation Or Cost Summary\nIn the optimization process, contrast statistical summaries will be printed before and after the optimization. It shows a overview of how much the violations have been fixed or the cost have been optimized in total. If you care about the changes other than the target currently fixed or optimized, you can summarize them with corresponding command manually or directly from GUI. \nCommands to summarize timing violations, leakage power and area. \nTable 4.7. Commands to summarize violations and costs\n\nGUI menu items to show summary: Optimization=>Violation Overview or Cost Overview. \nFail Reason Summary\nWhile violations are not completely fixed, a statistical fail reason summary will be printed. Due to limitation of memory and performance, it is impossible to record down fail reasons for each candidate, and only one reason is recorded for each pin and each method. Though the reason is not that accurate, some clues still can be detected from the summary for further improvement. For example, if most of the reasons are failed to legalize, it indicates that the design may be too dense, it needs to release some area resources first. Or if most the reasons are breaking setup while fixing hold, it perhaps needs to adjust the constraint of setup time. \nBesides the report in the flow, you can also review the fail reason, or get related pins with following commands. \nTable 4.8. Commands to report fail reasons\n\nGUI menu items to show fail reasons: Optimization=>Fail Reasons. \nECO Summary\nECO summary is about all actions committed, including cell sized, buffer inserted, buffer removed, and the impact on design, including cell area and density. For hierarchical design, a global summary of top design or separated summaries for each designs can be reported by using option -recursive."
            },
            {
                "doc_id": "_xtop_ug_0024",
                "summary": "This document discusses the exceptions that may occur in the manual or automatic eco process using the XTop tool. It emphasizes that XTop must ensure the correctness and legality of the netlist and placement, the accuracy of timing updates, and the exportability of actions to third-party PR tools. The exceptions are categorized into netlist, physical, timing, and PR tool API constraints, with detailed explanations provided in the manual of fail reasons of automatic flow.",
                "content": "Exceptions\nIn manual or automatic eco process, there will be some exceptions that the desired eco actions cannot be committed. In manual flow, it will report the reason and interrupt. While in automatic flow, a corresponding reason will be recorded on the scanned pin. \nOnce an eco action is applied, XTOP must ensure that the netlist and placement are correct and legal, the timing can be updated incrementally and accurately, and the action can be exported with scripts to 3rd party PR tools. Otherwise, this action should be reported as illegal and avoided. The typical exceptions are listed as below. \nNetlist constraint.\nModule not unique.\nNet with IO pins.\nNet that connected to same nets in more than one instantiated sub blocks.\nWrong pin direction of logical port on a net.\nNet cross physical hierarchies.\nPhysical constraint.\nPhysical placement is not ready while place legalization turned on.\nDont touch pins, cells, or nets.\nIncomplete route for splitting net.\nFailed to place the newly inserted cell due to placement or routing congestion.\nTiming constraint.\nConditions that unable to calculate the timing.\nIncomplete timing library for cells.\nAll pins of the driver are floating.\nConditions that unable to keep the timing consistency.\nToo large transition on pin.\nToo many fanouts of net.\nCritical SI effect.\nNew cell is too far from net.\nNo driver or floating pins.\nMulti-driven net.\nNo gain or break timing in automatically flow.\nPR tool API constraint.\nAssign nets.\nGenerated a feed through net in module while removing buffer.\nThere are detail explanations for these exceptions in the manual of fail reasons of automatic flow. Please refer to the handbook or use man command to get the help on corresponding reason in XTop."
            },
            {
                "doc_id": "_xtop_ug_0025",
                "summary": "The document provides information about the preferences settings in ICExplorer-XTop. It covers general settings where users can customize the GUI style and choose applications like web browser, pdf reader, text editor. It also discusses layout settings for color configuration, ruler type, and displayed objects, and the customization of shortcut keys. Additionally, it mentions the ability to set units such as length, time, and current after loading a design.",
                "content": "Chapter 6. Appendix\nPreferences\nICExplorer-XTop has provided preferences setting from menu: Tools->Preferences...\nGeneral\nIn general preference setting, user can choose the web browser, pdf reader, text editor, etc. Also the GUI style can be customized according to user preference. \nLayout\nIn layout preference setting, user can select the color configuration, ruler type, and objects to displayed in layout, etc. Also the shortcut keys of layout operations can be configured for easy of use. \n\nUnits\nAfter loading design, the units (length, time, current, etc.) can be set from menu: Tools->Units..."
            }
        ]
    },
    {
        "source": "_xtop_handbook",
        "amount": 442,
        "knowledge": [
            {
                "doc_id": "_xtop_handbook_0001",
                "summary": "The XTop Handbook is a proprietary document of Empyrean Technology Co., Ltd, providing information about their trademarked product, ICExplorer-XTop. The document is confidential and can only be used under a license agreement. It does not represent future development of the related EDA tool and Empyrean reserves the right to modify it. Any losses from using the document are not the responsibility of Empyrean. For any queries regarding Empyrean's trademarks, contact can be made via the provided address or phone number.",
                "content": "XTop Handbook\n\nTrademarks: ICExplorer-XTop is the trademark of Empyrean Technology Co., Ltd. All other trademarks are the property of their respective holders.\nFor queries regarding Empyrean's trademarks, contact our company at the address shown below or call +8610-84776888.\n\nDisclaimer: This document is the exclusive and confidential information of Empyrean Technology Co., Ltd. The document is furnished under a license agreement and may be used or copied only in accordance with the term of license agreement. No part of the document may be reproduced, transmitted, or translated, in any form or by any means, electronic, mechanical, manual, optical, or otherwise, without prior written permission of Empyrean Technology Co., Ltd. or as expressly provided by the license agreement. The document does not represent the future development of related EDA tool. The right to modify and improve the document is reserved by Empyrean Technology Co., Ltd. Any direct or indirect losses are caused by use of the document has nothing to do with Empyrean Technology Co., Ltd."
            },
            {
                "doc_id": "_xtop_handbook_0002",
                "summary": "The document provides instructions on how to install and use ICExplorer-XTop, a software package for Linux x86_64 systems. It details the installation process, how to set the correct license file, and how to invoke the software with various command options. It also mentions an implicit -auto_exit option for error handling and specifies that the software is compatible with RHEL5, RHEL6, RHEL7, and equivalent Linux releases.",
                "content": "Start ICExplorer-XTop\nInstalling\nThe ICExplorer-XTop package is a zipped tar ball, and can be installed by just extracting it.\n% tar zxvf icexplorer-xtop-2017.09-rhel5-x86_64-20171015.tar.gz \n\nInvoking\nBefore invoking ICExplorer-XTop, it needs to set correct license file first.\n% setenv LM_LICENSE_FILE port@host\n% path_to_your_installation/bin/icexplorer-xtop \n\nCommand Options\nInvoking icexplorer-xtop with -h, it will print all information of options.\n\n% icexplorer-xtop -h\nUsage: \n  icexplorer-xtop\n    [-h | -help]            Display this information.\n    [-v | -version]         Display software version.\n    [-gui]                  Start in gui mode.\n    [-f | -file <file>]     Source specified file.\n    [-x <command>]          Execute specified command after setup.\n    [-log_suffix <suffix>]  Suffix for command.txt and log.txt.\n                            Log files will be command_suffix.txt\n                            and log_suffix.txt if specified.  \n\nThere is also an implicit option -auto_exit. While running test flow on multiple cases in background, it will\ninterrupt and hang there if some error occurs while executing TCL commands, and this is not the expected\nbehavior. By specifying -auto_exit, ICExplorer-XTop will exit automatically while encountering errors.\n\nSupported Platforms\nOnly Linux x86_64 systems are supported. The default package is for RHEL5, and is compatible with\nRHEL6, RHEL7, and other equivalent Linux releases."
            },
            {
                "doc_id": "_xtop_handbook_0003",
                "summary": "",
                "content": "Commands\n\nName\ncputime --Get the total user time of current process in seconds.\n\nSynopsis\nfloat cputime\n\nDescription\nThis command returns the total user time of this process in seconds.\n\nExamples\n\n% cputime\n5.3\n      \n\nSee Also\nmem(1)\n\n4"
            },
            {
                "doc_id": "_xtop_handbook_0004",
                "summary": "This document provides information about the 'help' command in XTop. It includes a brief description, its syntax, arguments, and examples. The 'help' command displays quick helps for one or more commands, with the '-verbose' option providing a detailed introduction to every option of the command. The command also accepts a string pattern as an argument.",
                "content": "Commands\n\nName\nhelp --Displays help for commands.\n\nSynopsis\nhelp [-verbose] pattern\n\nflag verbose\n\nstring pattern\n\nArguments\n-verbose Display command with introduction to all options.\n\npattern Wildcard to match the commands to display.\n\nDescription\nThis command displays quick helps for one or more commands. As default, it only displays brief descriptions of the matched commands including short introductions to this commands and all of their options. The specified string pattern is matched by wildcard by default.\n\nWhile option -verbose is specified, it displays introduction to every option of the command. For detail introduction, use command man.\n\nExamples\n\n% help help\nNAME\n  help -            Displays help for commands.\nSYNOPSIS\n  help\n    [-verbose]\n    pattern\n\n  verbose         : flag\n  pattern         : string\n      \n\nSee Also\nman(1)\n\n5"
            },
            {
                "doc_id": "_xtop_handbook_0005",
                "summary": "This is a description of the 'help_parameter' command in XTop tools. It displays help for specified parameters, with an optional '-verbose' flag to display the parameter type and default value. The command matches the specified string pattern by wildcard by default.",
                "content": "Commands\n\nName\nhelp_parameter --Displays help for specified parameters.\n\nSynopsis\nhelp_parameter [-verbose] pattern\n\nflag verbose\n\nstring pattern\n\nArguments\n-verbose Display parameter with type and default value.\n\npattern Wildcard to match the parameters.\n\nDescription\nThis command displays quick helps for one or more parameters. As default, it only displays brief descriptions of the matched parameters including short introductions, types, and default values. The specified string pattern is matched by wildcard by default.\n\nWhile option -verbose is specified, it displays the type and default value of this parameter. For detail information, use command man.\n\nExamples\n\n% help_parameter power_pin_names\n      \n\nSee Also\nman(1)\n\n6"
            },
            {
                "doc_id": "_xtop_handbook_0006",
                "summary": "",
                "content": "Commands\n\nName\nman --Display manual pages of commands or parameters.\n\nSynopsis\nman topic\n\nstring topic\n\nArguments\ntopic Top to get the man pages.\n\nDescription\nThis command displays manual pages of commands or parameters. The detail information of the specified command or parameter will be displayed, including synopsis, arguments, detail introduction, examples, and so on.\n\nExamples\nSee Also\n\nhelp(1) help_parameter(1)\n\n7"
            },
            {
                "doc_id": "_xtop_handbook_0007",
                "summary": "",
                "content": "Commands\n\nName\nmem --Get the memory usage of current status in kilobytes.\n\nSynopsis\nint mem\n\nDescription\nThis command returns the memory usage of current status in kilobytes.\n\nExamples\n\n% mem\n34005\n      \n\nSee Also\ncputime(1)\n\n8"
            },
            {
                "doc_id": "_xtop_handbook_0008",
                "summary": "This is a description of the 'redirect' command in XTop tools. It details the command's function, which is to redirect outputs to a specified file, channel, or variable, similar to UNIX-style redirection operators. The document also explains various flags and arguments that can be used with the command, such as '-append', '-channel', '-compress', '-file', '-tee', '-variable', 'target', and 'command_string'.",
                "content": "Commands\n\nName\nredirect --Redirects outputs to specified file, channel or variable.\n\nSynopsis\nredirect [-append] [-tee] [ -file | -variable | -channel ] [-compress] target command_string\n\nflag append\n\nflag channel\n\nflag compress\n\nflag file\n\nflag tee\n\nflag variable\n\nstring target\n\nstring command_string\n\nArguments\n-append Append the result to the target.\n\n-channel Indicates that the target is a tcl channel name, and redirection is to that channel.\n\n-compress Compress when writing to file. It is compatible with gzip, and does not support\nappend mode.\n\n-file Indicates the target is a file name, and redirection is to that file. This is the default.\n\n-tee Output to standard output as well as to target, same as UNIX command tee.\n\n-variable Indicates that the target is a tcl variable name, and redirection is to that variable.\n\ntarget Indicates the target name to redirect. It can be either a file, variable or channel.\n\ncommand_string Command to execute. The output of the command, as well as the result, are redirected to the target.\n\nDescription\nThis command redirects outputs to specified file, channel or variable. It performs the same function as the traditional UNIX-style redirection operators > and >>. By default, the output is redirected to file. It can be redirect to a TCL variable or channel with corresponding option.\n\nNote that the output command of system command, like \"ls\", can not be redirected by default. It needs to use TCL command exec to execute them to redirect the output. The command string must be enclosed in curly braces in order to execute successfully.\n\nExamples\n\n% redirect files.txt {exec ls -alt}"
            },
            {
                "doc_id": "_xtop_handbook_0009",
                "summary": "This document provides information about the 'source' command in XTop, which evaluates a specified file as a Tcl script. It details the command's syntax, arguments, and description. The command has four options: '-continue_on_error', '-echo', '-encoding', and '-verbose', each with specific functions during the execution of the script.",
                "content": "Commands\n\nName\nsource --Evaluate specified file as Tcl script.\n\nSynopsis\nsource [-encoding coding_name] [-echo] [-verbose] [-continue_on_error] file\n\nflag continue_on_error\n\nflag echo\n\nstring encoding\n\nflag verbose\n\nstring file\n\nArguments\n-continue_on_error Ignore error and continue on.\n\n-echo Echo the complete command lines before execution.\n\n-encoding coding_name The encoding of the data stored in file.\n\n-verbose Display the result of all complete command lines.\n\nfile Tcl script file to evaluate.\n\nDescription\nThis command evaluates the specified file as Tcl script. By default, it works with the same behavior of raw\nsource command of tclsh. It interprets the file in Tcl format and returned value is that of the last command.\nIf any error occurs, it will just stop there and skip the rest of file.\n\nCompare to the raw command of tclsh, it is enhanced with three options for tracing the issues during\nexecution. The first is option -echo. By specifying this option, it will displays every complete command\nlines before really executes it. The second is option -verbose. By specifying this option, the result of\nevery complete command lines executed will be displayed, not only the last one. The third is option -\ncontinue_on_error. With this option, it will ignore the error and continue on the rest commands.\n\nExamples\n\n11"
            },
            {
                "doc_id": "_xtop_handbook_0010",
                "summary": "",
                "content": "Commands\n\nName\nstart_gui --Starts the GUI.\n\nSynopsis\nstart_gui [-display display_name]\n\nstring display\n\nArguments\n-display display_name Display name to show GUI on.\n\nDescription\nThis command starts the GUI from tcl shell. It will fail if the display is not available. If the GUI has already\nbeen started, it will just ignore this command.\n\nExamples\nSee Also\n\nstop_gui(1)\n\n12"
            },
            {
                "doc_id": "_xtop_handbook_0011",
                "summary": "",
                "content": "Commands\n\nName\nstop_gui --Stops the GUI.\n\nSynopsis\nstop_gui\n\nDescription\nThis command stops the gui for the tcl shell. If the GUI is not on, this command is just ignored.\n\nExamples\nSee Also\n\nstart_gui(1)\n\n13"
            },
            {
                "doc_id": "_xtop_handbook_0012",
                "summary": "",
                "content": "Commands\n\nName\nget_parameter --Gets value of the specified parameter.\n\nSynopsis\nstring get_parameter param_name\n\nstring param_name\n\nArguments\nparam_name Parameter name.\n\nDescription\nThis command gets the value of the specified parameter. It returns the value of the parameter on success.\n\nExamples\n\n% get_parameter vendor_name\nempyrean\n      \n\nSee Also\nset_parameter(1) report_parameter(1)\n\n14"
            },
            {
                "doc_id": "_xtop_handbook_0013",
                "summary": "The document provides information about the 'list_parameter' command in XTop tools. This command returns the name of specified parameters, with options to match patterns as fixed strings or regular expressions. If no pattern is specified, it returns all parameters. The parameters are matched by wildcard mode by default.",
                "content": "Commands\n\nName\nlist_parameter --Returns name of specified parameters.\n\nSynopsis\nstring_list list_parameter [[ -fixed_string | -regex ] name_patterns ]\n\nflag fixed_string\n\nflag regex\n\nstring_list name_patterns\n\nArguments\n-fixed_string Matches pattern as fixed string.\n\n-regex Matches pattern as regular expression.\n\nname_patterns Patterns to match parameters.\n\nDescription\nThis command returns the name of specified parameters. If no pattern is specified or it is empty, it tries\nto return all parameters.\n\nBy default, the parameters are matched by wildcard mode. Using -regex to switch to regular expression,\nor -fixed_string to match by only fixed string.\n\nExamples\n\n% list_parameter vendor*\nvendor_name\n      \n\nSee Also\nset_parameter(1) get_parameter(1) report_parameter(1)\n\n15"
            },
            {
                "doc_id": "_xtop_handbook_0014",
                "summary": "The document provides information about the 'report_parameter' command in XTop. This command reports the name and value of specified parameters. It includes flags such as '-exclude_default', '-fixed_string', '-regex', and '-script'. The '-exclude_default' only reports parameters set by the user, '-fixed_string' matches pattern as fixed string, '-regex' matches pattern as regular expression, and '-script' reports parameters in the format of 'set_parameter'.",
                "content": "Commands\n\nName\nreport_parameter --Reports name and value of specified parameters.\n\nSynopsis\nreport_parameter [-exclude_default] [-script] [[ -fixed_string | -regex ] name_patterns ]\n\nflag exclude_default\n\nflag fixed_string\n\nflag regex\n\nflag script\n\nstring_list name_patterns\n\nArguments\n-exclude_default Only reports parameters that have been set by user.\n\n-fixed_string Matches pattern as fixed string.\n\n-regex Matches pattern as regular expression.\n\n-script Reports parameters in format of set_parameter.\n\nname_patterns Patterns to match parameters.\n\nDescription\nThis command reports the name and value of specified parameters. If no pattern is specified or it is empty,\nit tries to report all parameters.\n\nWhile -script is enabled, it reports all the parameters with syntax of set_parameter one by one.\n\nWhile -exclude_default is enabled, it only reports those parameters that have been set by users.\n\nBy default, the parameters are matched by wildcard mode. Using -regex to switch to regular expression,\nor -fixed_string to match by only fixed string.\n\nExamples\n\n% report_parameter vendor_name\nvendor_name = empyrean\n% report_parameter vendor_name -script\nset_parameter vendor_name {empyrean}\n      \n\nSee Also\nset_parameter(1) get_parameter(1)\n\n16"
            },
            {
                "doc_id": "_xtop_handbook_0015",
                "summary": "This document provides information about the 'set_parameter' command in XTop. This command sets a defined parameter to a specified value, supports abbreviated parameter names, and checks if the parameter name is legal and the value is within the defined range. It also has a '-reset' option to reset the parameter to its default value. Examples of usage and related commands are also provided.",
                "content": "Commands\n\nName\nset_parameter --Sets parameter to specified value.\n\nSynopsis\nset_parameter param_name [ -reset | param_value ]\n\nflag reset\n\nstring param_name\n\ncollection param_value\n\nArguments\n-reset Reset parameter to default.\n\nparam_name Parameter name.\n\nparam_value The tcl object or string representation of value.\n\nDescription\nThis command sets one defined parameter to the specified value. If the value is not given, it will just display\nthe value of specified parameter. If option -reset is specified, it will reset this parameter to the default value.\n\nThis command supports abbreviated parameter name. It does not need always to give the full name of the\nparameter. It is enough just give a abbreviation that can uniquely identify this parameter.\n\nThis command will first check if the parameter name is legal. And while the value is specified, it will\ncheck if it can be converted to the specified type, and is in the defined range. It will return false while\nany step of above failed.\n\nFor point and pointf type, the format is the coordinates separated by command and enclosed with\nparenthesis, like (x, y). For rect and rectf, there are two formats to specify it, one is like (x0, y0, width,\nheight), and the other is like ((x0, y0) (x1, y1)).\n\nExamples\n\n% set_parameter vendor_name empyrean\n      \n\nSee Also\nget_parameter(1) report_parameter(1)\n\n17"
            },
            {
                "doc_id": "_xtop_handbook_0016",
                "summary": "This document provides information about the \"add_to_collection\" command in XTop tools. It explains the command's function, which is to add objects to a collection and return a new collection, leaving the original collection unchanged. The command has a \"-unique\" flag to prevent the addition of duplicate objects. The document also describes the arguments required for the command, including the base collection and the object list to be added.",
                "content": "Commands\n\nName\nadd_to_collection --Add objects to a collection, keep the original collection unchanged and return a new\ncollection.\n\nSynopsis\nadd_to_collection [-unique] collection0 object_list\n\nflag unique\n\ncollection collection0\n\ncollection object_list\n\nArguments\n-unique Indicates that duplicated objects will no be added to result.\n\ncollection0 Specifies the base collection that object will be added.\n\nobject_list Specifies object list that will be added to base collection.\n\nDescription\nThis command adds the specified object list into to the base collection, and returns a new collection as a\nresult. The original collection keeps unchanged. For the object in the object list that already exists in the\noriginal collection, it will just add it unless the option unique is specified.\n\nIt the original collection is homogeneous, this command allows the object list to be other types more than\ncollection. It will search the object of the same type as original collection in database. If the base collection\nis heterogeneous, all the non-collection objects are ignored.\n\nExamples\n\nThe following example shows how to add the object list to the collection.\n  % add_to_collection  [get_cells u*]  [get_cells uu*]\n  \"u1\", \"u2\", \"uu1\", \"uu2\", \"uu1\", \"uu2\"\n  % add_to_collection  [get_cells u*]  [get_cells uu*] -unique\n  \"u1\", \"u2\", \"uu1\", \"uu2\"\n    \n\nSee Also\nappend_to_collection(1)\n\n18"
            },
            {
                "doc_id": "_xtop_handbook_0017",
                "summary": "The document provides information about the 'append_to_collection' command in XTop. This command appends objects to a specified variable and returns the result. It has options like '-unique' to avoid adding duplicated objects, 'var_name' to specify the variable name to be appended, and 'object_list' to specify the object list to be appended to the base collection. If the specified variable does not exist, a new one will be created.",
                "content": "Commands\n\nName\nappend_to_collection --Append objects to the specified variable and return the result.\n\nSynopsis\nappend_to_collection [-unique] var_name object_list\n\nflag unique\n\nstring var_name\n\ncollection object_list\n\nArguments\n-unique Indicates that duplicated objects will no be added to result.\n\nvar_name Specifies variable name to be appended.\n\nobject_list Specifies object list that will be appended to base collection.\n\nDescription\nThis command append the specified object list to the collection with name of the specified variable, and\nreturns the collection as the result. If the variable with the specified name does not exist, it will create\na new one.\n\nExamples\n\nThe following example shows how to append the collection to the variable.\n  % set a [get_cells u1]\n  % append_to_collection a [get_cells u3]\n  % echo $a\n  \"u1\", \"u3\"\n    \n\nSee Also\nadd_to_collection(1)\n\n19"
            },
            {
                "doc_id": "_xtop_handbook_0018",
                "summary": "This document provides information about the 'compare_collections' command in XTop tools. It explains the command's function, which is to compare two collections and return 0 if they are identical. It also details the command's arguments, including '-order_dependent', 'collection0', and 'collection1'. An example of how to use the command is also provided.",
                "content": "Commands\n\nName\ncompare_collections --Compares two collections, return 0 if they are the same.\n\nSynopsis\ncompare_collections [-order_dependent] collection0 collection1\n\nflag order_dependent\n\ncollection collection0\n\ncollection collection1\n\nArguments\n-order_dependent Considers the order of elements in collection.\n\ncollection0 Specifies the first collection to compare.\n\ncollection1 Specifies the second collection to compare.\n\nDescription\nThis command compares the two specified collections, and returns 0 if they are the same. Two empty\ncollections are considered as the same.\n\nExamples\n\nThe following example shows how to compare two collections.\n  % get_cells {I3 I6}\n  \"I3\", \"I6\"\n  % get_dont_touch_cells \n  \"I6\", \"I3\"\n  % compare_collections [get_cells {I3 I6}] [get_dont_touch_cells]\n  0\n  % compare_collections [get_cells {I3 I6}] [get_dont_touch_cells] \\\n                        -order_dependent \n  -1\n    \n\n20"
            },
            {
                "doc_id": "_xtop_handbook_0019",
                "summary": "The document provides information about the 'copy_collection' command in XTop. This command is used to duplicate the contents of a collection and return it as a new collection. The argument 'collection0' specifies the collection to be copied.",
                "content": "Commands\n\nName\ncopy_collection --Duplicate the contents of a collection and return as a new collection.\n\nSynopsis\ncopy_collection collection0\n\ncollection collection0\n\nArguments\ncollection0 Specifies the collection to be copied to the result.\n\nDescription\nThis command duplicates the contents of a collection and return as a new collection.\n\nExamples\n\nThe following example shows how to copy a collection.\n  % set a1 [get_cells u*]\n  \"uuu1\", \"uuu2\", \"uuu3\", \"uuu4\"\n  % set a2 [copy_collection $a1]\n  \"uuu1\", \"uuu2\", \"uuu3\", \"uuu4\"\n    \n\n21"
            },
            {
                "doc_id": "_xtop_handbook_0020",
                "summary": "This document provides information about the 'create_empty_collection' command in XTop. This command is used to create an empty collection for further object group operations such as append_to_collection, add_to_collection etc. The collection serves as a TCL interface to the user. It also clarifies that a collection is not equivalent to a string.",
                "content": "Commands\n\nName\ncreate_empty_collection --Create an empty collection.\n\nSynopsis\ncreate_empty_collection\n\nDescription\nThis command creates an empty collection for further object group operations such as\nappend_to_collection, add_to_collection etc. The collection is a container which stores objects created by\nget_cells, get_pins, get_nets etc. It serves as TCL interface to user.\n\nPlease pay attention to that a collection is not equivalent to a string. That means if user wants to define an\nempty collection, please use this command instead of normal tcl command: set empty_coll \"\".\n\nExamples\nTo create an empty collection, type:\n\n    % set coll [create_empty_collection]\n      \n\n22"
            },
            {
                "doc_id": "_xtop_handbook_0021",
                "summary": "The document provides information about the 'foreach_in_collection' command in XTop tools. It details the syntax, arguments, and description of the command. The arguments include 'iter_var', 'collection', and 'body'. The command is used to iterate over elements in a specified collection.",
                "content": "Commands\n\nName\nforeach_in_collection --Iterate element in a collection.\n\nSynopsis\nforeach_in_collection iter_var collection body\n\nstring iter_var\n\ncollection collection\n\nstring body\n\nArguments\niter_var Indicates name of the iterator variable.\n\ncollection Specifies a collection to iterate over.\n\nbody Specifies the body string that will be executed for every iteration.\n\nDescription\nThis command iterates element in the specified collection.\n\nExamples\n\nThe following example shows how to remove dont_touch for each cell.\n  % foreach_in_collection i [get_dont_touch_cells] \\\n    {set_dont_touch [get_cells $i] 0}\n    \n\n23"
            },
            {
                "doc_id": "_xtop_handbook_0022",
                "summary": "This document provides information about the 'index_collection' command in XTop tools. It details its function, which is to find an object in a specified collection using a specified index, place it into a new collection, and return it. The command keeps the original collection unchanged. The document also explains the arguments 'collection0' and 'index' that the command requires.",
                "content": "Commands\n\nName\nindex_collection --Find the object in the specified collection with the specified index, put into a new\ncollection and return it.\n\nSynopsis\nindex_collection collection0 index\n\ncollection collection0\n\nint index in \"[0,inf)\"\n\nArguments\ncollection0 Specifies the collection to find the specified object.\n\nindex Specifies the index of object in the specified collection.\n\nDescription\nThis command finds the object in the specified collection with the specified index, puts into a new\ncollection and returns it. The original collection keeps unchanged.\n\nExamples\n\nThe following example shows how to get the 3rd pin of collection.\n  % index_collection [get_pins ] 3\n    \n\n24"
            },
            {
                "doc_id": "_xtop_handbook_0023",
                "summary": "This is a description of the 'query_objects' command in XTop tool. It includes options such as '-verbose', '-truncate count', and '-class class_name'. The command is used to display specified objects, with options to display detailed information, limit the number of objects displayed, and specify the class name for the non-collection object list.",
                "content": "Commands\n\nName\nquery_objects --Display specified objects.\n\nSynopsis\nquery_objects [-verbose] [-truncate count] [-class class_name] object_list\n\nstring class\n\nint truncate in \"[-1,inf)\"\n\nflag verbose\n\ncollection object_list\n\nArguments\n-class class_name Specifies the class name for the specified non-collection object list.\n\n-truncate count Specified the maximum number of objects to display, tcl variable\ncollection_result_display_limit will be used as default.\n\n-verbose Displays the detail information of each object.\n\nobject_list Specifies the objects to query and display.\n\nDescription\nThis command queries and display the specified objects in the specified object list.\n\nWhile option -verbose is specified, class name will also be displayed for each object, otherwise, only object\nname will be displayed.\n\nWhile option -truncate is specified, the specified number is used as the upper bound of objects to display,\notherwise tcl variable collection_result_display_limit is used as the truncate number. While a negative\nnumber is specified , it means to display all the objects. While 0 is specified, it will be reset to the default\nnumber 100.\n\nExamples\n\n25"
            },
            {
                "doc_id": "_xtop_handbook_0024",
                "summary": "This is a description of the \"remove_from_collection\" command in XTop tools. It details how the command removes objects from a collection, resulting in a new collection while keeping the original unchanged. The command has an optional \"-intersect\" flag that reverses the operation, and requires two arguments: \"collection0\" and \"object_list\". An example of its usage is also provided.",
                "content": "Commands\n\nName\nremove_from_collection --Remove objects from collection, result in a new collection, and keep original\ncollection unchanged.\n\nSynopsis\nremove_from_collection [-intersect] collection0 object_list\n\nflag intersect\n\ncollection collection0\n\ncollection object_list\n\nArguments\n-intersect Removes objects not found in the specified object list.\n\ncollection0 Specifies the result to be copied to the result.\n\nobject_list Specified the objects to be removed from collection.\n\nDescription\nThis command removes objects from collection, results in a new collection, and keeps original collection\nunchanged.\n\nGenerally, it removes the objects that exists in the specified object list. But while the option intersect is\nspecified, it will operate in reversed mode.\n\nExamples\n\nThe following example shows how to get cells without dont touch.\n  % remove_from_collection [get_cells -hierarchical *] \\\n                           [get_dont_touch_cells -hierarchical *]\n    \n\n26"
            },
            {
                "doc_id": "_xtop_handbook_0025",
                "summary": "",
                "content": "Commands\n\nName\nsizeof_collection --Reports size of the specified collection.\n\nSynopsis\nsizeof_collection collection\n\ncollection collection\n\nArguments\ncollection Indicates the collection.\n\nDescription\nThis command report the size of the specified collection. If the specified variable is not collection, it will\nreport error.\n\nExamples\n\nThe following example shows how to get the size of the collection:\n  % sizeof_collection [get_cells -hierarchical *]\n    \n\n27"
            },
            {
                "doc_id": "_xtop_handbook_0026",
                "summary": "This is a description of the \"all_registers\" command in XTop tool. It returns a collection of register cells or pins. The command has several flags including -async_pins, -cells, -clock_pins, -data_pins, -edge_triggered, -level_sensitive, -no_hierarchy, and -output_pins, each returning a specific collection or behavior. An example is provided to demonstrate how to get the async pins of registers.",
                "content": "Commands\n\nName\nall_registers --Return a cell (or pin) collection of register cells.\n\nSynopsis\nall_registers [ -cells | {[-data_pins] [-clock_pins] [-async_pins] [-output_pins]}] [-no_hierarchy] [-\nlevel_sensitive] [-edge_triggered]\n\nflag async_pins\n\nflag cells\n\nflag clock_pins\n\nflag data_pins\n\nflag edge_triggered\n\nflag level_sensitive\n\nflag no_hierarchy\n\nflag output_pins\n\nArguments\n-async_pins Return collection of register async (preset and clear) pins.\n\n-cells Return collection of cells, it's default behavior.\n\n-clock_pins Return collection of register clock pins.\n\n-data_pins Return collection of register data pins.\n\n-edge_triggered Only consider edge-triggered flip-flops.\n\n-level_sensitive Only consider level-sensitive latches.\n\n-no_hierarchy Only search at the current instance.\n\n-output_pins Return collection of register output pins.\n\nDescription\nThis command creates a cell (or pin) collection of register cells. Default the tool gets result from [get_cells\n-hier *], please use -no_hierarchy when only search the current instance.\n\nExamples\nThe following example gets the async pins of registers:\n\n% all_registers -async_pins \n\"u_fibre_ctrl_core/u_srio/csr_usr_reg_1_reg_0_/RDN\", \n\n28"
            },
            {
                "doc_id": "_xtop_handbook_0027",
                "summary": "",
                "content": "Commands\n\n\"u_fibre_ctrl_core/u_srio/csr_usr_reg_1_reg_1_/RDN\",\n...\n    \n\nThe following example gets the edge triggered registers:\n\n% all_registers -edge_triggered\n\"u_fibre_ctrl_core/u_srio/csr_usr_reg_1_reg_0_\",\n\"u_fibre_ctrl_core/u_srio/csr_usr_reg_1_reg_1_\",\n...\n    \n\nThe following example gets the output pins of level_sensitive registers:\n\n% all_registers -level_sensitive -output_pins\n\"u_fibre_ctrl_core/u_fc_core/test_out_reg_0_/Q\", ...\n    \n\n29"
            },
            {
                "doc_id": "_xtop_handbook_0028",
                "summary": "This is a description of the command \"analyze_create_port_when_split_net\" in XTop tools. The command analyzes whether to create a logical port when splitting a net. It has options for specifying which pins to be buffered when split_net (-loaders buffer_pins), the module containing the new buffer (-module module_name), and whether to report more internal messages (-verbose).",
                "content": "Commands\n\nName\nanalyze_create_port_when_split_net --Analyze whether to create logical port when split net.\n\nSynopsis\nanalyze_create_port_when_split_net -loaders buffer_pins [-module module_name]\n[-verbose]\n\ncollection loaders\n\nstring module\n\nflag verbose\n\nArguments\n-loaders buffer_pins Which pins to be buffered when split_net.\n\n-module module_name Specifies the module which contains the new buffer.\n\n-verbose Report more internal message when true.\n\nDescription\nThis command tell you whether to create logical port when split net.\n\nExamples\n\n30"
            },
            {
                "doc_id": "_xtop_handbook_0029",
                "summary": "This document provides information about the \"current_instance\" command in XTop. This command sets the working instance in a design hierarchy, similar to how the UNIX \"cd\" command works. It can operate with or without an instance argument, and can traverse multiple levels of hierarchy in a single call.",
                "content": "Commands\n\nName\ncurrent_instance --Sets current working instance, and sets related commands to work in relative of it.\n\nSynopsis\nstring current_instance [instance]\n\nstring instance\n\nArguments\ninstance Specifies the instance to set as current.\n\nDescription\nThis command sets the working instance. An instance is a cell in the hierarchy of a design. It traverses the\ndesign hierarchy similar to the way the UNIX \"cd\" command traverses the file hierarchy. This command\noperates with a variety of instance arguments.\n\n--If no instance argument is specified, it return to the top level of the hierarchy.\n\n--If instance is \".\", the current instance is returned and no change is made.\n\n--If instance is \"..\", the current instance is moved up one level in the design hierarchy.\n\n--If instance is a valid cell at the current level of hierarchy, the current instance is moved down to that\nlevel of the design hierarchy.\n\n--Multiple levels of hierarchy can be traversed in a single call to current_instance by separating multiple\ncell names with slashes.\n\nExamples\nThe following example sets the working instance in the hierarchy of a design.\n\n% current_instance top/sub/sub_sub\ntop/sub/sub_sub\n\n% current_instance ..\ntop/sub\n    \n\n31"
            },
            {
                "doc_id": "_xtop_handbook_0030",
                "summary": "The document provides information about the 'filter_collection' command in XTop tool. It includes the command's synopsis, arguments, description, and examples. The command filters an existing collection based on a specified expression, resulting in a new collection. The command also has '-nocase' and '-regexp' flags for case-insensitive pattern matching and treating the expression as a regular expression, respectively.",
                "content": "Commands\n\nName\nfilter_collection --Filters an existing collection.\n\nSynopsis\ncollection filter_collection base_collection expression [-regexp] [-nocase]\n\nflag nocase\n\nflag regexp\n\ncollection base_collection\n\nstring expression\n\nArguments\n-nocase Makes the pattern match case-insensitive.\n\n-regexp Expression is treated as a regular expression.\n\nbase_collection Specifies the base collection to be filtered.\n\nexpression Specifies an expression with which to filter collection.\n\nDescription\nFilters an existing collection, resulting in a new collection. The base collection remains unchanged.\n\nExamples\nThe following example shows how to create a new collection by filtering the existing collection.\n\n% filter_collection [get_pins *] \"is_hierarchical == true\"\n\"alu/a[4]\", \"alu/b[4]\", \"alu/op[0]\", \"alu/y[4]\"\n\n% filter_collection [get_cells -hierarchical] \"dont_touch == true\"\n\"U43\", \"U50\", \"regs/U1\", \"regs/U9\", \"regs/U10\"\n\n% filter_collection [get_nets] \"number_of_leaf_pins > 30\"\n\"clk_in_1\", \"reset\", \"global_tie0\", \"n252\"\n\n% filter_collection [get_cells -hierarchical] \"full_name =~ U\\[0-9\\]+\" -regexp\n\"U210\", \"U224\", \"U220\", \"U292\", \"U295\"\n      \n\n32"
            },
            {
                "doc_id": "_xtop_handbook_0031",
                "summary": "The document provides information about the 'get_attribute' command in XTop tool. This command retrieves the value of an attribute on an object or a collection of objects. It includes options such as '-class', '-quiet', and '-scenario'. The command can return a string or a list of strings. Examples are provided to illustrate how to use the command to get the reference name of a cell and the GBA slack of a pin.",
                "content": "Commands\n\nName\nget_attribute --Get the value of an attribute on an object or on an collection of objects.\n\nSynopsis\nget_attribute object_spec attr_name [-quiet] [-class class_name] [-scenario sce]\n\nenum class in \"design pin cell port net lib_cell lib_pin lib timing_path\"\n\nflag quiet\n\nstring scenario\n\ncollection object_spec\n\nstring attr_name\n\nArguments\n-class class_name Specifies the class name of the object, if the specified object is a name.\n\n-quiet Prevents the reporting of messages.\n\n-scenario sce Which scenario to get attribute values. If no scenario is specified, the reference\nscenario will be used.\n\nobject_spec Specifies the object to return attribute value. It must be a collection of objects\nor an object name. If an object name is specified, the -class option must be\nused to find the object.\n\nattr_name Specifies the attribute name to get.\n\nDescription\nThis command get the value of an attribute on an object or on a collection of objects. The object could be\na name of one object, or a collection of objects. The return value is a string or a list of strings.\n\nExamples\nThe following example shows how to get the reference name of the cell.\n\n  % get_attribute [get_cells U43] ref_name\n  AN4XD1BWP12T\n      \n\nThe following example shows how to get the GBA slack of pin.\n\n  % get_attribute [get_pins stacklevel_reg_1_/D] min_fall_gba_slack\n  4.3688\n\n  % get_attribute [get_pins stacklevel_reg_1_/D] min_fall_gba_slack -scenario func_best\n  4.0978\n\n  % get_attribute stacklevel_reg_1_/D min_fall_gba_slack -scenario func_worst -class pin\n  4.3688\n      \n\n34"
            },
            {
                "doc_id": "_xtop_handbook_0032",
                "summary": "This document provides information about the 'get_cells' command in XTop tool. The command creates a collection of cells relative to the current instance. It includes several flags such as '-exact', '-filter', '-hierarchical', '-nocase', '-of_objects', '-quiet', and '-regex', and arguments like 'patterns'. Examples of its usage are also provided.",
                "content": "Commands\n\nName\nget_cells --Create a collection of cells relative to current instance.\n\nSynopsis\ncollection get_cells [-hierarchical] [-quiet] [ -regex | -exact ] [-nocase] [ patterns | -of_objects\nobjects ] [-filter expression]\n\nflag exact\n\nstring filter\n\nflag hierarchical\n\nflag nocase\n\ncollection of_objects\n\nflag quiet\n\nflag regex\n\ncollection patterns\n\nArguments\n-exact Uses fixed string, and disable wildcard match.\n\n-filter expression Filter every object with the specified expression.\n\n-hierarchical Searches for cells level-by-level relative to the current instance.\n\n-nocase Makes the matching mode case-insensitive.\n\n-of_objects objects Creates a collection of cells connected to the specified objects.\n\n-quiet Suppress error and warning messages if no cells match.\n\n-regex Views the patterns argument as real regular expressions rather than simple\nwildcard patterns.\n\npatterns Specifies the patterns used to match cells.\n\nDescription\nThis command creates a collection of cells relative to current instance.\n\nExamples\nThe following example shows how to get cells connected to a net.\n\n% get_cells -of_objects [get_nets n81]\n\"U180\", \"sub/U503\"\n\nThe following example shows how to get cells connected to a collection of pins.\n\n% get_cells -of_objects [get_pins */D]\n\"d1\", \"d2\"\n    \n\nThe following example shows how to get cells whose names begin with \"U\" while the ref_name attribute\nis BUFFD2.\n\n% get_cells U* -filter \"ref_name==BUFFD2\"\n\"U395\"\n    \n\n36"
            },
            {
                "doc_id": "_xtop_handbook_0033",
                "summary": "This is a description of the 'get_lib_cells' command in XTop, which creates a collection of library cells. The command has several options including '-corner', '-exact', '-filter', '-nocase', '-of_objects', '-quiet', '-regex', and 'patterns'. Each option has a specific function, such as specifying the corner to get lib cells, using fixed string, filtering objects, making the matching mode case-insensitive, and suppressing error messages.",
                "content": "Commands\n\nName\nget_lib_cells --Create a collection of library cells.\n\nSynopsis\ncollection get_lib_cells [-corner corner_name] [-quiet] [ -regex | -exact ] [-nocase] [\npatterns | -of_objects objects ] [-filter expression]\n\nstring corner\n\nflag exact\n\nstring filter\n\nflag nocase\n\ncollection of_objects\n\nflag quiet\n\nflag regex\n\ncollection patterns\n\nArguments\n-corner corner_name The corner to get lib cells, use reference corner if not specified.\n\n-exact Uses fixed string, and disable wildcard match.\n\n-filter expression Filter every object with the specified expression.\n\n-nocase Makes the matching mode case-insensitive.\n\n-of_objects objects Creates a collection of library cells of the specified cells.\n\n-quiet Suppress error and warning messages if no lib cell match.\n\n-regex Views the patterns argument as real regular expressions rather than simple\nwildcard patterns.\n\npatterns Specifies the patterns used to match lib cell name.\n\nDescription\nThis command creates a collection of library cells of the specified corner.\n\nExamples\nThe following example shows how to get lib cells for instance.\n\n% get_lib_cells -of_objects [get_cells U*]\n\"library/INV1\", \"libray/INV8\"\n\nThe following example shows how to get pad cells used in your design.\n\n% get_lib_cells -of_objects [get_cells -hierarchical] -filter \"is_pad_cell==true\"\n\"pad_worst/PISRNC\", \"pad_worst/PICDRNC\"\n    \n\n38"
            },
            {
                "doc_id": "_xtop_handbook_0034",
                "summary": "The document provides information about the 'get_lib_pins' command in XTop tool. This command creates a collection of library pins for a specified corner. It includes options such as '-corner' to specify the corner, '-exact' for fixed string, '-filter' for object filtering, '-nocase' for case-insensitive matching, '-of_objects' to create a collection of library pins, '-quiet' to suppress error messages, '-regex' for regular expressions, and 'patterns' to match lib pin name.",
                "content": "Commands\n\nName\nget_lib_pins --Create a collection of library pins.\n\nSynopsis\ncollection get_lib_pins [-corner corner_name] [-quiet] [ -regex | -exact ] [-nocase] [\npatterns | -of_objects objects ] [-filter expression]\n\nstring corner\n\nflag exact\n\nstring filter\n\nflag nocase\n\ncollection of_objects\n\nflag quiet\n\nflag regex\n\ncollection patterns\n\nArguments\n-corner corner_name The corner to get lib pins, use reference corner if not specified.\n\n-exact Uses fixed string, and disable wildcard match.\n\n-filter expression Filter every object with the specified expression.\n\n-nocase Makes the matching mode case-insensitive.\n\n-of_objects objects Creates a collection of library pins of the specified lib cells or netlist pins.\n\n-quiet Suppress error and warning messages if no lib pin match.\n\n-regex Views the patterns argument as real regular expressions rather than simple\nwildcard patterns.\n\npatterns Specifies the patterns used to match lib pin name.\n\nDescription\nThis command creates a collection of library pins of the specified corner.\n\nExamples\nThe following example shows how to get lib pins for lib cell.\n\n% get_lib_pins -of_objects [get_lib_cells U*]\n\"library/INV1/I\", \"library/INV1/Z\", \"libray/INV8/I\", \"libray/INV8/Z\"\n\nThe following example shows how to get preset lib pins.\n\n% get_lib_pins */* -filter \"is_preset_pin==true\"\n\"worst/SDFC12T/SDN\", \"worst/SDFKCSNQ12T/SN\"..."
            },
            {
                "doc_id": "_xtop_handbook_0035",
                "summary": "This is a description of the 'get_libs' command in XTop, which creates a collection of libraries. The command has several options including '-corner', '-exact', '-filter', '-nocase', '-of_objects', '-quiet', and '-regex', each with specific functions such as specifying the corner to get libraries, using fixed string, filtering objects, making the matching mode case-insensitive, creating a collection of libraries of specified lib cells, suppressing error and warning messages, and viewing the patterns argument as real regular expressions.",
                "content": "Commands\n\nName\nget_libs --Create a collection of libraries.\n\nSynopsis\ncollection get_libs [-corner corner_name] [-quiet] [ -regex | -exact ] [-nocase] [ patterns\n| -of_objects objects ] [-filter expression]\n\nstring corner\n\nflag exact\n\nstring filter\n\nflag nocase\n\ncollection of_objects\n\nflag quiet\n\nflag regex\n\ncollection patterns\n\nArguments\n-corner corner_name The corner to get libraries, use reference corner if not specified.\n\n-exact Uses fixed string, and disable wildcard match.\n\n-filter expression Filter every object with the specified expression.\n\n-nocase Makes the matching mode case-insensitive.\n\n-of_objects objects Creates a collection of libraries of the specified lib cells.\n\n-quiet Suppress error and warning messages if no library match.\n\n-regex Views the patterns argument as real regular expressions rather than simple\nwildcard patterns.\n\npatterns Specifies the patterns used to match library name.\n\nDescription\nThis command creates a collection of libraries of the specified corner.\n\nExamples\nThe following example shows how to get libraries for lib cell.\n\n% get_libs -of_objects [get_lib_cells U*]\n\"library\"\n\nThe following example shows how to get libraries with specified file name.\n\n% get_libs -filter \"source_file_name == /path/a.lib\"\n\"library\""
            },
            {
                "doc_id": "_xtop_handbook_0036",
                "summary": "",
                "content": "Commands\n\nName\nget_mib_pins --Create a collection of MIB pins of specified pin.\n\nSynopsis\ncollection get_mib_pins pins\n\ncollection pins\n\nArguments\npins Creates a collection of MIB pins of these pins.\n\nDescription\nThis command creates a collection of MIB pins of specified pin. If there's no MIB pin, specified pin is\nreturned.\n\nExamples\nThe following example shows how to get MIB pins of a given pin:\n\n% get_mib_pins [get_pins debug0/ucross/ZN]\n\"debug0/ucross/ZN\" \"debug1/ucross/ZN\" \"debug2/ucross/ZN\"\n    \n\n43"
            },
            {
                "doc_id": "_xtop_handbook_0037",
                "summary": "This is a documentation for the 'get_nets' command in XTop tool. The command creates a collection of nets relative to the current instance. It includes options such as '-hierarchical', '-quiet', '-regex', '-exact', '-nocase', '-top_net_of_hierarchical_group', '-segments', '-boundary_type', '-of_objects', and '-filter'. Each option performs a specific function, like '-filter' is used to filter every object with the specified expression.",
                "content": "Commands\n\nName\nget_nets --Create a collection of nets relative to current instance.\n\nSynopsis\ncollection get_nets [-hierarchical] [-quiet] [ -regex | -exact ] [-nocase] [-\ntop_net_of_hierarchical_group] [-segments] [ patterns | {[-boundary_type btype] -of_objects\nobjects }] [-filter expression]\n\nenum boundary_type in \"lower upper both\"\n\nflag exact\n\nstring filter\n\nflag hierarchical\n\nflag nocase\n\ncollection of_objects\n\nflag quiet\n\nflag regex\n\nflag segments\n\nflag top_net_of_hierarchical_group\n\ncollection patterns\n\nArguments\n-boundary_type btype Specifies what to do when getting nets of boundary pins.\n\n-exact Uses fixed string, and disable wildcard match.\n\n-filter expression Filter every object with the specified expression.\n\n-hierarchical Searches for nets level-by-level relative to the current instance.\n\n-nocase Makes the matching mode case-insensitive.\n\n-of_objects objects Creates a collection of nets connected to the specified objects.\n\n-quiet Suppress error and warning messages if no nets match.\n\n-regex Views the patterns argument as real regular expressions rather than\nsimple wildcard patterns.\n\n-segments Return all global segments for given nets.\n\n-top_net_of_hierarchical_group Keep only the top net of a hierarchical group.\n\npatterns Specifies the patterns used to match nets.\n\nThis command creates a collection of nets relative to current instance.\n\nExamples\nThe following example shows how to get nets with total_capacitance_max which is more than 0.03.\n\n% get_nets -filter \"total_capacitance_max > 0.03\"\n\"n81\", \"n82\", \"n83\""
            },
            {
                "doc_id": "_xtop_handbook_0038",
                "summary": "This is a description of the 'get_pins' command in XTop tool. It includes options such as '-exact', '-filter', '-hierarchical', '-leaf', '-nocase', '-of_objects', '-quiet', '-regex', and 'patterns'. The command is used to create a collection of pins relative to the current instance.",
                "content": "Commands\n\nName\nget_pins --Create a collection of pins relative to current instance.\n\nSynopsis\ncollection get_pins [-hierarchical] [-quiet] [ -regex | -exact ] [-nocase] [ patterns | {[-leaf] -\nof_objects objects }] [-filter expression]\n\nflag exact\n\nstring filter\n\nflag hierarchical\n\nflag leaf\n\nflag nocase\n\ncollection of_objects\n\nflag quiet\n\nflag regex\n\ncollection patterns\n\nArguments\n-exact Uses fixed string, and disable wildcard match.\n\n-filter expression Filter every object with the specified expression.\n\n-hierarchical Searches for pins level-by-level relative to the current instance.\n\n-leaf Only get leaf pins of specified object.\n\n-nocase Makes the matching mode case-insensitive.\n\n-of_objects objects Creates a collection of pins connected to the specified objects.\n\n-quiet Suppress error and warning messages if no pins match.\n\n-regex Views the patterns argument as real regular expressions rather than simple\nwildcard patterns.\n\npatterns Specifies the patterns used to match pins.\n\nDescription\nThis command creates a collection of pins relative to current instance.\n\nExamples\nThe following example shows how to get pins with max_fanout more than 10.\n\n% get_pins -filter \"max_fanout > 10\"\n\"U43/Z\"\n    \n\n47"
            },
            {
                "doc_id": "_xtop_handbook_0039",
                "summary": "This is a description of the 'get_ports' command in XTop tool. The command creates a collection of ports relative to the current instance. It has several options including '-exact', '-filter', '-nocase', '-of_objects', '-quiet', '-regex', and 'patterns'. Each option has its own specific function, such as '-filter' for filtering objects with a specified expression, or '-quiet' for suppressing error and warning messages.",
                "content": "Commands\n\nName\nget_ports --Create a collection of ports relative to current instance.\n\nSynopsis\ncollection get_ports [-quiet] [ -regex | -exact ] [-nocase] [ patterns | -of_objects objects\n] [-filter expression]\n\nflag exact\n\nstring filter\n\nflag nocase\n\ncollection of_objects\n\nflag quiet\n\nflag regex\n\ncollection patterns\n\nArguments\n-exact Uses fixed string, and disable wildcard match.\n\n-filter expression Filter every object with the specified expression.\n\n-nocase Makes the matching mode case-insensitive.\n\n-of_objects objects Creates a collection of ports connected to the specified objects.\n\n-quiet Suppress error and warning messages if no ports match.\n\n-regex Views the patterns argument as real regular expressions rather than simple\nwildcard patterns.\n\npatterns Specifies the patterns used to match ports.\n\nDescription\nThis command creates a collection of ports relative to current instance.\n\nExamples\nThe following example shows how to get ports with max_transition which is more than 1.0.\n\n% get_ports -filter \"max_transition > 1.0\"\n\"portcout[6]\", \"debugpc[10]\"\n    \n\n48"
            },
            {
                "doc_id": "_xtop_handbook_0040",
                "summary": "",
                "content": "Commands\n\nName\nlist_attribute --Lists currently defined attributes.\n\nSynopsis\nlist_attribute -class class_name\n\nenum class in \"design pin cell port net lib_cell lib_pin lib timing_path\"\n\nArguments\n-class class_name Limit the listing to attributes of a single class.\n\nDescription\nThis command displays an alphabetically sorted list of currently defined attributes.\n\nExamples\n\n49"
            },
            {
                "doc_id": "_xtop_handbook_0041",
                "summary": "",
                "content": "Commands\n\nName\nread_aocv --To read aocv file for given scenario.\n\nSynopsis\nread_aocv -scenario sce aocv_files\n\nstring scenario\n\nstring_list aocv_files\n\nArguments\n-scenario sce Which scenario to read aocv files.\n\naocv_files Aocv files to be read.\n\nDescription\nThis command is used to read aocv file.\n\nExamples\nThe following example shows how to read aocv files for given scenario.\n\n% read_aocv -scenario func_setup { setup_func.aocvm}\n    \n\n50"
            },
            {
                "doc_id": "_xtop_handbook_0042",
                "summary": "",
                "content": "Commands\n\nName\nremove_aocv --To clear aocv and pocv coefficient data for given scenario or all scenarios.\n\nSynopsis\nremove_aocv -all -scenario sce\n\nflag all\n\nstring scenario\n\nArguments\n-all Remove aocv and pocv coefficient data for all scenarios.\n\n-scenario sce Which scenario to remove aocv and pocv coefficient data.\n\nDescription\nThis command clears aocv and pocv coefficient data for given scenario or all scenarios.\n\nExamples\n\n51"
            },
            {
                "doc_id": "_xtop_handbook_0043",
                "summary": "This is a description of the \"remove_lib_per_instance\" command in XTop tool. The command removes the library per instance settings for a specified instance or all instances if none is specified. It has two arguments: \"-corner corner_name\" to specify the corner to remove lib, and \"instance\" to specify the name of module instance.",
                "content": "Commands\n\nName\nremove_lib_per_instance --Remove the library per instance settings for specified instance.\n\nSynopsis\nremove_lib_per_instance [-corner corner_name] [instance]\n\nstring corner\n\nstring instance\n\nArguments\n-corner corner_name The corner to remove lib, all corner if not specified.\n\ninstance The name of module instance, all if not specified.\n\nDescription\nThis command removes the library per instance settings for specified instance. if no instance specified,\nit will remove for all instances.\n\nDifference from set_lib_per_instance, if no corner specified, it means remove for all corners.\n\nExamples\nSee Also\n\nset_lib_per_instance(1) get_lib_cells(1)\n\n52"
            },
            {
                "doc_id": "_xtop_handbook_0044",
                "summary": "",
                "content": "Commands\n\nName\nreport_aocv --To report detailed aocv data for given scenario.\n\nSynopsis\nreport_aocv -scenario sce\n\nstring scenario\n\nArguments\n-scenario sce Which scenario to report aocv data.\n\nDescription\nThis command reports aocv data for given scenario.\n\nExamples\n\n53"
            },
            {
                "doc_id": "_xtop_handbook_0045",
                "summary": "",
                "content": "Commands\n\nName\nreport_fanin_arc --Report physical timing arc to given pin.\n\nSynopsis\nreport_fanin_arc pins\n\ncollection pins\n\nArguments\npins Which pin to report fanin timing arc.\n\nDescription\nThis command reports the physical timing arc to given pin.\n\nExamples\nThe following example shows how to report the fanin timing arc.\n\n% report_fanin_arc [get_dont_touch_pins]\nTotally 1 fanin timing arc to U5/A :\n  U2/YB\n    \n\n54"
            },
            {
                "doc_id": "_xtop_handbook_0046",
                "summary": "",
                "content": "Commands\n\nName\nreport_fanout_arc --Report physical timing arc from given pin.\n\nSynopsis\nreport_fanout_arc pins\n\ncollection pins\n\nArguments\npins Which pin to report fanout timing arc.\n\nDescription\nThis command reports the physical timing arc from given pin.\n\nExamples\nThe following example shows how to report the fanout timing arc.\n\n% report_fanout_arc [get_dont_touch_pins]\nTotally 1 fanout timing arc from U2/YB :\n  U5/A\n    \n\n55"
            },
            {
                "doc_id": "_xtop_handbook_0047",
                "summary": "This is a description of the 'report_lib_per_instance' command in XTop tools. It reports the library per instance settings for a specified instance or all instances if none is specified. The command has two arguments: '-corner corner_name' to specify the corner to report lib, and 'instance' to specify the name of the module instance.",
                "content": "Commands\n\nName\nreport_lib_per_instance --Report the library per instance settings for specified instance.\n\nSynopsis\nreport_lib_per_instance [-corner corner_name] [instance]\n\nstring corner\n\nstring instance\n\nArguments\n-corner corner_name The corner to report lib, all corner if not specified.\n\ninstance The name of module instance, all if not specified.\n\nDescription\nThis command reports the library per instance settings for specified instance. if no instance specified, it\nwill report for all instances.\n\nDifference from set_lib_per_instance, if no corner specified, it means report for all corners.\n\nExamples\nSee Also\n\nset_lib_per_instance(1) remove_lib_per_instance(1) get_lib_cells(1)\n\n56"
            },
            {
                "doc_id": "_xtop_handbook_0048",
                "summary": "This is a description of the 'report_path' command in XTop tools. It includes options such as '-truncate path_count' which sets the maximum number of paths allowed to output, and 'path_list' which is the list of paths to report. The command reports paths in the same format as read in and has a default truncate number of 10.",
                "content": "Commands\n\nName\nreport_path --Report path with the same format as read.\n\nSynopsis\nreport_path [-truncate path_count] path_list\n\nint truncate\n\ncollection path_list\n\nArguments\n-truncate path_count The maximum number of paths allowed to output, zero or negative value\n\nmeans no limitation. Default is 10.\n\npath_list Path list to report.\n\nDescription\nThis command reports path with the same format as read in. Since it is slow to write on terminal, an upper\nbound of path count is set to truncate the result. If you really want to dump a large number of paths,\nremember to redirect the result to file and set a reasonable truncate number.\n\nExamples\n\n57"
            },
            {
                "doc_id": "_xtop_handbook_0049",
                "summary": "The document provides information about the 'set_lib_per_instance' command in XTop tool. This command sets the libraries for a specified module instance and works recursively. It accepts arguments like '-corner corner_name', 'instance', and 'libs'. The library can be a name, file name, or a full path. The document also includes an example of how to use the command.",
                "content": "Commands\n\nName\nset_lib_per_instance --Set the libraries to use for the specified module instance.\n\nSynopsis\nset_lib_per_instance [-corner corner_name] instance libs\n\nstring corner\n\nstring instance\n\nstring_list libs\n\nArguments\n-corner corner_name The corner to set lib, use reference corner if not specified.\n\ninstance The name of module instance.\n\nlibs Libraries or library files for the specified instance.\n\nDescription\nThis command sets the libraries to use for the specified module instance. It will work recursively. All the\ncells in the specified module will try to find the library cell only within the specified libraries.\n\nThe library can be just the library name, library file name or the file name with full path. The library or\nfile must be already linked to the specified corner. Otherwise, it will report error.\n\nIf want to clear the settings for a path, just specify an empty library list.\n\nExamples\nThe following example shows how to set the bc library in fast corner to use in C3 module instance.\n\n% set_lib_per_instance {regs/dram1/C3} {_bc.lib} -corner fast\n    \n\nSee Also\nremove_lib_per_instance(1) get_lib_cells(1)\n\n58"
            },
            {
                "doc_id": "_xtop_handbook_0050",
                "summary": "This is a description of the 'set_rail_voltage' command in XTop tool. It allows users to set rail voltage on cells with options to specify the corner, condition (max or min), mode, and scenario. It also provides a 'not_recursive' option to prevent setting values on lower cells of a hierarchy cell. The command also handles scenarios where no specific scenario, corner, or mode is specified.",
                "content": "Commands\n\nName\nset_rail_voltage --Set rail voltage on cells.\n\nSynopsis\nset_rail_voltage [-min] [-max] [-not_recursive] [ -scenario scenarios | -corner corners | -\nmode mode ] -rail_value voltage cells\n\nstring_list corner\n\nflag max\n\nflag min\n\nstring_list mode\n\nflag not_recursive\n\nfloat rail_value in \"(0.1,10)\"\n\nstring_list scenario\n\ncollection cells\n\nArguments\n-corner corners Specifies the corner to be set voltage.\n\n-max Set voltage for the max condition.\n\n-min Set voltage for the min condition.\n\n-mode mode Specifies the mode to be set voltage.\n\n-not_recursive Dont set value on lower cells of hierarchy cell.\n\n-rail_value voltage The voltage value.\n\n-scenario scenarios Specifies the scenario to be set voltage.\n\ncells Which cells to set rail voltage.\n\nDescription\nThis command sets rail voltage on cells. When set on hierarchical cells, all lower cells will be set the same\nvalue. Or use option not_recursive to stop it.\n\nIf you do not specify either the -min or -max option, tool sets value for both min/max options.\n\nIf not specify scenario/corner/mode, tool sets value for all scenarios.\n\nIf nothing was found for given scenario/corner/mode, just skip this command.\n\nPlease use get_scenario/get_corner/get_mode for wildcard scenario pattern etc.\n\nExamples\nThe following example shows how to set rail voltage.\n\n% set_rail_voltage -max -rail_value 0.88 [get_cells I_PCS3]\n% set_rail_voltage -min -rail_value 0.92 [get_cells I_PCS3]\n    \n60"
            },
            {
                "doc_id": "_xtop_handbook_0051",
                "summary": "",
                "content": "Commands\n\nName\n_new_identify_io_path_pins --New method to identify io interface pins, a debug command.\n\nSynopsis\n_new_identify_io_path_pins [[-ref_buffer ref_buffer] -count buf_count ]\n\nfloat count in \"[1,100]\"\n\nstring ref_buffer\n\nArguments\n-count buf_count Buffer count when analyze.\n\n-ref_buffer ref_buffer Reference buffer when analyze.\n\nDescription\nA debug command to test new method.\n\nExamples\n\n61"
            },
            {
                "doc_id": "_xtop_handbook_0052",
                "summary": "",
                "content": "Commands\n\nName\n_report_pin_raw_data --Debug command to report raw annotated timing data of specified pins.\n\nSynopsis\n_report_pin_raw_data [-precision digits_precision] pins\n\nint precision\n\ncollection pins\n\nArguments\n-precision digits_precision Specifies report value precision.\n\npins Specifies the pins to report.\n\nDescription\nThis command reports all timing data of specified pins that read in from files. This is a debug command\nused by empyrean rd, so do not use it.\n\nExamples\n\n62"
            },
            {
                "doc_id": "_xtop_handbook_0053",
                "summary": "This is a description of the command \"_test_get_annotated_data\" in XTop tools. The command is used to test the run time of getting net/pin annotated data. It has an argument \"-truncate val\" which truncates the number to test, with zero or negative value meaning all. An example of how to run the command is also provided.",
                "content": "Commands\n\nName\n_test_get_annotated_data --Test run time of getting net/pin annotated data.\n\nSynopsis\n_test_get_annotated_data [-truncate val]\n\nint truncate\n\nArguments\n-truncate val Truncates the number to test, zero or negative value means all.\n\nDescription\nTest run time of getting net/pin annotated data.\n\nExamples\nThe following example shows how to run the command:\n\n% _test_get_annotated_data -truncate 10000\nTest getting 10000 pins anno data... done.  1.684s wall, 1.684s user \\\n                                 + 0.000s system = 1.684s CPU (100.0%)\n      \n\n63"
            },
            {
                "doc_id": "_xtop_handbook_0054",
                "summary": "The document provides information about the 'all_fanin' command in XTop tool. This command creates a collection of pins containing all fanin pins to specified objects. It has several options including '-levels' to set the depth of cell level search, '-pin_levels' to set the depth of pin level search, '-startpoints_only' to include only the timing startpoints in the result, and '-to' to specify a collection of pins or ports in the design.",
                "content": "Commands\n\nName\nall_fanin --Creates a collection of pins, contains all fanin pins to specified objects.\n\nSynopsis\ncollection all_fanin -to fanin_to_list [-levels cell_level_count] [-pin_levels\npin_level_count] [-startpoints_only]\n\nint levels in \"[1,inf)\"\n\nint pin_levels in \"[1,inf)\"\n\nflag startpoints_only\n\ncollection to\n\nArguments\n-levels cell_level_count Set the depth of search of cell_level_count hops.\n\n-pin_levels pin_level_count Set the depth of search of pin_level_count hops.\n\n-startpoints_only Includes only the timing startpoints in the result.\n\n-to fanin_to_list Specifies a collection of pins or ports in the design, fanin pins of\ntheses objects will be added to result.\n\nDescription\nThis command creates a collection of pins contains fanin.\n\nExamples\nThe following example gets fanin pins to I_SP/PS1/I1_LUT/U175/ZN, where only 1 level cell is traced:\n\n% all_fanin -to [get_pins I_SP/PS1/I1_LUT/U175/ZN] -levels 1\n  \"I_SP/PS1/I1_LUT/U175/ZN\", \"I_SP/PS1/I1_LUT/U175/A1\", \n  \"I_SP/PS1/I1_LUT/U175/B1\"\n      \n\nThe following example gets fanin pins to I_SP/PS1/I1_LUT/EN, with startpoint only:\n\n% all_fanin -to [get_pins I_SP/PS1/I1_LUT/EN] -startpoints_only\n  \"DIU_DFT_ON\", \"LUT_WR\", \n  \"I_IGA/U_REGBLK/U_REGBLK_CR/cr33_reg_reg_4_/CP\", \n  \"U_FPI_REG/sr47_tmp_reg_1_/CP\", \"U_FPI_REG/sr47_tmp_reg_2_/CP\"\n      \n\n64"
            },
            {
                "doc_id": "_xtop_handbook_0055",
                "summary": "This is a description of the \"all_fanout\" command in XTop tool. The command creates a collection of fanout pins from specified objects. It has options like \"-from\" to specify a collection of pins or ports, \"-levels\" to set the depth of cell level search, \"-pin_levels\" to set the depth of pin level search, and \"-endpoints_only\" to include only the timing endpoints in the result.",
                "content": "Commands\n\nName\nall_fanout --Creates a collection of pins, contains all fanout pins from specified objects.\n\nSynopsis\ncollection all_fanout -from fanout_from_list [-levels cell_level_count] [-\npin_levels pin_level_count] [-endpoints_only]\n\nflag endpoints_only\n\ncollection from\n\nint levels in \"[1,inf)\"\n\nint pin_levels in \"[1,inf)\"\n\nArguments\n-endpoints_only Includes only the timing endpoints in the result.\n\n-from fanout_from_list Specifies a collection of pins or ports in the design, fanout pins of\nthese objects will be added to result.\n\n-levels cell_level_count Set the depth of search of cell_level_count hops.\n\n-pin_levels pin_level_count Set the depth of search of pin_level_count hops.\n\nDescription\nThis command creates a collection of pins contains fanout.\n\nExamples\nThe following example get fanout pins from pin I_SP/PS1/I1_LUT/U1/EN:\n\n% all_fanout -from [get_pins I_SP/PS1/I1_LUT/U1/EN]\n  \"I_SP/PS1/I1_LUT/U1/EN\", \"I_SP/PS1/I1_LUT/U1/Q\",\n  \"I_SP/PS1/I1_LUT/wdata_1st_reg_0_/SI\"\n      \n\nThe following example get fanout pins from pin I_SP/PS1/I1_LUT/U1/EN, with endpoint only:\n\n% all_fanout -from [get_pins I_SP/PS1/I1_LUT/U1/EN] -endpoints_only\n  \"I_SP/PS1/I1_LUT/wdata_1st_reg_0_/SI\"\n      \n\nThe following example get fanout pins from pin LUT_IOPHS[1], where only 1 level pin is traced:\n\n% all_fanout -from [get_pins {LUT_IOPHS[1]}] -pin_levels 1\n  \"LUT_IOPHS[1]\", \"I_SP/PS1/I1_LUT/U13/I\", \"I_SP/PS2/I1_LUT/U11/I\"\n      \nThe following example get fanout pins from pin LUT_IOPHS[1], where only 1 level cell is traced:\n\n% all_fanout -from [get_pins {LUT_IOPHS[1]}] -levels 1\n  \"LUT_IOPHS[1]\", \"I_SP/PS1/I1_LUT/U13/I\", \n  \"I_SP/PS2/I1_LUT/U11/I\", \"I_SP/PS1/I1_LUT/U13/ZN\", \n  \"I_SP/PS2/I1_LUT/U11/ZN\""
            },
            {
                "doc_id": "_xtop_handbook_0056",
                "summary": "This is a description of the 'analyze_scenario_reduction' command in XTop tool. It analyzes hold or setup violation for given timing data and returns a dropped scenario list. The command includes options such as 'data_dir', 'factor', 'force_read', 'hold_coverage', 'hold_top_n', 'hold_uncovered', 'must_include', 'setup_coverage', 'setup_top_n', and 'setup_uncovered'. Each option has specific parameters and functions, such as specifying the directory containing the timing data, scaling gains between scenarios, forcing to read pin timing files, getting worst hold or setup scenarios, and printing uncovered hold violated pins for selected scenarios.",
                "content": "Commands\n\nName\nanalyze_scenario_reduction --Analyze hold or setup violation for given timing data, and return a dropped\nscenario list.\n\nSynopsis\nstring_list analyze_scenario_reduction -data_dir path [ -hold_top_n hold_val\n| -hold_coverage hold_cov ] [ -setup_top_n setup_val | -setup_coverage setup_cov ] [-\nmust_include must_include_scenario_names] [-factor gain_factor] [-force_read] [ -verbose\n[ -hold_uncovered hold_limit | -setup_uncovered setup_limit ]]\n\nstring data_dir\n\nfloat factor in \"[0.3,3]\"\n\nflag force_read\n\nfloat hold_coverage in \"[0.2,1]\"\n\nint hold_top_n in \"[1,300]\"\n\nint hold_uncovered in \"[1,inf)\"\n\nstring_list must_include\n\nfloat setup_coverage in \"[0.2,1]\"\n\nint setup_top_n in \"[1,300]\"\n\nint setup_uncovered in \"[1,inf)\"\n\nflag verbose\n\nArguments\n-data_dir path The directory contains the timing data.\n\n-factor gain_factor Factor to scaling gains between scenarios, if it is set larger, it is\nmore likely that two scenarios will be regarded as same.\n\n-force_read Force to read pin timing files specified by -data_dir.\n\n-hold_coverage hold_cov Get worst hold scenarios to satisfy given coverage.\n\n-hold_top_n hold_val Get top n worst scenario for hold.\n\n-hold_uncovered hold_limit Also print uncovered hold violated pins for current selected\nscenarios.\n\n-must_include Scenarios that must be included in list.\nmust_include_scenario_names\n\n-setup_coverage setup_cov Get worst setup scenarios to satisfy given coverage.\n\n-setup_top_n setup_val Get top n worst scenario for setup.\n\n67"
            },
            {
                "doc_id": "_xtop_handbook_0057",
                "summary": "This document provides a detailed description and usage of the XTop command 'analyze_scenario_reduction'. This command reads GBA slacks and rail voltage from all scenarios, selects the top scenarios with the worst end point violation based on user input, and reduces memory usage and runtime. It includes options such as '-hold_top_n/-hold_coverage' and '-setup_top_n/-setup_coverage' for scenario selection, and '-verbose' for detailed information. The command must be called before 'read_timing_data' and after 'build_timing_graph'.",
                "content": "Commands\n\n-setup_uncovered setup_limit Also print uncovered setup violated pins for current selected\nscenarios.\n\n-verbose Print detail for selected scenario.\n\nDescription\nWhen this command is called, XTop read GBA slacks and rail voltage(optional) from all scenarios,\nand some top scenarios with worst end point violation are picked out according to user's input. When\nread_timing_data is called, only the timing data of scenarios in that list will be read, so memory usage\nand runtime will be decreased. User can call this command repeatedly with different input to get a wanted\nresult, and use reduce_scenario(1) to implement the behavior.\n\nUser can set -hold_top_n/-hold_coverage or -setup_top_n/-setup_coverage, or both, to get a scenario list\nfor hold or setup, or both. If \"top_n\" is given, the worst top n scenario will be selected. If \"coverage\" is\ngiven, XTop picks scenarios from the worst one, until total end point violation coverage is satisfied. If\nnone of them are given, no scenario will be selected, so that reduction is not allowed.\n\n-verbose could be set to get detail info for picked scenarios, violation count and TNS of each scenario\nwill be shown there.\n\nAs this is a quick analysis, it is not guaranteed that every violation can be covered in real fix action. A\nfactor is provided to adjust the gain ratio between scenarios, when it is set larger, two scenarios at a same\nviolation end point will be more likely to regarded as same. The factor is 1.0 by default.\n\nIf scenario name is specified in -must_include, the scenario will always be added to list, however, if it is\nnot contained in list by previous analysis, it will be marked a \"(*)\" in detail.\n\nCommand report_dropped_scenarios(1) can be called to report scenarios that are dropped by\nreduce_scenario(1). If this command is called again after a valid redution, \"top_n\" and \"coverage\" will be\ncalculated according to latest scenarios, and timing data will also be read again.\n\nTo speedup the process, pin slack files will be only read once. XTop will only read files again if -data_dir\nhas been changed by user, or -force_read is specified.\n\nSkipped scenario setting will be honored in reduction.\n\nThe command must be called before read_timing_data and after build_timing_graph.\n\nExamples\nThe following example uses scenario reduction for hold violations, and then read_timing_data.\n\n% build_timing_graph\n% analyze_scenario_reduction -hold_top_n 2 -data_dir timing_data_dir -verbose\n2 of total 4 scenarios have been selected.\n\nSelected Scenario    Hold Count     Hold TNS    Setup Count    Setup TNS\n-------------------------------------------------------------------------\nfunc_fast                   854    -240.6051              0       0.0000\ntest_fast                   853    -232.4843              0       0.0000\n\nHold covered 100.00% (892/892)    Setup covered 0.00% (0/1029)\n\nFollowing scenarios will be dropped after reduction:\n  func_slow\n  test_slow\n\nfunc_slow test_slow\n% reduce_scenario {func_slow test_slow}\n2 scenarios are dropped.\n% read_timing_data -data_dir timing_data_dir\n      \n\nThe following example analyzes scenario reduction for hold coverage over 95%.\n\n% build_timing_graph\n% analyze_scenario_reduction -hold_coverage 0.95 \\\n                             -must_include mode0_best0 \\\n                             -data_dir timing_data_dir -verbose\n3 of total 5 scenarios have been selected.\n\nSelected Scenario    Hold Count       Hold TNS    Setup Count      Setup TNS\n-----------------------------------------------------------------------------\nmode0_worst0             13069      -4933.2574            466       -19.8865\nmode0_worst1             13066      -4597.3354            139        -6.9144\nmode0_best0 (*)             11           -0.35              0         0.0000 \n\nHold covered 99.75% (13078/13111)    Setup covered 90.00% (486/540)\n\nFollowing scenarios will be dropped after reduction:\n  mode0_best1\n  ...\n      \nSee Also\nreduce_scenario(1) get_dropped_scenarios(1) report_dropped_scenarios(1) build_timing_graph(1)"
            },
            {
                "doc_id": "_xtop_handbook_0058",
                "summary": "The document provides information about the 'analyze_tmlib_trend' command in XTop tool. This command is used to analyze all timing library cells trend in the current workspace. It checks a cell's trend for different drive strength in different VT and channel, and also checks cell's performance in different process, voltage, and temperature. The command has two flags '-fixed_string' and '-regex', and a string list 'name_patterns'. It also mentions six important properties of a cell and various parameters that affect the result of cell's properties calculation.",
                "content": "Commands\n\nName\nanalyze_tmlib_trend --Analyze all timing library cells trend loaded in current workspace.\n\nSynopsis\nanalyze_tmlib_trend [[ -fixed_string | -regex ] name_patterns ]\n\nflag fixed_string\n\nflag regex\n\nstring_list name_patterns\n\nArguments\n-fixed_string Match pattern as fixed string.\n\n-regex Match pattern as regular expression.\n\nname_patterns Patterns to match the cells, all if not specified.\n\nDescription\nThis command analyze all timing library cells trend in current workspace. it to check a cell's trend for\ndifference drive strength in different VT and channel. And this command also check cell's performance in\ndifferent process, voltage and temperature.Commonly, there are six important properties to justify a cell,\nand they are represented by an uppercase letter respectively.\n\n--A: cell area.\n\n--L: leakage power.\n\n--I: internal power.\n\n--D: cell delay.\n\n--T: output transition.\n\n--C: pin cap.\n\nAnd beside these six properties, user can use a command set_tmlib_cell_property_formula(1) to specify\nits own property to justify a cell.If you want to analyze a cell's different property in different corner, you\nmust specify which corner to get specified property through parameters:cell_delay_transition_corner(1),\ncell_internal_power_corner(1), cell_leakage_power_corner(1), cell_capacitance_corner(1);If one of these\nparameter has not been specified, or the specified corner is not in current workspace, it will not\nanalyze mixed corner cell trend. To analyze cell trend, user need to specify cell's drive strength\npattern and vt and channel length keywords, through parameter: cell_name_drive_strength_pattern(1),\ncell_name_vt_keywords(1) and cell_name_channel_length_keywords(1).Normally, we recognize Int\nnumber as drive strength, if you library use float like '0p00','1p67' as drive strength, please tell as what\nchar represent decimal point through parameter decimal_point_tokens(1), otherwise we can't recognize\nit.In this example you should specify 'p' as decimal point tokens.\n\nWhen calculate cell's properties, there some parameters have an effect on the\nresult, these parameters are: tmlib_table_sample_method(1), tmlib_cell_evaluation_principle(1),\ntmlib_sequential_delay_definition(1), tmlib_latch_timing_arc_definition(1),\ntmlib_arc_evaluation_principle(1), tmlib_edge_evaluation_principle(1), tmlib_table_excision_depth(1),\ntmlib_fanout_factor(1), tmlib_input_transition(1), tmlib_clock_transition(1), tmlib_fanout_load(1). After\ntrend analysis, user can check the timing trend on GUI. If any parameter above has been changed, user\nMUST run this command to refresh the result. Otherwise, GUI just show the last analyzed result."
            },
            {
                "doc_id": "_xtop_handbook_0059",
                "summary": "The document provides information about the 'build_timing_graph' command in XTop. This command is used to build a timing graph from an imported design. If the timing graph has already been built, it will not be rebuilt. The document also mentions that if 'build_timing_graph' is conducted before 'read_timing_data', the latter will skip building the timing graph and will build it first if it hasn't been built.",
                "content": "Commands\n\nName\nbuild_timing_graph --Build timing graph from imported design.\n\nSynopsis\nbuild_timing_graph\n\nDescription\nThis command builds timing graph from design. If build_timing_graph has been conducted before\nread_timing_data, then read_timing_data will skip building timing graph. If not, read_timing_data will\nbuild it first. If timing graph has been built earlier, it won't rebuild it.\n\nExamples\nThe following example shows how to build timing graph into XTop.\n\n% source design_setup.tcl    ;# Create workspace and import design\n% source mcmm.tcl      ;# Create scenario and link timing library\n% build_timing_graph\n                             ;# ... when timing data is ready ...\n% read_timing_data...        ;# Read timing data\n...        \n      \n\n72"
            },
            {
                "doc_id": "_xtop_handbook_0060",
                "summary": "This is a description of the 'check_inst_reference_library' command in XTop. It checks if reference library cells are valid for all cell instances. The command includes options such as '-include_instance' to show instances referring to invalid cells, and '-truncate' to control the number of instances shown.",
                "content": "Commands\n\nName\ncheck_inst_reference_library --Check if reference library cells are valid for all cell instances.\n\nSynopsis\nbool check_inst_reference_library [ -include_instance [-truncate count]]\n\nflag include_instance\n\nint truncate in \"[0,inf)\"\n\nArguments\n-include_instance Show instances which refers to invalid cell.\n\n-truncate count Number of instance upper bound for invalid cell, default is 100.\n\nDescription\nThis command checks if reference library cells are valid for all cell instances. If any reference cell is\ninvalid, it will report this cell and return false. It can also show instances which refers to invalid cells,\nrespectively, by specifying -include_instance; the number of instances(by default 100) being shown can\nbe controlled by -truncate.\n\nExamples\nThe following examples check if reference library cells are valid for all instances.\n\n% check_inst_reference_library\nNo issue found.\n1\n% check_inst_reference_library\nInvalid reference cells: 1\n  OR2D1: 5\n0\n      \n\nThe following examples check if reference library cells are valid for all instances, and list out instance\nnames.\n\n% check_inst_reference_library -include_instance -truncate 3\nInvalid reference cells: 2\n  BUFFD4BWP12T: 4\n      U1/U3/buf1\n      buf1\n      U1/buf1\n  EDFQD4BWP12T: 6\n      U1/U3/B2/dff1\n      U1/U3/B2/dff2\n      U1/U3/B2/rdff0\n0\nSee Also\ncheck_inst_timing_library(1) check_library_completeness(1)"
            },
            {
                "doc_id": "_xtop_handbook_0061",
                "summary": "The document provides information about the 'check_inst_timing_library' command in XTop. This command checks if timing library cells are valid for all cell instances in all corners. If any timing cell is invalid, it reports this cell and returns false. The command also includes a '-truncate' option to limit the instances reported, with a default value of 10000.",
                "content": "Commands\n\nName\ncheck_inst_timing_library --Check if timing library cells are valid for all cell instances in all corners.\n\nSynopsis\nbool check_inst_timing_library [-truncate max_count]\n\nint truncate in \"[1,inf)\"\n\nArguments\n-truncate max_count A limitation of reported cell count, default is 10000.\n\nDescription\nThis command checks if timing library cells are valid for all cell instances in all corners. If any timing cell\nis invalid, it will report this cell and return false.\n\nGenerally, it only to check if all the used library cells are valid in all corners. But once libraries are set\nfor some instance with command set_lib_per_instance(1), it needs to check instance by instance. In this\ncondition, the issue is reported by instance, and the item count may be large. To avoid large size of report,\nan option -truncate is provide to limit the instances reported, and the default value of it is 10000.\n\nExamples\nThe following examples check if timing library cells are valid for all cell instances in all corners.\n\n% check_inst_timing_library\nNo issue found.\n1\n% check_inst_timing_library\nInvalid timing library: 1\nOR2D1\n      \n\nSee Also\ncheck_inst_reference_library(1) check_library_completeness(1)\n\n75"
            },
            {
                "doc_id": "_xtop_handbook_0062",
                "summary": "The document provides information about the 'check_library_completeness' command in XTop. This command checks the completeness of both reference and timing libraries. It filters out incomplete cells in the ECO process, compares all corners with the reference corner, and reports any missing, extra, or pin mismatched cells. It also compares the reference library with the reference corner of the timing library. An example of the command's output is provided.",
                "content": "Commands\n\nName\ncheck_library_completeness --Check if the libraries, both reference library and timing libraries are\ncomplete.\n\nSynopsis\ncheck_library_completeness\n\nDescription\nThis command checks if the libraries, both reference library and timing libraries are complete. Those cells\nthat are not complete for reference library and timing libraries, will be filtered out in ECO process.\n\nThe timing library cells must match between every two corners. This command will compare all the other\ncorners with the reference corner, and report all the missing, extra, and pin mismatched cells.\n\nThis command will also compare reference library with the reference corner of timing library, and report\nall the missing, extra, and pin mismatched cells.\n\nExamples\nThis is an example of the check_library_completeness output. cell CLXL1 and ANDXL1 has pin A in\ntiming library mismatched with LEF. Timing library missing a cell sub_1. There's no extra cells in timing\nlibrary. There's no mismatching between each corners.\n\n% check_library_completeness\nCheck reference vs. timing:\nmismatched                2\n  CLXL1                   1\n    A\n  ANDXL1                  1\n    A\nmissing                   1\n  sub_1\nextra                     0\n\nCheck timing vs. timing:\nworst_cor:max             0\n  mismatched              0\n  missing                 0\n  extra                   0\n      \n\n76"
            },
            {
                "doc_id": "_xtop_handbook_0063",
                "summary": "The document provides information about the 'check_placement_overlap' command in XTop. This command checks for cell overlaps and cell overlaps with blockages in a design. It has options like '-ignore_blockage' to avoid printing cells overlapping with blockages, '-verbose' for a detailed report of violations, and 'designs' to specify the pattern list to match the design. The command reports separately for fixed placement cells and non-fixed placement cells.",
                "content": "Commands\n\nName\ncheck_placement_overlap --Check the overlap of the current placement.\n\nSynopsis\ncheck_placement_overlap [-verbose] [designs] [-ignore_blockage]\n\nflag ignore_blockage\n\nflag verbose\n\nstring_list designs\n\nArguments\n-ignore_blockage Not to print cells overlapping with blockages. By default, the command reports\n\nboth cells overlapping each other and cells overlapping with blockages.\n\n-verbose Prints a detailed report of all possible violations. By default, the command\nreports only a summary of all violations.\n\ndesigns Specifies the pattern list to match the design. If no pattern is specified, it means\nall designs.\n\nDescription\nThis command checks if: 1. Cells overlapping each other. 2. Cells overlapping with blockages in the design.\n\nIt reports for fixed placement cells and non-fixed placement cells separately.\n\nFixed placement means COVER | FIXED instances.\n\nIn detailed reports(-verbose), each victim instance is followed by several indented aggressors(instance or\nblockage-geometry). By specifying victim/aggressors, we mean aggressors overlap with the victim.\n\nIf violated instance has a halo definition in def file, we will add 'halo' after its name in the report.\n\nExamples\nThe following example shows the command for printing out a summary of all violations:\n\n% check_placement_overlap -verbose\n***********************************************************\nCheck_overlap for design( cpu ): Report for Fixed Placement Cells\nINFO #1: Fixed placement means COVER | FIXED instances.\nINFO #2: In detailed reports(-verbose), each victim instance is followed\n         by several indented aggressors(instance or blockage-geometry).\n***********************************************************\n(fixed placement) Cells Overlaps                : 2\n(fixed placement) Cells Overlapping Blockages   : 1\n***********************************************************\nsram_1\n    sram_2\n    ( 68.335 210.31 ) ( 163.1 295.465 ) \n\nsram_2\n    sram_1\n\n***********************************************************\n\n***********************************************************\nCheck_overlap for design( cpu ): Report for Non-fixed Placement Cells\nINFO #1: Fixed placement means COVER | FIXED instances.\nINFO #2: In detailed reports(-verbose), each victim instance is followed\n         by several indented aggressors(instance or blockage-geometry).\n***********************************************************\n(non-fixed placement) Cells Overlaps                    : 2\n(non-fixed placement) Cells Overlapping Blockages       : 0\n***********************************************************\nidec/U42   halo\n    idec/U120   halo\n\nidec/U120   halo\n    idec/U42   halo\n\n***********************************************************\n      \n\n78"
            },
            {
                "doc_id": "_xtop_handbook_0064",
                "summary": "This is a description of the 'check_placement_readiness' command in XTop tools. It checks if specified designs are ready for eco placement. The command has two arguments: '-truncate num', which specifies the maximum objects to print for each error or warning, and 'designs', which specifies the pattern list to match the design. The command returns the number of failed designs.",
                "content": "Commands\n\nName\ncheck_placement_readiness --Check if the specified designs are ready for eco placement.\n\nSynopsis\nint check_placement_readiness [-truncate num] [designs]\n\nint truncate\n\nstring_list designs\n\nArguments\n-truncate num Specifies the maximum objects to print for each error or warning, a non-positive\n\nvalue means all.\n\ndesigns Specifies the pattern list to match the design.\n\nDescription\nThis command checks if the specified designs are ready for eco placement.\n\nThe designs are matched with wildcard, and it means all designs if no pattern specified.\n\nThe return value of this command is the number of failed designs.\n\nExamples\nThe following example shows a placement readiness of checking report:\n\n% check_placement_readiness\ndesign: cpu_top              errors: 0               warnings: 0\ndesign: reg_sub              errors: 0               warnings: 0\nTotally checked 2 designs, 0 failed.\n0\n      \n\n79"
            },
            {
                "doc_id": "_xtop_handbook_0065",
                "summary": "",
                "content": "Commands\n\nName\nclear_highlight --Clear all highlighted objects on the open layout.\n\nSynopsis\nclear_highlight\n\nDescription\nThis command clears all highlighted objects on the open layout. If the GUI is not on or layout is not open,\nit does nothing.\n\nExamples\nThe following example clears all highlighted objects on the opened layout:\n\n% clear_highlight\n      \n\n80"
            },
            {
                "doc_id": "_xtop_handbook_0066",
                "summary": "This document provides information about the 'close_workspace' command in XTop. It includes options such as '-force' which forces the workspace to close without saving, and '-purge_timing_libraries' which purges all timing libraries and releases the memory. The document also explains the usage, arguments, and examples of the command.",
                "content": "Commands\n\nName\nclose_workspace --Close current workspace.\n\nSynopsis\nclose_workspace [-force] [-purge_timing_libraries]\n\nflag force\n\nflag purge_timing_libraries\n\nArguments\n-force Force to close without saving even if workspace has been modified.\n\n-purge_timing_libraries Purge all timing libraries and release the memories.\n\nDescription\nThis command closes current workspace. If the workspace has been modified without saving, it will report\nerror unless option -force is specified.\n\nBy default, all the timing libraries are kept in memory for reusing. And it will save the time to load\ntiming libraries if the next workspace to create or open uses the same libraries as the previous. Option\n-purge_timing_libraries can be specified to release the memories if you really want to. However, it is\nrecommended to exit and start a new XTop instead of using this option to avoid extra time cost.\n\nExamples\n\n% close_workspace\n      \n\nSee Also\ncreate_workspace(1) open_workspace(1)\n\n81"
            },
            {
                "doc_id": "_xtop_handbook_0067",
                "summary": "This is a description of the 'compare_slack_difference' command in XTop tool. It includes options such as '-scenario', '-slack_file', '-output_file', '-time_unit', '-abs_threshold', '-skip_setup', '-skip_hold', and '-only_endpoint'. This command is used to compare the slack difference between XTop and a user-provided slack file.",
                "content": "Commands\n\nName\ncompare_slack_difference --A debug command to compare slack between xtop and user given slack file.\n\nSynopsis\ncompare_slack_difference -scenario scenario_name -slack_file global_slack_file -\noutput_file output_file [-time_unit time_unit] [-abs_threshold abs_error] [-skip_setup] [-\nskip_hold] [-only_endpoint]\n\nfloat abs_threshold\n\nflag only_endpoint\n\nstring output_file\n\nstring scenario\n\nflag skip_hold\n\nflag skip_setup\n\nstring slack_file\n\nenum time_unit in \"ps ns\"\n\nArguments\n-abs_threshold abs_error Absolute threshold to record difference, using xtop time unit.\n\n-only_endpoint Only compare slack for end points.\n\n-output_file output_file Output file to record slack difference.\n\n-scenario scenario_name Which scenario to be compared.\n\n-skip_hold Dont compare hold slack.\n\n-skip_setup Dont compare setup slack.\n\n-slack_file global_slack_file Global slack file to be compared with.\n\n-time_unit time_unit Time unit in global slack file.\n\nDescription\nThis command reports the slack difference between xtop and given slack data.\n\nExamples\n\n82"
            },
            {
                "doc_id": "_xtop_handbook_0068",
                "summary": "The document provides information about the 'compare_tmlib' command in XTop tools. This command is used to compare liberty cells in a timing library. It includes options such as '-name', '-source_corner', '-target_corner', '-cell_map_file', '-cell_map_keywords', '-fixed_string', and '-regex'. The command can compare cells across corners or within a single corner and allows users to define a mapping rule for cell pairs with different naming styles.",
                "content": "Commands\n\nName\ncompare_tmlib --Compare liberty cells in timing library.\n\nSynopsis\ncompare_tmlib [-name compare_name] [-source_corner corner_name] [-target_corner\ncorner_name] [ -cell_map_file file_name | -cell_map_keywords keyword_pair ] [[ -fixed_string\n| -regex ] source_name_patterns [target_name_patterns]]\n\nstring cell_map_file\n\nstring_list cell_map_keywords\n\nflag fixed_string\n\nstring name\n\nflag regex\n\nstring source_corner\n\nstring target_corner\n\nstring_list source_name_patterns\n\nstring_list target_name_patterns\n\nArguments\n-cell_map_file file_name Cell name mapping files of source and target if the source and target\n\nuse different naming rule.\n\n-cell_map_keywords keyword_pair Keywords to match cell names between source and target.\n\n-fixed_string Use fixed string to match pattern.\n\n-name compare_name Compare session name.\n\n-regex Use regular expression to match pattern.\n\n-source_corner corner_name Source corner for comparison.\n\n-target_corner corner_name Target corner for comparison.\n\nsource_name_patterns Name patterns of the source cells.\n\ntarget_name_patterns Name patterns of the target cells.\n\nDescription\nThis command compares cells in the library. It can also compare cells cross corners, or just inside one\ncorner.\n\nUser can specify a name for the compare action. Through this name, it can reload, merge or delete compare\nresults. If user not specify name, it will assign an inner name for this comparison.\n\nWhile the cells to compare are named with different name styles, for example, libraries from different\nvendors, it needs to define the mapping rule to build the cell pairs.\n\n--Specify a map file with a simple format: one cell pair on each line.\n\n--Specify a map rule with keywords. For example, comparing between normal VT and low VT\ncells: \"AND2\", \"OR2\", \"AND2LVT\", and \"OR2LVT\", just specify keywords like {\"\" \"LVT\"}.For\na 2-dimension keywords, please combine the keywords with separator '@', like {\"LVT@20p\",\n\"HVT@35p\"}\n\nExamples\n\n84"
            },
            {
                "doc_id": "_xtop_handbook_0069",
                "summary": "This document provides information about the 'configure_design_definition' command in XTop tool. It includes the command's synopsis, arguments, description, and an example. The command is used to configure design definition and modify the settings of an existing design. The arguments include '-def' for DEF file, '-name' for the name of the design, '-new_name' for the new name of the design, and '-verilogs' for Verilog files.",
                "content": "Commands\n\nName\nconfigure_design_definition --Configure design definition.\n\nSynopsis\nconfigure_design_definition -name design_name [-new_name design_name] -verilogs\nfile_list [-def file_name]\n\nstring def\n\nstring name\n\nstring new_name\n\nstring_list verilogs\n\nArguments\n-def file_name DEF file for this design.\n\n-name design_name Name of the design.\n\n-new_name design_name New name of the design.\n\n-verilogs file_list Verilog files for this design.\n\nDescription\nThis command configures design definition. It modifies the settings of existing design. For detail, please\nrefer to command create_design_definition(1).\n\nExamples\nThe following example configures an existing design by a new design:\n\n% create_design_definition -name sub   \\\n    -verilogs {/home/user/date/sub.v}  \\\n    -def {/home/user/date/sub.def}\n% configure_design_definition -name sub -new_name sub1 \\\n    -verilogs {/home/user/date/sub1.v} \\\n    -def {/home/user/date/sub1.def}\n      \n\nSee Also\ncreate_design_definition(1)\n\n85"
            },
            {
                "doc_id": "_xtop_handbook_0070",
                "summary": "",
                "content": "Commands\n\nName\ncreate_corner --Create corner.\n\nSynopsis\ncreate_corner corner_name\n\nstring corner_name\n\nArguments\ncorner_name Corner name to create.\n\nDescription\nThis command creates corner.\n\nExamples\nThe following example creates a corner named \"worst\" for the design.\n\n% create_corner worst\n      \n\n86"
            },
            {
                "doc_id": "_xtop_handbook_0071",
                "summary": "The document provides information about the 'create_design_definition' command in XTop tool. This command is used to create a design definition, which generally consists of Verilog files and a DEF file. The command has options like '-overwrite' to overwrite an existing design, '-name' to specify the design name, '-verilogs' to list Verilog files, and '-def' to specify the DEF file. It also discusses the need to check site matches, set site maps, and set technology groups while using this command.",
                "content": "Commands\n\nName\ncreate_design_definition --Create design definition.\n\nSynopsis\ncreate_design_definition [-overwrite] [-name design_name] -verilogs file_list [-def\nfile_name]\n\nstring def\n\nstring name\n\nflag overwrite\n\nstring_list verilogs\n\nArguments\n-def file_name DEF file for this design.\n\n-name design_name Name of the design.\n\n-overwrite Overwrite the design if already exists.\n\n-verilogs file_list Verilog files for this design.\n\nDescription\nThis command creates design definition. Generally, a design consists Verilog files and one DEF file which\nrepresent the logical and physical view respectively. Files for both views must be specified except that the\nworkspace is defined as logical only.\n\nFor a block hierarchical design, it needs to create all the design definitions from bottom up to the top\ndesign. For a general hierarchical design with DEF files, define_designs(1) can help to create all the design\ndefinitions by analyzing the verilog and DEF files.\n\nOnce all design definitions have been created, it needs to check if all the sites are matched with those in\nreference library. Some PR tools write a meaningless site name in DEF file in the exporting process. And\nit needs to set a correct site map with command set_site_map(1) before import designs.\n\nIf technology groups other than the default are defined while linking the reference library, it needs to\nset correct technology group for the design with command set_tech_group(1). Otherwise, the design will\nreference the default library while importing.\n\nExamples\nThe following example creates a sub design with DEF file:\n\n% create_design_definition -name sub \\\n    -verilogs /home/user/date/sub.v -def /home/user/date/sub.def\n      \n\nThe following example creates a sub design without DEF file:\n% create_design_definition -name sub1 \\\n    -verilogs /home/user/date/sub1.v\n      \n\nThe following example creates a 2-level hierarchical design:\n\n% create_design_definition -name sub2 \\\n    -verilogs /home/user/date/sub2.v -def /home/user/date/sub2.def\n% create_design_definition -name top  \\\n    -verilogs /home/user/date/top.v -def /home/user/date/top.def\n      \n\nThe following example creates an already existing design:\n\n% create_design_definition -overwrite -name top \\\n    -verilogs /home/user/date/top.v -def /home/user/date/top.def\n      \nSee Also\nconfigure_design_definition(1) remove_design_definition(1) define_designs(1) import_designs(1)"
            },
            {
                "doc_id": "_xtop_handbook_0072",
                "summary": "",
                "content": "Commands\n\nName\ncreate_mode --Create mode.\n\nSynopsis\ncreate_mode mode_name\n\nstring mode_name\n\nArguments\nmode_name Mode name to create.\n\nDescription\nThis command creates mode.\n\nExamples\nThe following example creates a mode named \"func\" for the design.\n\n% create_mode func\n      \n\n89"
            },
            {
                "doc_id": "_xtop_handbook_0073",
                "summary": "This is a description of the 'create_scenario' command in XTop tool. The command has options like '-auto' for automatic scenario creation, '-corner' to specify the corner, '-mode' to specify the mode, and '-temperature' to specify the temperature of the current scenario. It also provides examples of how to use the command.",
                "content": "Commands\n\nName\ncreate_scenario --Create scenario.\n\nSynopsis\ncreate_scenario {{ -corner corner_name -mode mode_name } | -auto } scenario_name [-\ntemperature scenario_temperature]\n\nflag auto\n\nstring corner\n\nstring mode\n\nfloat temperature in \"[-100,200]\"\n\nstring scenario_name\n\nArguments\n-auto Create scenarios automatically by sweeping corners and modes.\n\n-corner corner_name Specify the corner.\n\n-mode mode_name Specify the mode.\n\n-temperature scenario_temperature Specify temperature of current scenario, for library interpolation\npurpose only.\n\nscenario_name Scenario name to create.\n\nDescription\nThis command creates scenario.\n\nExamples\nThe following example creates a scenario named \"func\" which corner is \"worst\" and mode is \"func\".\n\n% create_scenario func_worst -corner worst -mode func\n      \n\nThe following example creates a scenario named \"func_worst\" at 105 degrees centigrade, and it is\ninterpolated from libraries of other temperature when link_timing_library(1).\n\n% create_scenario func_worst -corner worst -mode func -temperature 105\n      \n\n90"
            },
            {
                "doc_id": "_xtop_handbook_0074",
                "summary": "This document provides information about the 'create_workspace' command used for timing optimization in XTop. It includes details about the command's syntax, arguments such as '-logical_only', '-overwrite', and 'workspace_path', and examples of its usage. It also mentions potential errors and related commands.",
                "content": "Commands\n\nName\ncreate_workspace --Create a workspace for timing optimization.\n\nSynopsis\ncreate_workspace [-overwrite] [-logical_only] workspace_path\n\nflag logical_only\n\nflag overwrite\n\nstring workspace_path\n\nArguments\n-logical_only For logical only design.\n\n-overwrite Force to overwrite if the specified directory is not empty.\n\nworkspace_path The path to create the workspace.\n\nDescription\nThis command tries to create a workspace for timing optimization. If the path does not exist, it will create\nit automatically. If the path already exists and is NOT empty, it will report error, and ask user to specify\n-overwrite to continue.\n\nIt will report error if failed to create the directory or the directory is not writable. On success, it will return\na string of full path to the workspace.\n\nExamples\nThe following example uses the create_workspace command to create a workspace for timing\noptimization.\n\n% create_workspace /home/user/tutorial\n      \n\nThe following example shows to create a workspace for logical only design. After that, user can only use\nthe -verilogs option of the create_design_definition command to create logical only design.\n\n% create_workspace -logical_only /home/user/tutorial\n      \n\nIf the path already exists and is not empty, use the -overwrite option can continue to create a workspace.\n\n% create_workspace -overwrite /home/user/tutorial\n      \n\nSee Also\nopen_workspace(1) close_workspace(1)\n\n91"
            },
            {
                "doc_id": "_xtop_handbook_0075",
                "summary": "",
                "content": "Commands\n\nName\ncurrent_workspace --Return path to current workspace.\n\nSynopsis\nstring current_workspace\n\nDescription\nThis command returns the path to current workspace. If no workspace has been open, it returns an empty\nstring.\n\nExamples\n\n% current_workspace\nworkspace1\n      \n\nSee Also\ncreate_workspace(1) open_workspace(1) close_workspace(1)\n\n92"
            },
            {
                "doc_id": "_xtop_handbook_0076",
                "summary": "This is a description of the \"define_designs\" command in XTop tools. The command automatically defines designs by analyzing Verilog and DEF files. It has options \"-force\", \"-verilogs\", and \"-defs\" to specify the behavior of the command. The \"-force\" option allows the command to continue even if some files do not exist or are not readable.",
                "content": "Commands\n\nName\ndefine_designs --Define designs automatically with Verilog and DEF files.\n\nSynopsis\ndefine_designs [-force] -verilogs file_list -defs file_list\n\nstring_list defs\n\nflag force\n\nstring_list verilogs\n\nArguments\n-defs file_list All the def files.\n\n-force Force to continue on even some of the specified files do not exist or are\nnot readable.\n\n-verilogs file_list All the verilog files.\n\nDescription\nThis command creates all design definitions automatically by analyze the give Verilog and DEF files. For\na block hierarchical design, it needs to define each design from bottom up one by one. This command\nanalyzes all the Verilog and DEF files and creates all the definitions in the dependency order. The decisions\nmade by this command are all depend on the files specified, so it is always recommended to review the\ncreated designs carefully on GUI or with command report_design_definition(1) before importing them.\n\nBy default, if any of the specified Verilog or DEF files does not exist or is not readable, this command\nwill break down and report an error. However, you can skip this error by specify option -force, and this\ncommand will keep going on execution.\n\nExamples\nThe following example defines a 2-level hierarchical design:\n\n% define_designs \\\n    -verilogs \"/home/user/date/sub1.v /home/user/date/top.v\" \\\n    -def \"/home/user/date/sub1.def /home/user/date/top.def\"\n      \n\nSee Also\ncreate_design_definition(1)\n\n93"
            },
            {
                "doc_id": "_xtop_handbook_0077",
                "summary": "This is a description of the command \"get_capacitance_violated_pins\" in XTop tools. The command creates a collection of capacitance violated pins in all scenarios, returning the worst violated value if a pin's capacitance is violated in more than one scenario. It includes an optional argument \"-pin_type type\" to specify the pin type, with the default being all types.",
                "content": "Commands\n\nName\nget_capacitance_violated_pins --Get capacitance violated pins.\n\nSynopsis\ncollection get_capacitance_violated_pins [-pin_type type]\n\nenum pin_type in \"all clock data\"\n\nArguments\n-pin_type type Specifies pin type, default is all.\n\nDescription\nThis command creates a collection of capacitance violated pins in all scenarios.If a pin's capacitance is\nviolated in more than one scenarios, it will return the worst violated value.\n\nExamples\nThe following example gets capacitance violated pins:\n\n% get_capacitance_violated_pins\n      \n\n94"
            },
            {
                "doc_id": "_xtop_handbook_0078",
                "summary": "The document provides information about the 'get_cells_in_region' command in XTop tool. This command retrieves cells in a specified region of a design. It includes options such as '-design design_name' to specify the design to query, '-enclosed' to get cells enclosed in the region, '-include_hierarchical' to include hierarchical cells, '-rect region' to specify a rectangle to query in design, and 'cells' to filter from original cells.",
                "content": "Commands\n\nName\nget_cells_in_region --Get cells in the specified region.\n\nSynopsis\ncollection get_cells_in_region [-design design_name] [-include_hierarchical] [-\nenclosed] -rect region [cells]\n\nstring design\n\nflag enclosed\n\nflag include_hierarchical\n\nrectf rect\n\ncollection cells\n\nArguments\n-design design_name Design to query the cells, top if not specified.\n\n-enclosed The cell must be enclosed in the region.\n\n-include_hierarchical Include hierarchical cell, leaf cells only if not specified.\n\n-rect region Specify a rectangle to query in design.\n\ncells The original cells to filter from.\n\nDescription\nThis command get cells in the specified region. It uses the coordinate system in the specified design, top if\nnot specified. By default, it will get all the cells overlap with the specified region. Specify option -enclosed\nto get only those cells totally enclosed in the region.\n\nIf you want to get the cells in this region from a specific cell set, just specify the collection of cells as\nthe input of this command.\n\nAll the queried cells will be mapped to STA cells in the top design. So, some physical cells, like fillers\nwill be filtered automatically. And if you query in a multiple instantiated sub-design, matched cells in all\ninstances will be returned.\n\nBy default, only leaf cells will be returned, to include the hierarchical cells, specify the option -\ninclude_hierarchical.\n\nExamples\nGet cells in a specified region.\n\n% get_cells_in_region -rect ((314,306)(315,307))\n% get_cells_in_region -rect \"((314,306) (315,307))\"\n% get_cells_in_region -rect {((314,306) (315,307))}\n\nGet cells matched with specified name pattern in specified region.\n\n% get_cells_in_region -rect ((314,306)(315,307)) [get_cells -hierarchical *buf*]\n      \n\n96"
            },
            {
                "doc_id": "_xtop_handbook_0079",
                "summary": "The document provides information about the 'get_corner' command in XTop tools. This command is used to get corners of specified patterns. It has several flags and arguments including '-fixed_string', '-of_scenario', '-regex', and 'patterns'. Examples of its usage are also provided.",
                "content": "Commands\n\nName\nget_corner --Get corners of specified patterns.\n\nSynopsis\nstring_list get_corner -of_scenario scenario_name {[ -fixed_string | -regex ] patterns }\n\nflag fixed_string\n\nstring of_scenario\n\nflag regex\n\nstring_list patterns\n\nArguments\n-fixed_string Match pattern as fixed string.\n\n-of_scenario scenario_name Scenario to get corner.\n\n-regex Match pattern as regular expression.\n\npatterns Patterns to match corners.\n\nDescription\nThis command gets corners of specified patterns.\n\nExamples\nThe following examples get the corner of the design.\n\n%  get_corner -of_scenario func_worst\nworst\n% get_corner -fixed_string best\nbest\n      \n\n97"
            },
            {
                "doc_id": "_xtop_handbook_0080",
                "summary": "The provided information is about the command \"get_critical_gba_path\" in XTop tool. This command creates a collection of pins to imitate a path. It has options like \"-delay_type\", \"-from\", \"-scenario\", \"-through\", and \"-to\" to specify the type of delay, start point, reference scenario, middle point, and end point respectively when tracing the critical path. Examples are also provided to illustrate its usage.",
                "content": "Commands\n\nName\nget_critical_gba_path --Create a collection of pins to imitate a path.\n\nSynopsis\ncollection get_critical_gba_path -delay_type delay_type { -from from_pin | -\nthrough middle_pin | -to to_pin } [-scenario reference_scenario]\n\nenum delay_type in \"min max\"\n\ncollection from\n\nstring scenario\n\ncollection through\n\ncollection to\n\nArguments\n-delay_type delay_type Specifies which type slack to use when trace critical path.\n\n-from from_pin Specifies the start point when trace critical path, you can only use\none of the -from, -through, -to.\n\n-scenario reference_scenario Only use slack data of referenced scenario to trace critical path.\nIf not specify referenced scenario, use the worst slack of all non-\nskipped scenarios. That means, if scenario_A is skipped, then\nignore it when trace critical path.\n\n-through middle_pin Specifies the middle point when trace critical path, you can only\nuse one of the -from, -through, -to.\n\n-to to_pin Specifies the end point when trace critical path, you can only use\none of the -from, -through, -to.\n\nDescription\nThis command creates a collection of pins to imitate a path.\n\nExamples\nThe following example gets the pins on critical gba path.\n\n% get_critical_gba_path -to status_reg_2_/D -delay_type min \\\n                        -scenario func_fast\n\"fsr_reg_1_/CP\", \"fsr_reg_1_/Q\", \"U453/A2\", \"U453/ZN\", \"U382/B1\", \n\"U382/ZN\", \"U343/A1\", \"U343/Z\", \"status_reg_2_/D\"\n      \n\nThis is an example to report the fail reasons of the pins on the critical path to specified endpoints after\nfix_hold_gba_violations.\nCommands\n\n% report_fail_reasons -pins \\\n    [get_critical_gba_path -to st_reg_2_/D -delay_type min \\\n     -scenario func_fast]\nPin           Insert Buffer         Size Cell Split Net ...\n-----------------------------------------------------------\nfsr_reg_1_/CP -                     -         -         -\nfsr_reg_1_/Q  -                     -         -         -\nU453/A2       break_setup_of_driver -         -         -\nU453/ZN       -                     -         -         -\nU382/B1       break_setup_of_driver -         -         -\nU382/ZN       -                     -         -         -\nU343/A1       -                     -         -         -\nU343/Z        -                     -         -         -\nst_reg_2_/D   break_setup_of_driver -         -         -"
            },
            {
                "doc_id": "_xtop_handbook_0081",
                "summary": "This is a description of the 'get_dont_touch_cells' command in XTop tool. The command retrieves cells that match specified patterns. It includes options such as '-exact' for fixed string matching, '-hierarchical' for level-by-level search, '-nocase' for case-insensitive matching, '-quiet' to suppress error messages, and '-regex' to view patterns as regular expressions.",
                "content": "Commands\n\nName\nget_dont_touch_cells --Get dont touch cells matched with the specified patterns.\n\nSynopsis\ncollection get_dont_touch_cells [-hierarchical] [-quiet] [ -regex | -exact ] [-nocase]\n[patterns]\n\nflag exact\n\nflag hierarchical\n\nflag nocase\n\nflag quiet\n\nflag regex\n\nstring_list patterns\n\nArguments\n-exact Uses fixed string, and disable wildcard match.\n\n-hierarchical Searches for cells level-by-level relative to the current instance.\n\n-nocase Makes the matching mode case-insensitive.\n\n-quiet Suppress error and warning messages if no cells match.\n\n-regex Views the patterns argument as real regular expressions rather than simple wildcard\npatterns.\n\npatterns Specifies the patterns used to match cells.\n\nDescription\nThis command gets dont touch cells matched with the specified patterns. By default, the patterns are\nmatched in wildcard mode, and it means all if no pattern is specified. While option -excat or -regex is\nspecified, the patterns are matched in fixed string and regular expression respectively, and it gets nothing\nif no pattern is specified.\n\nExamples\nThe following example gets all dont touch cells level-by-level relative to the current instance:\n\n% get_dont_touch_cells -hierarchical *\n      \n\nThe following example gets dont touch cells such as U62, U76 ...:\n\n% get_dont_touch_cells -regex {U[0-9]{2}}\n\nSee Also\nget_dont_touch_nets(1) get_dont_touch_pins(1) is_dont_touch(1) restore_user_dont_touch(1)\nsave_user_dont_touch(1) set_dont_touch(1) set_hier_path_dont_touch(1) set_module_dont_touch(1)\n\n101"
            },
            {
                "doc_id": "_xtop_handbook_0082",
                "summary": "This document provides information about the 'get_dont_touch_nets' command in XTop tool. The command retrieves nets that match specified patterns. It includes flags such as '-exact', '-hierarchical', '-nocase', '-quiet', and '-regex', and an argument 'patterns'. The command operates in wildcard mode by default, but can also operate in fixed string or regular expression modes. Examples of its usage are also provided.",
                "content": "Commands\n\nName\nget_dont_touch_nets --Get dont touch nets matched with the specified patterns.\n\nSynopsis\ncollection get_dont_touch_nets [-hierarchical] [-quiet] [ -regex | -exact ] [-nocase]\n[patterns]\n\nflag exact\n\nflag hierarchical\n\nflag nocase\n\nflag quiet\n\nflag regex\n\nstring_list patterns\n\nArguments\n-exact Uses fixed string, and disable wildcard match.\n\n-hierarchical Searches for nets level-by-level relative to the current instance.\n\n-nocase Makes the matching mode case-insensitive.\n\n-quiet Suppress error and warning messages if no nets match.\n\n-regex Views the patterns argument as real regular expressions rather than simple wildcard\npatterns.\n\npatterns Specifies the patterns used to match nets.\n\nDescription\nThis command gets dont touch nets matched with the specified patterns. By default, the patterns are\nmatched in wildcard mode, and it means all if no pattern is specified. While option -excat or -regex is\nspecified, the patterns are matched in fixed string and regular expression respectively, and it gets nothing\nif no pattern is specified.\n\nExamples\nThe following example gets dont touch nets matched n* and N* level-by-level relative to the current\ninstance:\n\n% get_dont_touch_nets -nocase -hierarchical n*\n\"nAOE_SSOE\", \"NAOE_SSOE_io\"\n      \n\nThe following example gets dont touch nets such as n2, n4 ...:\n\n% get_dont_touch_nets -regex {n[0-9]}\n\"n1\", \"n2\", \"n4\"\n      \n\nSee Also\nget_dont_touch_cells(1) get_dont_touch_pins(1) is_dont_touch(1) restore_user_dont_touch(1)\nsave_user_dont_touch(1) set_dont_touch(1) set_hier_path_dont_touch(1) set_module_dont_touch(1)\n\n103"
            },
            {
                "doc_id": "_xtop_handbook_0083",
                "summary": "This document provides information about the 'get_dont_touch_pins' command in XTop tool. The command retrieves 'dont touch' pins that match specified patterns. It includes flags such as '-exact', '-hierarchical', '-nocase', '-quiet', and '-regex', and a 'patterns' argument. The command operates in wildcard mode by default, but can also operate in fixed string or regular expression modes. Examples of usage are also provided.",
                "content": "Commands\n\nName\nget_dont_touch_pins --Get dont touch pins matched with the specified patterns.\n\nSynopsis\ncollection get_dont_touch_pins [-hierarchical] [-quiet] [ -regex | -exact ] [-nocase]\n[patterns]\n\nflag exact\n\nflag hierarchical\n\nflag nocase\n\nflag quiet\n\nflag regex\n\nstring_list patterns\n\nArguments\n-exact Uses fixed string, and disable wildcard match.\n\n-hierarchical Searches for pins level-by-level relative to the current instance.\n\n-nocase Makes the matching mode case-insensitive.\n\n-quiet Suppress error and warning messages if no pins match.\n\n-regex Views the patterns argument as real regular expressions rather than simple wildcard\npatterns.\n\npatterns Specifies the patterns used to match pins.\n\nDescription\nThis command gets dont touch pins matched with the specified patterns. By default, the patterns are\nmatched in wildcard mode, and it means all if no pattern is specified. While option -excat or -regex is\nspecified, the patterns are matched in fixed string and regular expression respectively, and it gets nothing\nif no pattern is specified.\n\nExamples\nThe following example gets dont touch pins matched U*/* and u*/* level-by-level relative to the current\ninstance:\n\n% get_dont_touch_pins -hierarchical -nocase u*/*\n\"core/srio/u_clk_mux_cell/I0\", \"core/u_clk_mux_cell/I1\"\n      \n\nThe following example gets dont touch pins such as U43/A1, U43/A2 and so on:\n\n% get_dont_touch_pins -regex {U[0-9]+/.*}\n\"U3/A1\", \"U43/A1\", \"U43/A2\"\n      \n\nSee Also\nget_dont_touch_cells(1) get_dont_touch_nets(1) is_dont_touch(1) restore_user_dont_touch(1)\nsave_user_dont_touch(1) set_dont_touch(1) set_hier_path_dont_touch(1) set_module_dont_touch(1)\n\n105"
            },
            {
                "doc_id": "_xtop_handbook_0084",
                "summary": "",
                "content": "Commands\n\nName\nget_dropped_scenarios --Return string list of dropped scenarios.\n\nSynopsis\nstring_list get_dropped_scenarios\n\nDescription\nThis command return dropped scenarios, similar to report_dropped_scenarios(1).\n\nExamples\nThe following example get dropped scenario:\n\n% get_dropped_scenarios\ntest_fast test_slow\n      \n\nSee Also\nreport_dropped_scenarios(1)\n\n106"
            },
            {
                "doc_id": "_xtop_handbook_0085",
                "summary": "This is a description of the 'get_fanout_violated_pins' command in XTop tool. It creates a collection of max fanout violated pins. The command has an optional argument '-pin_type type' which specifies the pin type, with the default being 'all'. The pin's max fanout constraint is defined by the parameter 'max_fanout'. If a pin's fanout is larger than 'max_fanout', it will be returned.",
                "content": "Commands\n\nName\nget_fanout_violated_pins --Get fanout violated pins.\n\nSynopsis\ncollection get_fanout_violated_pins [-pin_type type]\n\nenum pin_type in \"all clock data\"\n\nArguments\n-pin_type type Specifies pin type, default is all.\n\nDescription\nThis command creates a collection of max fanout violated pins. Pin's max fanout constraint is defined by\nparameter 'max_fanout',if pin's fanout is larger than 'max_fanout', it will be returned.\n\nExamples\nThe following example gets max fanout violated pins:\n\n% get_fanout_violated_pins\n\"U1/Z\", \"U21/Z\"\n      \n\n107"
            },
            {
                "doc_id": "_xtop_handbook_0086",
                "summary": "This is a description of the 'get_highlighted_cells' command in XTop tool. The command retrieves highlighted cells from the layout and maps them to STA cells in the top design, filtering out physical cells like fillers. It also maps cells in all instances if the layout shows a multiple instantiated sub-design.",
                "content": "Commands\n\nName\nget_highlighted_cells --Get highlighted cells on the layout and return as a collection.\n\nSynopsis\ncustomized get_highlighted_cells\n\nDescription\nThis command gets cells highlighted on layout. The cells will be mapped to STA cells in the top design.\nSo, some physical cells, like fillers will be filtered automatically. And if the layout shows a multiple\ninstantiated sub-design, cells will be mapped in all instances.\n\nExamples\nThe following example gets cells of highlighted on gui.\n\n% get_highlighted_cells\n\"U1/U3/rdff0\"\n      \n\n108"
            },
            {
                "doc_id": "_xtop_handbook_0087",
                "summary": "",
                "content": "Commands\n\nName\nget_highlighted_nets --Get highlighted nets on the layout and return as a collection.\n\nSynopsis\ncustomized get_highlighted_nets\n\nDescription\nThis command gets nets highlighted on layout. The nets will be mapped to STA nets in the top design.\nAnd if the layout shows a multiple instantiated sub-design, nets will be mapped in all instances.\n\nExamples\nThe following example gets nets of highlighted on gui.\n\n% get_highlighted_nets\n\"U1/U3/B2/dnet1\", \"U1/U3/B3/dnet1\", \"U1/B1/dnet1\"\n      \n\n109"
            },
            {
                "doc_id": "_xtop_handbook_0088",
                "summary": "This is a description of the 'get_highlighted_pins' command in XTop tool. This command retrieves pins highlighted on the layout and returns them as a collection. It maps these pins to STA pins in the top design, filters out pins on physical only cells fillers, and maps pins in all instances if the layout shows a multiple instantiated sub-design. An example of its usage is also provided.",
                "content": "Commands\n\nName\nget_highlighted_pins --Get highlighted pins on the layout and return as a collection.\n\nSynopsis\ncustomized get_highlighted_pins\n\nDescription\nThis command gets pins highlighted on layout. The pins will be mapped to STA pins in the top design.\nSo, pins on physical only cells fillers will be filtered automatically. And if the layout shows a multiple\ninstantiated sub-design, pins will be mapped in all instances.\n\nExamples\nThe following example gets pins of highlighted on gui.\n\n% get_highlighted_pins\n\"U1/buf2/Z\", \"U1/buf3/I\", \"U1/rdff0/Q\"\n      \n\n110"
            },
            {
                "doc_id": "_xtop_handbook_0089",
                "summary": "This is a description of the command \"get_hold_gba_violated_pins\" in XTop tools. The command creates a collection of hold GBA violated pins. It has two optional arguments: \"-endpoint_only\", which returns only endpoint violated pins, and \"-exclude_path\", which gets slack only from GBA data.",
                "content": "Commands\n\nName\nget_hold_gba_violated_pins --Get hold GBA violated pins.\n\nSynopsis\ncollection get_hold_gba_violated_pins [-endpoint_only] [-exclude_path]\n\nflag endpoint_only\n\nflag exclude_path\n\nArguments\n-endpoint_only Only get endpoint pins.\n\n-exclude_path Get slack only from GBA data.\n\nDescription\nThis command create a collection of hold GBA violated pins.If a pin violated in one scenario, it will\nbe return. If specified endpoint only, it only return endpoint violated pin, by default, it will return all. If\nspecified excludePath, it will only get slack from GBA, by default, it will take path slack prior if any path\nthrough this pin.\n\nExamples\nThe following example gets hold gba violated pins:\n\n% get_hold_gba_violated_pins -excludePath \n      \n\n111"
            },
            {
                "doc_id": "_xtop_handbook_0090",
                "summary": "This is a description of the 'get_io_path_pins' command in XTop tools. It retrieves pins on the IO path of a design, with optional flags '-hold' and '-setup' to specify only pins of hold path or setup path respectively. If no argument is specified, both hold and setup paths are included. Examples of usage are also provided.",
                "content": "Commands\n\nName\nget_io_path_pins --Get pins on IO path of design.\n\nSynopsis\ncollection get_io_path_pins [ -hold | -setup ]\n\nflag hold\n\nflag setup\n\nArguments\n-hold Only pins of hold path included.\n\n-setup Only pins of setup path included.\n\nDescription\nThis command gets pins that are on IO path of design. Notice that if identify_io_path_pins(1) is not called,\nthe returned pins are just the collection that dumped from third party STA tools which are read as timing\ndata.\n\nIf no argument specified, both hold and setup path are included. But if timing path is not read, there will\nbe no difference for the argument.\n\nExamples\nThe following example gets pins on IO path of design.\n\n% get_io_path_pins\n\"stack1_reg_1_/D\", \"stack1_reg_2_/D\", \"stack1_reg_2_/E\", ...\n      \n\nThe following example sets IO path pins as dont touch.\n\n% set_dont_touch [get_io_path_pins]\n      \n\nSee Also\nidentify_io_path_pins(1)\n\n112"
            },
            {
                "doc_id": "_xtop_handbook_0091",
                "summary": "This is a description of the 'get_mode' command in XTop tool. It includes options such as '-of_scenario', '-fixed_string', and '-regex'. The command is used to get modes of specified patterns in a given scenario.",
                "content": "Commands\n\nName\nget_mode --Get modes of specified patterns.\n\nSynopsis\nstring_list get_mode -of_scenario scenario_name {[ -fixed_string | -regex ] patterns }\n\nflag fixed_string\n\nstring of_scenario\n\nflag regex\n\nstring_list patterns\n\nArguments\n-fixed_string Match pattern as fixed string.\n\n-of_scenario scenario_name Scenario to get mode.\n\n-regex Match pattern as regular expression.\n\npatterns Patterns to match modes.\n\nDescription\nThis command gets modes of specified patterns.\n\nExamples\nThe following examples get the mode of the design.\n\n% get_mode -of_scenario func_worst\nfunc\n% get_mode  -regex func.*\nfunc\n      \n\n113"
            },
            {
                "doc_id": "_xtop_handbook_0092",
                "summary": "",
                "content": "Commands\n\nName\nget_no_annotated_data_nets --Return a collection of nets which no valid wire capacitance data.\n\nSynopsis\ncollection get_no_annotated_data_nets\n\nDescription\nThis command return top nets which no valid wire capacitance data in some scenarios. That means, those\nnets have not wire capacitance or wire capacitance are too small (less than 2e-6*Capacitance_Unit).\n\nYou can use report_annotated_timing_data -verbose -net xxx_net to check.\n\nExamples\n\n114"
            },
            {
                "doc_id": "_xtop_handbook_0093",
                "summary": "",
                "content": "Commands\n\nName\nget_no_annotated_data_pins --Return a collection of pins which no annotated timing data.\n\nSynopsis\ncollection get_no_annotated_data_pins\n\nDescription\nThis command return leaf pins which no annotated timing data. That means, those pins not appear in any\nslack/timing/clock files.\n\nExamples\n\n115"
            },
            {
                "doc_id": "_xtop_handbook_0094",
                "summary": "The document provides information about the 'get_path_groups' command in XTop tool. This command returns clock groups of specified paths. It includes options such as '-filter patterns' to filter groups by name, '-regex' for matching filter in regular expression format, and 'paths' to specify the paths to get clock groups.",
                "content": "Commands\n\nName\nget_path_groups --Return clock groups of the specified paths.\n\nSynopsis\nstring_list get_path_groups [[-regex] -filter patterns ] [paths]\n\nstring_list filter\n\nflag regex\n\ncollection paths\n\nArguments\n-filter patterns Patterns to filter the groups by name.\n\n-regex Match the filter in regular expression format.\n\npaths Paths to get clock groups.\n\nDescription\nThis command returns clock groups of the specified paths. If paths are not specified, clock groups of all\npaths will be returned.\n\nOnce filters are specified, the clock groups that do not exactly match any of the specified filters will\nbe ignored. If the option -regex is specified, the names will be matched with regular expression syntax,\notherwise, wildcard is used as default.\n\nExamples\n\n116"
            },
            {
                "doc_id": "_xtop_handbook_0095",
                "summary": "This is a documentation for the 'get_paths' command in XTop tool. It includes various options such as '-quiet', '-completely_conflict', '-path_names', '-within', '-across', '-from_hierarchy', '-to_hierarchy', '-delay_type', '-path_type', '-lower_bound', '-upper_bound', '-scenario', '-group', '-through_points', '-start_points', '-end_points', and '-filter'. Each option has a specific function and usage in the command.",
                "content": "Commands\n\nName\nget_paths --Create a collection of paths.\n\nSynopsis\ncollection get_paths [-quiet] [-completely_conflict] [-path_names names] [ -within\nwithin_module | -across across_module ] [-from_hierarchy from_hierarchy_name] [-\nto_hierarchy to_hierarchy_name] [-delay_type dtype] [-path_type ptype] [-lower_bound\nlower_bound] [-upper_bound upper_bound] [-scenario scenario] [-group group] [-\nthrough_points through] [-start_points start] [-end_points end] [-filter expression]\n\nstring across\n\nflag completely_conflict\n\nenum delay_type in \"all min max\"\n\nstring_list end_points\n\nstring filter\n\nstring from_hierarchy\n\nstring_list group\n\nfloat lower_bound\n\nstring_list path_names\n\nenum_list path_type in \"r2r in2r r2out in2out clock_gating async\"\n\nflag quiet\n\nstring_list scenario\n\nstring_list start_points\n\nstring_list through_points\n\nstring to_hierarchy\n\nfloat upper_bound\n\nstring within\n\nArguments\n-across across_module Specify the module name that path across.\n\n-completely_conflict Searches for paths that which is completely conflict.\n\n-delay_type dtype Specifies delay type of path, default is All.\n\n-end_points end Specifies end point or cell patterns.\n\n-filter expression Filter every object with the specified expression.\n\n117"
            },
            {
                "doc_id": "_xtop_handbook_0096",
                "summary": "This document provides a detailed explanation of the 'get_paths' command in XTop tool. It includes various options such as '-from_hierarchy', '-group', '-lower_bound', '-path_names', '-path_type', '-quiet', '-scenario', '-start_points', '-through_points', '-to_hierarchy', '-upper_bound', and '-within'. The command is used to create a collection of paths and the document also provides examples of how to use the command with different options.",
                "content": "Commands\n\n-from_hierarchy Specify the hierarchy name that path starts from.\nfrom_hierarchy_name\n\n-group group Specifies path group.\n\n-lower_bound lower_bound Specifies path slack lower bound with unit ns, default is -1.0e6.\n\n-path_names names Specify the path name or id list.\n\n-path_type ptype Specifies the path type, it will return all types by default.\n\n-quiet Keep quiet, do not report message for those wrong names while\nfind path by names.\n\n-scenario scenario Specifies path scenarios.\n\n-start_points start Specifies start point or cell patterns.\n\n-through_points through Specifies through point or cell patterns.\n\n-to_hierarchy to_hierarchy_name Specify the hierarchy name that paths ends.\n\n-upper_bound upper_bound Specifies path slack upper bound with unit ns, default is 1.0e6.\n\n-within within_module Specify the module name that path within.\n\nDescription\nThis command creates a collection of paths.\n\nExamples\nThe following example gets the paths with endpoint status_reg_0_/D, delay_type includes max and min,\nand scenario is func_slow.\n\n% get_paths -end_points status_reg_0_/D  -delay_type all \\\n            -scenario func_slow\n\"Path_59\", \"Path_71\", \"Path_75\", \"Path_83\" ...\n      \n\nThe following example is used to skip points those slacks are smaller than the lower bound threshold value.\n\n% get_paths -end_points status_reg_0_/D -delay_type min \\\n            -scenario func_fast -lower_bound -0.2\n\"Path_45\"(0.0097), \"Path_58\"(-0.1271), \"Path_62\"(0.0405) ...\n      \n\nThe following example is used to skip points whose slacks are larger than the upper bound threshold value.\n\n% get_paths -end_points status_reg_0_/D -delay_type max \\\n            -scenario func_fast -upper_bound 0.005\n\"Path_71\"(0.0012), \"Path_78\"(0.0008), \"Path_90\"(-0.0074) ...\n      \n\n118"
            },
            {
                "doc_id": "_xtop_handbook_0097",
                "summary": "",
                "content": "Commands\n\nThe following example shows how to get paths with clock uncertainty which is more than -3.0.\n\n% get_paths -filter \"clock_uncertainty > -3.0\"\n\"Path_14220\", \"Path_14231\", \"Path_14242\"\n      \n\n119"
            },
            {
                "doc_id": "_xtop_handbook_0098",
                "summary": "",
                "content": "Commands\n\nName\nget_ref_cells --Get reference cell names for the given name patterns.\n\nSynopsis\nget_ref_cells cell_name\n\nstring_list cell_name\n\nArguments\ncell_name Specifies the pattern list to match the cell.\n\nDescription\nThis command get all reference cell names which match the given name patterns.\n\nExamples\nThe following example shows all library cells that match the specified pattern list.\n\n% get_ref_cells IOA21*\nIOA21X4T IOA21X0T IOA21X4THVT IOA21X2T IOA21X2THVT IOA21X1T\n      \n\n120"
            },
            {
                "doc_id": "_xtop_handbook_0099",
                "summary": "",
                "content": "Commands\n\nName\nget_reference_corner --Get the reference corner.\n\nSynopsis\nstring get_reference_corner\n\nDescription\nThis command get the reference corner.\n\nExamples\nThe following example gets the reference corner of the design.\n\n% get_reference_corner\nworst\n      \n\nSee Also\ncreate_corner(1) remove_corner(1) set_reference_corner(1)\n\n121"
            },
            {
                "doc_id": "_xtop_handbook_0100",
                "summary": "",
                "content": "Commands\n\nName\nget_reference_mode --Get the reference mode.\n\nSynopsis\nstring get_reference_mode\n\nDescription\nThis command get the reference mode.\n\nExamples\nThe following example gets the reference mode of the design.\n\n % get_reference_mode\n func\n      \n\nSee Also\ncreate_mode(1) remove_mode(1) set_reference_mode(1)\n\n122"
            },
            {
                "doc_id": "_xtop_handbook_0101",
                "summary": "",
                "content": "Commands\n\nName\nget_reference_scenario --Get the reference scenario.\n\nSynopsis\nstring get_reference_scenario\n\nDescription\nThis command get the reference scenario.\n\nExamples\nThe following example gets the reference scenario of the design.\n\n% get_reference_scenario\nfunc_slow\n      \n\nSee Also\ncreate_scenario(1) remove_scenario(1) set_reference_scenario(1)\n\n123"
            },
            {
                "doc_id": "_xtop_handbook_0102",
                "summary": "This document provides information about the 'get_scenario' command in XTop tool. It includes the syntax, arguments, and examples of usage. The command retrieves scenarios of specified patterns, with options to filter by corner, mode, or scenario id, and to match patterns as fixed string or regular expression.",
                "content": "Commands\n\nName\nget_scenario --Get scenarios of specified patterns.\n\nSynopsis\nstring_list get_scenario [-of_corner corner_name] [-of_mode mode_name] [ -\nfixed_string | -regex ] { patterns | -by_id scenario_id }\n\nint by_id\n\nflag fixed_string\n\nstring of_corner\n\nstring of_mode\n\nflag regex\n\nstring_list patterns\n\nArguments\n-by_id scenario_id Get scenario through its id.\n\n-fixed_string Match pattern as fixed string.\n\n-of_corner corner_name Only get scenarios that belong to specified corner.\n\n-of_mode mode_name Only get scenarios that belong to specified mode.\n\n-regex Match pattern as regular expression.\n\npatterns Patterns to match scenarios.\n\nDescription\nThis command gets scenarios of specified patterns.\n\nExamples\nThe following examples get the scenario of the design.\n\n% get_scenario -of_corner worst -of_mode func func_worst\nfunc_worst\n% get_scenario -of_mode func *\nfunc_best func_worst\n% get_scenario *\nfunc_best func_worst test_best test_worst\n% get_scenario -by_id 1\nfunc_worst\n      \n\n124"
            },
            {
                "doc_id": "_xtop_handbook_0103",
                "summary": "This is a description of the 'get_selected_cells' command in XTop tool. The command retrieves selected cells on the layout and maps them to STA cells in the top design, filtering out physical cells like fillers. It also maps cells in all instances if the layout shows a multiple instantiated sub-design.",
                "content": "Commands\n\nName\nget_selected_cells --Get selected cells on the layout and return as a collection.\n\nSynopsis\ncustomized get_selected_cells\n\nDescription\nThis command gets cells selected on layout. The cells will be mapped to STA cells in the top design.\nSo, some physical cells, like fillers will be filtered automatically. And if the layout shows a multiple\ninstantiated sub-design, cells will be mapped in all instances.\n\nExamples\nThe following example gets cells of selected on gui.\n\n% get_selected_cells\n\"U1/U3/B2/rdff0\", \"U1/U3/B3/rdff0\", \"U1/B1/rdff0\"\n      \n\n125"
            },
            {
                "doc_id": "_xtop_handbook_0104",
                "summary": "",
                "content": "Commands\n\nName\nget_selected_nets --Get selected nets on the layout and return as a collection.\n\nSynopsis\ncustomized get_selected_nets\n\nDescription\nThis command gets nets selected on layout. The nets will be mapped to STA nets in the top design. And\nif the layout shows a multiple instantiated sub-design, nets will be mapped in all instances.\n\nExamples\nThe following example gets nets of selected on gui.\n\n% get_selected_nets\n\"U1/U3/dnet7\"\n      \n\n126"
            },
            {
                "doc_id": "_xtop_handbook_0105",
                "summary": "This is a description of the 'get_selected_pins' command in XTop tool. The command retrieves selected pins on the layout, maps them to STA pins in the top design, and filters out pins on physical-only cells. It also maps pins in all instances if the layout shows a multiple instantiated sub-design.",
                "content": "Commands\n\nName\nget_selected_pins --Get selected pins on the layout and return as a collection.\n\nSynopsis\ncustomized get_selected_pins\n\nDescription\nThis command gets pins selected on layout. The pins will be mapped to STA pins in the top design. So,\npins on physical only cells will be filtered automatically. And if the layout shows a multiple instantiated\nsub-design, pins will be mapped in all instances.\n\nExamples\nThe following example gets pins of selected on gui.\n\n% get_selected_pins\n\"U1/U2/buf7/I\", \"U1/U2/buf6/Z\", \"U1/U2/buf7/Z\"\n      \n\n127"
            },
            {
                "doc_id": "_xtop_handbook_0106",
                "summary": "This is a description of the command \"get_setup_gba_violated_pins\" in XTop tools. It includes two flags: \"endpoint_only\" and \"exclude_path\". The command creates a collection of setup GBA violated pins and returns different results based on the specified flags.",
                "content": "Commands\n\nName\nget_setup_gba_violated_pins --Get setup GBA violated pins.\n\nSynopsis\ncollection get_setup_gba_violated_pins [-endpoint_only] [-exclude_path]\n\nflag endpoint_only\n\nflag exclude_path\n\nArguments\n-endpoint_only Only get endpoint pins.\n\n-exclude_path Get slack only from GBA data.\n\nDescription\nThis command create a collection of setup GBA violated pins.If a pin violated in one scenario, it will\nbe return. If specified endpoint only, it only return endpoint violated pin, by default, it will return all. If\nspecified excludePath, it will only get slack from GBA, by default, it will take path slack prior if any path\nthrough this pin.\n\nExamples\nThe following example gets setup gba violated pins:\n\n% get_setup_gba_violated_pins -excludePath \n      \n\n128"
            },
            {
                "doc_id": "_xtop_handbook_0107",
                "summary": "This is a description of the command \"get_si_violated_pins\" in XTop tools. The command returns a collection of pins with signal integrity (si) larger than a specified constraint. It includes an optional argument \"-pin_type type\" to specify the pin type, which can be data, clock, or all (default).",
                "content": "Commands\n\nName\nget_si_violated_pins --Get si violated pins.\n\nSynopsis\ncollection get_si_violated_pins [-pin_type type]\n\nenum pin_type in \"all clock data\"\n\nArguments\n-pin_type type Specifies the pin type, data or clock, default is all.\n\nDescription\nThis command returns a collection of pins which si is larger than constraint. The constraint value is\nspecified by the parameter max_si. Only driver pins will be returned.\n\nExamples\nThe following example gets data path si violations.\n\n% get_si_violated_pins -pin_type data \n\"alu/U136/ZN\", \"alu/U141/ZN\", \"alu/U142/ZN\", \"alu/U143/ZN\",...\n      \n\n129"
            },
            {
                "doc_id": "_xtop_handbook_0108",
                "summary": "This is a description of the 'get_specific_lib_cells' command in XTop tools. It retrieves specific library cells for a specified design and returns them as a list of strings. The command has two arguments: '-design' for specifying the design name and '-hier_path' for the hierarchy path name of the design. If no design is specified, it defaults to the top design. The command only returns the exact cells set by 'set_specific_lib_cells'.",
                "content": "Commands\n\nName\nget_specific_lib_cells --Get specific library cells for specified design.\n\nSynopsis\nstring_list get_specific_lib_cells [-design design_name] [-hier_path\nhier_path_name]\n\nstring design\n\nstring hier_path\n\nArguments\n-design design_name Design to get specific lib cells.\n\n-hier_path hier_path_name Hierarchy path name of design.\n\nDescription\nThis command get all specific lib cells for specified design, and return as a list of string. If no design is\nspecified, it means the top design. It will only return the exact cells that is set by set_specific_lib_cells(1),\nwhich means no expansion for hierarchy path if -hier_path given.\n\nExamples\nThe following example shows the get_specific_lib_cells output.\n\n% set_specific_lib_cells -design cpu -recursive BUFFX4T\n% get_specific_lib_cells -design regs\nBUFFX4T\n      \n\nSee Also\nset_specific_lib_cells(1) report_specific_lib_cells(1) purge_specific_lib_cells(1)\n\n130"
            },
            {
                "doc_id": "_xtop_handbook_0109",
                "summary": "",
                "content": "Commands\n\nName\nget_tech_group --Get technology group of specified design.\n\nSynopsis\nstring get_tech_group -design design_name\n\nstring design\n\nArguments\n-design design_name Design to get technology group.\n\nDescription\nThis command gets technology group of the specified design. If no technology group has been defined or\nset, a string \"default\" will be returned.\n\nExamples\nSee Also\n\nset_tech_group(1)\n\n131"
            },
            {
                "doc_id": "_xtop_handbook_0110",
                "summary": "The document provides information about the command 'get_tmlib_cell_property' in XTop tool. This command retrieves the property of a specific tmlib cell on a specified corner. The properties supported include delay, transition, internal power, leakage power, area, and capacitance. The command is case sensitive and the raw data for different properties is defined on different levels. The document also provides references for detailed calculations and examples of usage.",
                "content": "Commands\n\nName\nget_tmlib_cell_property --Get property of certain tmlib cell on specified corner.\n\nSynopsis\nget_tmlib_cell_property -corner corner_name cell [property]\n\nstring corner\n\nstring cell\n\nenum property in \"delay transition internal_power leakage_power area capacitance\"\n\nArguments\n-corner corner_name Indicates the corner to find cell.\n\ncell Indicates the cell name.\n\nproperty Indicates the property to get.\n\nDescription\nThis command gets the property of certain tmlib cell on specified corner. The cell name specified is\nmatched using fixing string and is case sensitive. The supported properties are:\n\n--delay\n\n--transition\n\n--internal_power\n\n--leakage_power\n\n--area\n\n--capacitance\n\nFor different properties, the raw data is defined on different levels, such as cell level, pin level, arc level\n(timing/internal_group with related_pin attribute). About the detailed calculation,\n\n--delay/transition/internal_power :\n\nplease refer to tmlib_cell_evaluation_principle(1),tmlib_arc_evaluation_principle(1),\ntmlib_edge_evaluation_principle(1),tmlib_table_sample_method(1).\n\n--leakage_power : please refer to tmlib_cell_evaluation_principle(1).\n\n--area : a fixed floating number on cell level.\n\n--capacitance : capacitance defined on input/inout pins are taken into evaluation based on\ntmlib_cell_evaluation_principle(1). For sequential cells, scan/preset/clear pins are ignored. For clock\ngating cells, clock gating enable/test pins are ignored.\n\nExamples\n\n% get_tmlib_cell_property -corner ca cell_a delay\n      \n\nSee Also\ntmlib_cell_evaluation_principle(1) tmlib_arc_evaluation_principle(1)\ntmlib_edge_evaluation_principle(1) tmlib_table_sample_method(1)\n\n133"
            },
            {
                "doc_id": "_xtop_handbook_0111",
                "summary": "",
                "content": "Commands\n\nName\nget_tmlib_cell_property_formula --Get tmlib cell property formula.\n\nSynopsis\nget_tmlib_cell_property_formula\n\nDescription\nThis command returns the tmlib cell property formula.\n\nExamples\nSee Also\n\nset_tmlib_cell_property_formula(1)\n\n134"
            },
            {
                "doc_id": "_xtop_handbook_0112",
                "summary": "",
                "content": "Commands\n\nName\nget_tmlib_score_formula --Get tmlib score formula.\n\nSynopsis\nget_tmlib_score_formula\n\nDescription\nThis command returns the tmlib score formula.\n\nExamples\nSee Also\n\nset_tmlib_score_formula(1)\n\n135"
            },
            {
                "doc_id": "_xtop_handbook_0113",
                "summary": "This is a description of the 'get_transition_violated_pins' command in XTop tool. It includes options such as '-pin_type type' which specifies the pin type with a default of 'all'. The command creates a collection of transition violated pins from all scenarios in the current workspace, returning the worst violated value if a pin's transition is violated in more than one scenarios.",
                "content": "Commands\n\nName\nget_transition_violated_pins --Get transition violated pins.\n\nSynopsis\ncollection get_transition_violated_pins [-pin_type type]\n\nenum pin_type in \"all clock data\"\n\nArguments\n-pin_type type Specifies pin type, default is all.\n\nDescription\nThis command creates a collection of transition violated pins.it will search all scenario in current\nworkspace. if a pin's transition is violated in more than one scenarios, it will return the worst violated value.\n\nExamples\nThe following example gets transition violated pins:\n\n% get_transition_violated_pins\n\"U377/B1\", \"U368/A2\", \"U200/A3\", \"U341/ZN\", ...\n      \n\n136"
            },
            {
                "doc_id": "_xtop_handbook_0114",
                "summary": "This is a description of the XTop command 'get_wire_length_violated_pins', which returns a collection of pins with a wire length longer than a specified constraint. The command includes an optional argument '-pin_type type' to specify the pin type, with the default being 'all'. The command is used to identify violations in net wire length.",
                "content": "Commands\n\nName\nget_wire_length_violated_pins --Get violated driver pins which connected net's length is longer than\nconstraint.\n\nSynopsis\ncollection get_wire_length_violated_pins [-pin_type type]\n\nenum pin_type in \"all clock data\"\n\nArguments\n-pin_type type Specifies pin type, default is all.\n\nDescription\nThis command returns a collection of pins which connected net's wire length is longer than constraint.\nThe constraint value is specified by parameter 'max_wire_length'. It will return the driver pin of net if the\nnet is violated.\n\nExamples\nThe following example gets max wire length violated pins on data path:\n\n% get_wire_length_violated_pins -pin_type data\n\"U213/ZN\", \"U214/ZN\", \"U260/ZN\"\n      \n\n137"
            },
            {
                "doc_id": "_xtop_handbook_0115",
                "summary": "The document provides information about the 'highlight_objects' command in XTop tool. This command is used to highlight objects in a specified collection in layout. It accepts two flags: '-append' for highlighting in append mode without clearing already highlighted objects, and '-auto_zoom' for automatically zooming to all highlighted objects. The command only works with STA objects and requires a GUI to function.",
                "content": "Commands\n\nName\nhighlight_objects --Highlight the objects in the specified collection in layout.\n\nSynopsis\nhighlight_objects [-auto_zoom] [-append] collection\n\nflag append\n\nflag auto_zoom\n\ncollection collection\n\nArguments\n-append Highlight in append mode, do not clear the already highlighted objects.\n\n-auto_zoom Zoom to all highlighted objects automatically.\n\ncollection Collection of objects to highlight.\n\nDescription\nThis command highlights the objects in the specified collection in layout. It only accepts STA objects that\ncan get with commands like: get_cells(1), get_nets(1), and so on. For those physical only cells, it needs\nto search and highlight on GUI.\n\nIf the GUI is not on, it does nothing.\n\nExamples\nThe following example highlights the pins matched */*/A2 and auto zoom to them:\n\n% highlight_objects [get_pins */*/A2] -auto_zoom\n      \n\nThe following example highlights the cells matched *io* without clearing the already highlighted objects:\n\n% highlight_objects [get_cells *io*] -append\n      \n\n138"
            },
            {
                "doc_id": "_xtop_handbook_0116",
                "summary": "This is a description of the \"identify_io_path_pins\" command in XTop. It includes an optional flag \"-include_common_path\" to include pins that have both r2r and io path. The command is used to automatically identify pins of IO path and clear all previously marked pins read from ilm files. It also suggests including a timing path report for better results.",
                "content": "Commands\n\nName\nidentify_io_path_pins --Identify pins that belong to IO path of design in XTop.\n\nSynopsis\nidentify_io_path_pins [-include_common_path]\n\nflag include_common_path\n\nArguments\n-include_common_path Include pins which have both r2r and io path.\n\nDescription\nThis command automatically identify pins of IO path by XTop. It will clear all previously marked pins\nthat are read from ilm files. It is suggested to include timing path report in XTop to get a better result.\n\nFor some pins, have both r2r and io path passing through, -include_common_path could be used to include\nthese pins as IO path pin.\n\nExamples\nThe following example shows a common usage of this command by setting IO path pins as dont touch.\n\n% identify_io_path_pins\n% set_dont_touch [get_io_path_pins]\n      \n\nSee Also\nget_io_path_pins(1)\n\n139"
            },
            {
                "doc_id": "_xtop_handbook_0117",
                "summary": "This is a description of the 'import_designs' command in XTop tool. The command imports the contents of verilog and DEF files into defined designs and saves them automatically. It also provides a summary of failed designs and recommends reviewing all warnings and nonfatal errors. Examples of a 2-level hierarchical design import are also provided.",
                "content": "Commands\n\nName\nimport_designs --Import the contents of verilog and DEF files into defined designs.\n\nSynopsis\nimport_designs\n\nDescription\nThis command imports the contents of verilog and DEF files into the defined designs. Designs will be\nsaved automatically saved.\n\nOnce fatal error encountered, the file will be marked as failed and all its contents are ignored. At the end\nof this command, it will print a brief summary of how many designs have been failed to build. The detail\nparse log can be reviewed on GUI or with command report_design_file_status(1). Even though there is\nno failed file, it is also recommended to review all the warnings and nonfatal errors with this command\nto detect the issues as early as possible.\n\nExamples\nThe following examples show how a 2-level hierarchical design imports:\n\n% define_designs \\\n    -verilogs \"/home/user/date/sub1.v /home/user/date/top.v\" \\\n    -def \"/home/user/date/sub1.def /home/user/date/top.def\"\n% import_designs\nSetup importing tasks...done.\nBegin to import 2/2 designs.\nImport design 'sub1'...\nImport design 'top'...\nSucceeded to import design 'sub1'.\nSucceeded to import design 'top'.\nOpen all designs...done.\nResolve design links...done.\nInitialize region query...done.\n      \n\nSee Also\ndefine_designs(1) report_design_file_status(1)\n\n140"
            },
            {
                "doc_id": "_xtop_handbook_0118",
                "summary": "This document provides information about the \"import_power_domain\" command in XTop tool. This command is used to import power domain configuration from UPF or region file. It supports the UPF command \"create_power_domain\" and is recommended to be used before the \"read_timing_data\" command. The command has options like \"-design\", \"-upf_file\", \"-region_file\", and \"-cpf_file\". Examples of how to use the command are also provided.",
                "content": "Commands\n\nName\nimport_power_domain --Import power domain configuration from UPF and region file.\n\nSynopsis\nimport_power_domain [-design design_name] [ -upf_file file_name | -cpf_file\ncpf_file_name ] [-region_file file_name]\n\nstring cpf_file\n\nstring design\n\nstring region_file\n\nstring upf_file\n\nArguments\n-cpf_file cpf_file_name Specifies the CPF file name.\n\n-design design_name Design to import UPF and region file.\n\n-region_file file_name File that define map between power domain and physical region.\n\n-upf_file file_name Specifies the UPF file name.\n\nDescription\nThis command imports power domain configuration from UPF or region file.\n\nUPF command \"create_power_domain domain_name -elements element_list -exclude_elements\nexclude_list\" is supported to describe which power domain the instance belongs to. Tool will take it into\nconsideration while performing the timing optimization.\n\nIt is recommended to put this command before read_timing_data.\n\nExamples\nThe following example shows how to import the UPF and region file.\n\n% import_power_domain -design TOP \\\n    -upf_file {/home/user/design/data/test.upf} \\\n    -region_file {/home/user/design/data/top.pd}\n      \n\nUser is allowed to only import region file when there is no UPF file. However, an UPF file is highly\nrecommended.\n\n% import_power_domain -design TOP \\\n                      -region_file {/home/user/design/data/top.pd}\n\nSee Also\npurge_power_domain(1) report_power_domain(1)\n\n142"
            },
            {
                "doc_id": "_xtop_handbook_0119",
                "summary": "The document provides information about the 'is_dont_touch' command in XTop tool. This command returns whether a specified cell, net, pin or library cell is set as 'dont touch'. It also explains the rules for different objects like cell, net and library cells. The document also provides an example of how to use this command.",
                "content": "Commands\n\nName\nis_dont_touch --Return if the specified cell, net, pin or library cell is dont touch.\n\nSynopsis\nbool is_dont_touch object\n\ncollection object\n\nArguments\nobject A collection of one cell, net, or pin.\n\nDescription\nThis command returns if the specified cell, net, pin or library cell is dont touch. Generally, the dont touch\nattribute is set by user with commands. This command will also return true if this object is set in dont\ntouch file while parameter honor_annotated_dont_touch(1) is set to true.\n\nFor cell, while its library cell is set as dont touch, this command will return true even if it is not set as dont\ntouch. For library cells, the library name is ignored since the design might have more than one corners.\n\nFor net, it uses the same rule as set_dont_touch(1). The logical net segment will be mapped to top level\nfirst before querying the dont touch attribute.\n\nExamples\nThe following example returns if net n73 is dont touch:\n\n% is_dont_touch [get_nets n73]\n1\n      \n\nSee Also\nset_dont_touch(1) set_module_dont_touch(1) set_hier_path_dont_touch(1) save_user_dont_touch(1)\nrestore_user_dont_touch(1) get_dont_touch_cells(1) get_dont_touch_nets(1) get_dont_touch_pins(1)\n\n143"
            },
            {
                "doc_id": "_xtop_handbook_0120",
                "summary": "The document provides a detailed explanation of the 'link_reference_library' command in XTop tool. It includes the command's syntax, flags, arguments, and description. The command is used to link files to build a reference library, which is the first step in building the whole design. The document also provides examples of how to use the command with different options.",
                "content": "Commands\n\nName\nlink_reference_library --Link reference library files.\n\nSynopsis\nlink_reference_library [-force] [-format type_name] [-tech_group grp_name] files\n\nflag force\n\nenum format in \"lef timing oa\"\n\nstring tech_group\n\nstring_list files\n\nArguments\n-force Force to load while the format changed or designs imported.\n\n-format type_name Indicates the format of the specified file.\n\n-tech_group grp_name A marker for reference library of different technology.\n\nfiles Files to link.\n\nDescription\nThis command links files to build reference library. The files can be LEF and OpenAccess library\ndefinition. And for logical only workspace, timing libraries can also be used. For LEF files, it is\nrecommended to put the technology LEF file in front of list though this command can identify it\nautomatically.\n\nBuilding reference library is the first step to build the whole design. Once any design data has been\nimported, option -force must be specified to modify the reference library, and all design data will be purged.\n\nGenerally, for hierarchical designs, all of the designs reference the same library and technology. For\nmodern designs, a top design may consist of parts with different reference libraries and technologies. And\nIt needs to define an independent group for each technology by specifying a unique name. The name\n\"default\" is reserved for the default technology group. If no technology group is specified, the files will\nbe linked into the default group.\n\nOnce fatal error encountered, the file will be marked as failed and all its contents are ignored. At the end\nof this command, it will print a brief summary of how many files have been failed to load. The detail parse\nlog can be reviewed on GUI or with command report_reference_library_file_status(1). Even though there\nis no failed file, it is also recommended to review all the warnings and nonfatal errors with this command\nto detect the issues as early as possible.\n\nExamples\nThe following examples show how to link the reference library with different options. It is recommended\nthat LEF files are linked as reference library.\n\n% link_reference_library -format lef /home/user/data/fast.lef\n\nThe following example shows how to link multiple reference libraries using technology groups.\n\n% link_reference_library -format lef  -tech_group t40_lef  $t40_lef_files\n% link_reference_library -format lef  -tech_group t65_lef  $t65_lef_files\n% define_designs -verilogs $top_verilog_files -defs $top_def_files\n% set_tech_group -design cpu  t40_lef\n% set_tech_group -design regs t65_lef\n% import_designs\n      \n\nTiming library or LEF can be linked as reference library when the workspace is logical only, but only LEF\nis accepted if workspace is not logical only.\n\n% create_workspace work -logic_only\n% link_reference_library -format timing /home/user/data/fast.lib\n% link_reference_library -format lef /home/user/data/slow.lef\n      \n\nThe following example shows if timing files already linked, how to use -force option to load another\nformat file.\n\n% link_reference_library -format timing /home/user/data/fast.lib\n% link_reference_library -force -format lef /home/user/data/tech.lef\n      \n\nSee Also\nunlink_reference_library(1) report_reference_library_file_status(1) set_tech_group(1)"
            },
            {
                "doc_id": "_xtop_handbook_0121",
                "summary": "The document provides information about the 'link_timing_library' command in XTop tool. This command links timing library files to a specified corner for analysis. It includes options like '-corner' to specify the corner, '-search_type' to define the search type (min, max, or min_max), and 'files' to specify the files to link. The command also handles errors and provides a summary of failed files.",
                "content": "Commands\n\nName\nlink_timing_library --Link timing library files.\n\nSynopsis\nlink_timing_library -corner corner_name [-search_type mode_name] files\n\nstring corner\n\nenum search_type in \"min max min_max\"\n\nstring_list files\n\nArguments\n-corner corner_name Corner to link.\n\n-search_type mode_name Search type: min, max, or min_max, default is min_max.\n\nfiles Files to link.\n\nDescription\nThis command links timing library files to the specified corner. By default, the library is used for both min\nand max analysis in this corner. However, for compatibility, this command provides search_type option\nto link a library file only for min or max. Please make sure to link both min and max type for one corner,\notherwise there will be error during read_timing_data.\n\nOnce fatal error encountered, the file will be marked as failed and all its contents are ignored. At the end\nof this command, it will print a brief summary of how many files have been failed to load. The detail parse\nlog can be reviewed on GUI or with command report_timing_library_file_status(1). Even though there is\nno failed file, it is also recommended to review all the warnings and nonfatal errors with this command\nto detect the issues as early as possible.\n\nExamples\nThe following example links timing library files for the specified corner.\n\n% create_corner slow\n% link_timing_library -corner {slow} \\\n    -search_type min_max {./idb/tutorialwc.idb ./idb/sram.idb}\n      \nSee Also\nunlink_timing_library(1) report_timing_library_file_status(1)\n\n146"
            },
            {
                "doc_id": "_xtop_handbook_0122",
                "summary": "This is a description of the 'open_workspace' command in XTop. It details how to use the command to open an existing workspace, the argument it requires (workspace_path), and the process of how it locks the workspace to prevent it from being opened by other processes. It also mentions a potential error situation where the workspace cannot be unlocked, and the solution to manually remove the '.lock' file. An example of usage is provided.",
                "content": "Commands\n\nName\nopen_workspace --Open an existing workspace.\n\nSynopsis\nopen_workspace workspace_path\n\nstring workspace_path\n\nArguments\nworkspace_path Path to the existing workspace.\n\nDescription\nThis command opens an existing workspace. Once a workspace is open, it is locked by current process,\nand cannot be opened by any other process again.\n\nIf the process is abnormally terminated in some special situations, the workspace cannot be correctly\nunlocked, and it will report error while trying to open it again. For this situation, it needs to remove the\nhidden lock file \".lock\" just under the workspace directory manually.\n\nExamples\nThis example opens a XTop workspace in a directory named \"tutorial\".\n\n% open_workspace /home/user/tutorial\n      \n\nSee Also\ncreate_workspace(1) close_workspace(1)\n\n147"
            },
            {
                "doc_id": "_xtop_handbook_0123",
                "summary": "The document provides information about the 'purge_power_domain' command in XTop tools. This command is used to purge the power domain of a specified design. It has an optional argument '-design name_patterns' which allows users to specify the design names to match. If no design is specified, it purges all imported power domains.",
                "content": "Commands\n\nName\npurge_power_domain --Purge power domain of specified design.\n\nSynopsis\npurge_power_domain [-design name_patterns]\n\nstring_list design\n\nArguments\n-design name_patterns Name patterns to match designs.\n\nDescription\nThis command purges the power domain of specified design. If the design is not specified, it purges all\nthe imported power domains.\n\nExamples\nThe following example shows how to purge power domain information.\n\n% purge_power_domain -design TOP\n      \n\nSee Also\nimport_power_domain(1) report_power_domain(1)\n\n148"
            },
            {
                "doc_id": "_xtop_handbook_0124",
                "summary": "",
                "content": "Commands\n\nName\npurge_specific_lib_cells --Purge all specific library cells.\n\nSynopsis\npurge_specific_lib_cells\n\nDescription\nThis command purges all specific library cells.\n\nExamples\nThe following example shows how to purge the specific lib cells.\n\n% purge_specific_lib_cells\n      \n\nSee Also\nset_specific_lib_cells(1) get_specific_lib_cells(1) report_specific_lib_cells(1)\n\n149"
            },
            {
                "doc_id": "_xtop_handbook_0125",
                "summary": "",
                "content": "Commands\n\nName\npurge_timing_paths --Purge all timing paths.\n\nSynopsis\npurge_timing_paths\n\nDescription\nThis command purge all timing paths.\n\nExamples\nThe following example uses to delete all the timing paths.\n\n% purge_timing_paths\n      \n\n150"
            },
            {
                "doc_id": "_xtop_handbook_0126",
                "summary": "",
                "content": "Commands\n\nName\npurge_tmlib_trend_result --Purge tmlib trend result from workspace.\n\nSynopsis\npurge_tmlib_trend_result\n\nDescription\nThis command purges tmlib trend analyze result from current workspace.\n\nExamples\n\n       % purge_tmlib_trend_result\n       \n\nSee Also\nanalyze_tmlib_trend(1)\n\n151"
            },
            {
                "doc_id": "_xtop_handbook_0127",
                "summary": "The document provides information about the 'read_timing_data' command in XTop. This command reads timing data from files generated by STA tools. It has several options including '-data_dir path' to specify the directory containing the timing data, '-ignore_data_for_sdf' to skip reading all other data except global slack, '-ignore_timing_report' to avoid reading timing report files, and '-memory_saving_mode' to discard unused data when reading TurboMode data.",
                "content": "Commands\n\nName\nread_timing_data --Read timing data.\n\nSynopsis\nread_timing_data -data_dir path [-ignore_timing_report] [-memory_saving_mode] [-\nignore_data_for_sdf]\n\nstring data_dir\n\nflag ignore_data_for_sdf\n\nflag ignore_timing_report\n\nflag memory_saving_mode\n\nArguments\n-data_dir path The directory contains the timing data.\n\n-ignore_data_for_sdf Skip read all other data except global slack for write incremental sdf\nflow.\n\n-ignore_timing_report Dont read timing report files.\n\n-memory_saving_mode Discard unused data when read TurboMode data.\n\nDescription\nThis command read timing data from files. The files are generated with the corresponding scripts from\nSTA tools with a pre-defined naming format. This command will match files for each scenario in the\nspecified directory. If all the obligated files are available, it will read in all the timing data. Otherwise,\nit will report error.\n\nWhen turn on memory_saving_mode and given TurboMode data, tool will discard data for unused pins.\nNot recommend to adjust path slack or append other scenario's timing_report in this mode. Because\nclock_pin info and timing data are lost for many pins.\n\nExamples\nThe following example shows how to read timing data into XTop.\n\n% read_timing_data -data_dir \"/home/user/sta_data\"\n      \n\n152"
            },
            {
                "doc_id": "_xtop_handbook_0128",
                "summary": "This is a description of the 'read_timing_report' command in XTop tools. It includes options such as '-pretend', which puts the file in cache without reading it, and '-scenario', which specifies the scenario to import timing reports. The command is used to read timing reports for specified scenarios and supports reading reports of multiple scenarios in parallel.",
                "content": "Commands\n\nName\nread_timing_report --Read timing report.\n\nSynopsis\nread_timing_report [-pretend] [-scenario scenario] timing_reports\n\nflag pretend\n\nstring scenario\n\nstring_list timing_reports\n\nArguments\n-pretend Not really read the file, but put in file cache.\n\n-scenario scenario Specified the scenario to import timing reports.\n\ntiming_reports Specified timing reports to read.\n\nDescription\nThis command reads timing report for specified scenario. -scenario must be specified unless there's only\none scenario.\n\nIn order to support reading timing reports of multiple scenarios in parallel, option -pretend is added. While\nthis option is specified it just record down the information of file. Once a command without this option\nis applied, all the files will be read in parallel.\n\nExamples\nThe following example show how to use read_timing_report to manually add timing report file.\n\n% read_timing_report -scenario fast_worst \\\n    /home/sta_data/cpu_data_timing_rpt.txt\nscenario: fast_worst\n  timing_rpt  ok\n/home/user/sta_data/cpu_data_timing_rpt.txt\n      \n\nThe following example show how to use -pretend option to read timing reports of multiple scenarios in\nparallel. Only the last command will really read those timing reports.\n\n%read_timing_report -pretend -scenario test_slow {1.rpt.gz  2.rpt.gz}\n%read_timing_report -pretend -scenario func_slow {3.rpt.gz}\n%read_timing_report          -scenario func_slow {4.rpt.gz}\n\n      \n\nSee Also\npurge_timing_paths(1)\n\n153"
            },
            {
                "doc_id": "_xtop_handbook_0129",
                "summary": "The document provides information about the 'reduce_scenario' command in XTop tools. This command is used to reduce scenarios after analyzing them. It takes a list of scenarios as an argument and deletes them. Once deleted, these scenarios cannot be retrieved unless recreated and the timing graph is rebuilt. The command should be called before 'read_timing_data' and after 'build_timing_graph'. The document also provides an example of how to use the command.",
                "content": "Commands\n\nName\nreduce_scenario --Reduce scenario after analyzing.\n\nSynopsis\nreduce_scenario list\n\nstring_list list\n\nArguments\nlist Scenario list to reduce.\n\nDescription\nThis command can be called with the result from analyze_scenario_reduction(1) or user specified\nscenarios. It will delete the scenarios in list, and once they are dropped, they can not be found back unless\ncreate them and rebuild timing graph. report_dropped_scenarios(1) and get_dropped_scenarios(1) are two\ncommands for the reduction result.\n\nThe command must be called before read_timing_data and after build_timing_graph.\n\nExamples\nThe following example reduce scenarios.\n\n% set sces [analyze_scenario_reduction -hold_top_n 2 -data_dir timing_data_dir]\n2 of total 4 scenarios have been selected.\n% reduce_scenario $sces\n2 scenarios are dropped.\n      \n\nSee Also\nanalyze_scenario_reduction(1) report_dropped_scenarios(1)\n\n154"
            },
            {
                "doc_id": "_xtop_handbook_0130",
                "summary": "",
                "content": "Commands\n\nName\nremove_corner --Remove corner.\n\nSynopsis\nremove_corner [ -fixed_string | -regex ] corner_list\n\nflag fixed_string\n\nflag regex\n\nstring_list corner_list\n\nArguments\n-fixed_string Match pattern as fixed string.\n\n-regex Match pattern as regular expression.\n\ncorner_list List of corners to be removed.\n\nDescription\nThis command removes corner.\n\nExamples\nThe following example removes the corners defined by create_corner.\n\n% remove_corner slow\n      \n\n155"
            },
            {
                "doc_id": "_xtop_handbook_0131",
                "summary": "This document provides information about the 'remove_design_definition' command in XTop tools. It includes details on how to use the command with the '-fixed_string' and '-regex' options to remove specified design definitions. Examples of usage are also provided.",
                "content": "Commands\n\nName\nremove_design_definition --Remove the specified design definitions.\n\nSynopsis\nremove_design_definition [ -fixed_string | -regex ] design_list\n\nflag fixed_string\n\nflag regex\n\nstring_list design_list\n\nArguments\n-fixed_string Match pattern as fixed string.\n\n-regex Match pattern as regular expression.\n\ndesign_list List of designs to be removed.\n\nDescription\nThis command removes the specified definitions.\n\nExamples\nThe following examples show how to use -fixed_string option and -regex option to remove design\ndefinition:\n\n% remove_design_definition -fixed_string cpu\n% remove_design_definition -regex sub_\\[0-9]\n      \n\nSee Also\ncreate_design_definition(1)\n\n156"
            },
            {
                "doc_id": "_xtop_handbook_0132",
                "summary": "This is a description of the 'remove_mode' command in XTop tools. It includes options such as '-fixed_string' and '-regex' for matching patterns, and takes a list of modes to be removed as arguments. An example of its usage is also provided.",
                "content": "Commands\n\nName\nremove_mode --Remove mode.\n\nSynopsis\nremove_mode [ -fixed_string | -regex ] mode_list\n\nflag fixed_string\n\nflag regex\n\nstring_list mode_list\n\nArguments\n-fixed_string Match pattern as fixed string.\n\n-regex Match pattern as regular expression.\n\nmode_list List of modes to be removed.\n\nDescription\nThis command removes mode.\n\nExamples\nThe following example removes the modes defined by create_mode.\n\n% create_mode func\n% create_mode test\n% remove_mode func\n% report_mode *\n-----------------------------------------------\nMode : test\nCreated scenarios : 2\n  test_fast\n  test_slow\n      \n\n157"
            },
            {
                "doc_id": "_xtop_handbook_0133",
                "summary": "This is a description of the 'remove_scenario' command in XTop tools. It includes options such as '-fixed_string' and '-regex' to match patterns, and takes a list of scenarios to be removed as arguments. An example of its usage is also provided.",
                "content": "Commands\n\nName\nremove_scenario --Remove scenario.\n\nSynopsis\nremove_scenario [ -fixed_string | -regex ] scenario_list\n\nflag fixed_string\n\nflag regex\n\nstring_list scenario_list\n\nArguments\n-fixed_string Match pattern as fixed string.\n\n-regex Match pattern as regular expression.\n\nscenario_list List of scenarios to be removed.\n\nDescription\nThis command removes scenario.\n\nExamples\nThe following example removes the scenario that was defined by create_scenario command.\n\n% remove_scenario -fixed_string test_slow\n      \n\n158"
            },
            {
                "doc_id": "_xtop_handbook_0134",
                "summary": "The document provides detailed information about the command \"report_annotated_timing_data\" in XTop tool. This command reports timing data of specified objects read from files. It includes several options such as -verbose, -scenarios, -truncate, -include_skipped, -pins, -cells, and -nets. The document also provides examples of how to use this command with different options.",
                "content": "Commands\n\nName\nreport_annotated_timing_data --Report timing data of specified objects that read in from files.\n\nSynopsis\nreport_annotated_timing_data [ -verbose | -scenarios scenario_list ] [-truncate val] [-\ninclude_skipped] { -pins name_list | -cells name_list | -nets name_list }\n\ncollection cells\n\nflag include_skipped\n\ncollection nets\n\ncollection pins\n\nstring_list scenarios\n\nint truncate\n\nflag verbose\n\nArguments\n-cells name_list Specifies the cells to report.\n\n-include_skipped Include timing of skipped scenarios.\n\n-nets name_list Specifies the nets to report.\n\n-pins name_list Specifies the pins to report.\n\n-scenarios scenario_list Specifies the scenarios to report, all if not specified.\n\n-truncate val Truncates the objects found, zero or negative value means all.\n\n-verbose Display verbose information or just a summary.\n\nDescription\nThis command reports timing data of specified objects that read in from files.\n\nBy default the timing of those skipped scenarios are shown with symbol \"-\" instead of real value, unless\noption -include_skipped is specified.\n\nExamples\nThe following example reports the annotated timing data of a cell:\n\n% report_annotated_timing_data -cells cpu/sub_1/U123\ncell: cpu/sub_1/U123\nName             Value    Scenario          \n---------------------------------------------\nsetup derate     1.000    slow_worst\nhold  derate     1.000    slow_worst\nsetup voltage        *    slow_worst\nhold  voltage        *    slow_worst\n(-): skipped     (*): meaningless\n      \n\nThe following example reports the annotated timing data of net with verbose information:\n\n% report_annotated_timing_data -verbose \\\n    -nets {sub_1/n179 Net1568}\nnet: sub_1/n179\nScenario    S_Wire_Cap H_Wire_Cap S_Wire_Res H_Wire_Res ...\n-----------------------------------------------------------\nslow_worst  0.008      0.008      0.061      0.061      ...\nfast_worst  0.008      0.008      0.061      0.061      ...\nnet: Net1568\nScenario    S_Wire_Cap H_Wire_Cap S_Wire_Res H_Wire_Res ...\n-----------------------------------------------------------\nslow_worst  0.006      0.006      0.068      0.068      ...\nfast_worst  0.006      0.006      0.068      0.068      ...\n(-): skipped     (*): meaningless\n      \n\nThe following is an example of a pin report by using -include_skipped option to show annotated timing\ndata:\n\n% set_skip_scenarios -min -max slow_worst true\nSkip 1 matched scenarios:\n  slow_worst\n% report_annotated_timing_data -include_skipped \\\n    -pins cpu/sub_1/U286/A\npin: cpu/sub_1/U286/A\nName                 Value    Scenario\n-------------------------------------------------\nsetup slack         -1.581    fast_worst\nhold  slack          2.513    fast_worst\nsetup transition     0.053    fast_worst\nhold  transition     0.024    fast_worst\nmax   transition     0.500    fast_worst\nsetup cap                *    fast_worst\nhold  cap                *    fast_worst\nmax   cap                *    fast_worst\nsetup path slack    -1.578    fast_worst\nhold  path slack         *    fast_worst\n(-): skipped     (*): meaningless\n      \n\nThe following example shows how to use -truncate option to truncate the objects found and report a cell\nof annotated timing data:\n\n%  report_annotated_timing_data -truncate 3 -cells cpu/sub_1/U*\ncell: cpu/sub_1/U23\nName             Value    Scenario                   \n---------------------------------------------        \nsetup derate     1.000    slow_worst\nhold  derate     1.000    slow_worst\nsetup voltage        *    slow_worst\nhold  voltage        *    slow_worst\ncell: cpu/sub_1/U24\nName             Value    Scenario\n---------------------------------------------\nsetup derate     1.000    slow_worst\nhold  derate     1.000    slow_worst\nsetup voltage        *    slow_worst\nhold  voltage        *    slow_worst\ncell: cpu/sub_1/U26\nName             Value    Scenario\n---------------------------------------------\nsetup derate     1.000    slow_worst\nhold  derate     1.000    slow_worst\nsetup voltage        *    slow_worst\nhold  voltage        *    slow_worst\n      \n\n161"
            },
            {
                "doc_id": "_xtop_handbook_0135",
                "summary": "This is a description of the \"report_cell\" command in XTop tool. The command is used to show the properties of a specified cell. The command takes one argument, the name_path, which is the name of the cell to show. An example usage of the command is also provided.",
                "content": "Commands\n\nName\nreport_cell --Show cell property.\n\nSynopsis\nreport_cell name_path\n\ncollection name_path\n\nArguments\nname_path Cell name to show.\n\nDescription\nThis command shows cell property.\n\nExamples\nThe following example reports a cell in the current design.\n\n% report_cell regs/C3/U313\nName             Value\n--------------------------------------\nName             regs/C3/U313\nCell             OA21X1TH\nPlacement        placed\nOrigin           (316.6000, 135.0000)\nOrient           R0\nConnections      4\n    CP             n253\n    D              N786\n    E              N667\n    Q              fsr_3_\n      ...\n      \n\n162"
            },
            {
                "doc_id": "_xtop_handbook_0136",
                "summary": "This is a description of the 'report_corner' command in XTop tools. The command reports corners of specified patterns. It has two flags: '-fixed_string' and '-regex', which are used to match the pattern as a fixed string or regular expression respectively. The 'patterns' argument is used to specify the patterns to match corners.",
                "content": "Commands\n\nName\nreport_corner --Report corners of specified patterns.\n\nSynopsis\nreport_corner [ -fixed_string | -regex ] patterns\n\nflag fixed_string\n\nflag regex\n\nstring_list patterns\n\nArguments\n-fixed_string Match pattern as fixed string.\n\n-regex Match pattern as regular expression.\n\npatterns Patterns to match corners.\n\nDescription\nThis command reports corners of specified patterns.\n\nExamples\nThe following example reports the corner defined by create_corner.\n\n% report_corner *\n----------------------------------------------------\nCorner : best\nTiming library files :\n  /rts/RTS_TEST/COMMON_FILES/tmlib/tutorialbc.idb\nCreated scenarios : 1\n  func_best\n----------------------------------------------------\n      \n\n163"
            },
            {
                "doc_id": "_xtop_handbook_0137",
                "summary": "The document provides information about the 'report_design_definition' command in XTop tools. This command reports the design definition of specified designs, listing the Verilog and DEF files, and the sites for each DEF file. It has two options: '-fixed_string' and '-regex', which match patterns as fixed string and regular expression respectively. Examples of using both options are provided.",
                "content": "Commands\n\nName\nreport_design_definition --Report design definition of specified designs.\n\nSynopsis\nreport_design_definition [ -fixed_string | -regex ] design_list\n\nflag fixed_string\n\nflag regex\n\nstring_list design_list\n\nArguments\n-fixed_string Match pattern as fixed string.\n\n-regex Match pattern as regular expression.\n\ndesign_list List of designs to report.\n\nDescription\nThis command reports design definition of specified designs. It will list the verilog and DEF files, and\nthe sites for each DEF file.\n\nExamples\nThis is an example of the report_design_definition output, by using -fixed_string option:\n\n% report_design_definition -fixed_string sub1\n------------------------------------------------------\ndesign: sub1\nverilog files : 1\n    /home/user/data/sub1.v\ndef file :\n      /home/user/data/sub1.def\nsites: CORE2800\n      \n\nThis is an example of the report_design_definition output, by using -regex option:\n\n% report_design_definition -regex sub\\[0-9]\n------------------------------------------------------\ndesign: sub1\nverilog files : 1\n    /home/user/data/sub1.v\ndef file :\n      /home/user/data/sub1.def\nsites: CORE2800\n      \nSee Also\ncreate_design_definition(1)"
            },
            {
                "doc_id": "_xtop_handbook_0138",
                "summary": "This is a description of the 'report_design_file_status' command in XTop tools. It reports the status of linked Verilog and DEF files, including error and warning messages. It has options '-only_error' to report only error information, '-truncate' to limit the number of error and warning messages, and '-designs' to specify the designs to be matched.",
                "content": "Commands\n\nName\nreport_design_file_status --Report Verilog and DEF files linked.\n\nSynopsis\nreport_design_file_status [-only_error] [-truncate count] [-designs pattern_list]\n\nstring_list designs\n\nflag only_error\n\nint truncate in \"[0,inf)\"\n\nArguments\n-designs pattern_list Wildcard patterns to match designs, all if not specified.\n\n-only_error Only report error information, no warning.\n\n-truncate count Error and warning message upper bound for each file, default is 100.\n\nDescription\nThis command reports status of Verilog and DEF files linked. The error and warning messages in parsing\nwill also be reported.\n\nTo avoid large size of report, an option -truncate is provided to limit the warning and error count of each\nfile. Value 0 means only report file status without any warning and error message.\n\nExamples\nThe following example shows how to report the design file status:\n\n% report_design_file_status -designs sub_design\nDesign : sub_design\n  Verilog : succeeded\n     /home/user/design/data/verilog/sub_design.v\n  DEF : succeeded\n     /home/user/design/data/def/sub_design.def.gz\n      \n\nThe following example shows how to report the only one error message count of the top design file:\n\n% report_design_file_status -only_error -truncate 1 -designs top\nDesign : top\n  Verilog : succeeded\n     /home/user/design/data/verilog/top.v\n  DEF : succeeded\n     /home/user/design/data/def/top.def.gz\n    Errors   : 2\n      Error(line: 8746-8751) : NET net3156: \n                  This net was not found in the existing design."
            },
            {
                "doc_id": "_xtop_handbook_0139",
                "summary": "The document provides information about the 'report_design_hierarchy' command in XTop tool. This command is used to report the hierarchy structure of designs, with each design name followed by the number of its instantiation. An example is also provided to illustrate its usage.",
                "content": "Commands\n\nName\nreport_design_hierarchy --Report design hierarchy.\n\nSynopsis\nreport_design_hierarchy\n\nDescription\nThis command reports designs' hierarchy structure. Each design name is followed by the number of its\ninstantiation.\n\nExamples\nThe following example reports the hierarchy structure of 4-level design, each design name is followed by\nthe number of its instantiation:\n\n% report_design_hierarchy\nTOP: 0\n+-------LEVEL_2_MODULE: 1\n        +-------B_MODULE: 1\n        +-------LEVEL_3_MODULE_1: 1\n        |       +-------A_MODULE: 4\n        +-------LEVEL_3_MODULE_2: 1\n                +-------B_MODULE: 2\n      \n\n168"
            },
            {
                "doc_id": "_xtop_handbook_0140",
                "summary": "This is a description of the \"report_design_info\" command in XTop tool. The command reports the information of the current design, including the netlist and total instance count. It has several options such as \"-recursive\" for tracing design recursively, \"-with_top_n\" for reporting the top n library cells, \"-sort_by\" for sorting by count or area, and \"-fixed_string\" or \"-regex\" for matching pattern.",
                "content": "Commands\n\nName\nreport_design_info --Report information of design.\n\nSynopsis\nreport_design_info [-recursive] [ -with_top_n count [-sort_by sort_type]] [[ -fixed_string |\n-regex ] design_list ]\n\nflag fixed_string\n\nflag recursive\n\nflag regex\n\nenum sort_by in \"count area\"\n\nint with_top_n\n\nstring_list design_list\n\nArguments\n-fixed_string Match pattern as fixed string.\n\n-recursive Trace design recursively to the leaf.\n\n-regex Match pattern as regular expression.\n\n-sort_by sort_type The sort factor, total area or count.\n\n-with_top_n count Report the top n library cells.\n\ndesign_list List of designs to report, empty means all.\n\nDescription\nThis command reports the information of current design, including the netlist and total instance count.\nWhile option recursive is specified, it will trace all sub designs as if it has been flattened.\n\nWhile option with_top_n is specified, this command will report the top n lib cells.\n\nExamples\nThe following example reports the information of 2-level hierarchical design:\n\n% report_design_info\n### design: sub1 ###\nName           Count\n--------------------\nnetlist cell    11642\ntotal cell      18535\n### design: top ###\nName           Count\n--------------------\nnetlist cell    35456\ntotal cell      188837\n      \n\nThe following example reports the information of trace design recursively to the leaf:\n\n% report_design_info -recursive\n### design: top ###\nName           Count\n--------------------\nnetlist cell    47097\ntotal cell      207371\n      \n\nThe following example reports the information of the top 3 library cells area in the 2-level hierarchical\ndesign:\n\n% report_design_info -with_top_n 3 -sort_by area\n### design: sub1 ###\nName           Count\n--------------------\nnetlist cell    11642\ntotal cell      18535\n### top 3 lib cells ###\nLib Cell       Area\n--------------------\nBUFX1           13124.160\nBUFX4           12340.944\nCLKINVX2        11556.160\n### design: top  ###\nName           Count\n--------------------\nnetlist cell    35456\ntotal cell      188837\n### top 3 lib cells ###\nLib Cell       Area\n--------------------\nBUFX2           1.243e+06\nINVX2           1.584e+05\nsub1            1.363e+05\n      \n\nThe following example using -regex option to report the information of the top 3 library cells count in\na sub design:\n\n% report_design_info -with_top_n 3 -sort_by count -regex sub\\[0-9]\n### design: sub1 ###\nName          Count\n-------------------\nnetlist cell  11642\ntotal cell    18535\n\n### top 3 lib cells ###\nLib Cell      Count\n-------------------\nBUFX2         2149\nCLKBUFX4      1715\nINVX2         1509\n      \n\n171"
            },
            {
                "doc_id": "_xtop_handbook_0141",
                "summary": "The document provides information about the 'report_dont_use' command in XTop. This command is used to report library cells that are marked as 'dont use'. It also mentions that when 'honor_timing_library_dont_use(1)' is set as true, the cells marked as 'dont use' in the timing library of the reference corner will be reported. An example of how to use the command is also provided.",
                "content": "Commands\n\nName\nreport_dont_use --Report library cells marked as dont use.\n\nSynopsis\nreport_dont_use\n\nDescription\nThis command reports library cells marked as dont use. While honor_timing_library_dont_use(1) is set as\ntrue, the cells that marked as dont use in timing library of reference corner will also be reported.\n\nExamples\nThe following example reports library cells marked as dont use:\n\n% report_dont_use\n2 library cells has been marked as dont use:\nBUFFD0\nBUFFD1\n      \n\nSee Also\nset_dont_use(1) honor_timing_library_dont_use(1)\n\n172"
            },
            {
                "doc_id": "_xtop_handbook_0142",
                "summary": "The document provides information about the command \"report_dropped_scenarios\" in XTop tools. This command is used to report dropped scenarios after the \"reduce_scenario(1)\" command is called. If the command is not called, it returns nothing. The document also provides an example of how to use the command and references to related commands.",
                "content": "Commands\n\nName\nreport_dropped_scenarios --Report dropped scenarios.\n\nSynopsis\nreport_dropped_scenarios\n\nDescription\nThis command reports dropped scenarios after reduce_scenario(1) is called according to the original\nscenarios. If the command is not called, nothing returned.\n\nExamples\nThe following example reports dropped scenario:\n\n% report_dropped_scenarios\nTotally 2 scenarios have been dropped:\n  test_fast\n  test_slow\n      \n\nSee Also\nanalyze_scenario_reduction(1) reduce_scenario(1) get_dropped_scenarios(1)\n\n173"
            },
            {
                "doc_id": "_xtop_handbook_0143",
                "summary": "The document provides information about the command \"report_graph_aocv_derate\" in XTop tool. This command is used to report aocv derate value for a specified library cell on a STA graph. The command has several flags including -clock, -data, -early, -late, and arguments like lib_cell and ref_pin. Examples of its usage are also provided.",
                "content": "Commands\n\nName\nreport_graph_aocv_derate --To report aocv derate value for given lib_cell on STA graph.\n\nSynopsis\nreport_graph_aocv_derate -lib_cell master -ref_pin ref_pin { -clock | -data } { -early | -\nlate }\n\nflag clock\n\nflag data\n\nflag early\n\nflag late\n\nstring lib_cell\n\ncollection ref_pin\n\nArguments\n-clock Report aocv derate value for clock path.\n\n-data Report aocv derate value for data path.\n\n-early Report early aocv derate value.\n\n-late Report late aocv derate value.\n\n-lib_cell master Library cell name to be reported.\n\n-ref_pin ref_pin Referenced pin to get global logic depth data.\n\nDescription\nThis command reports aocv derate value for given lib_cell.\n\nExamples\nThe following example shows aocv derate value on gba mode.\n\n% report_graph_aocv_derate -lib_cell AOI22D0BWP16P90CPD -ref_pin I_PCS0/pcs1/eb/U21/B2 -data -late\n*Report aocv derate value for lib_cell AOI22D0BWP16P90CPD\n*RefPin I_PCS0/pcs1/eb/U21/B2 logic depth : 6\n*Scenario func_mode_ffg_0p88v_m40c\n  AOCVM derate         = 1.000000  1.000000\n  AOCVM guardband      = 1.000000  1.000000\n  Incremental derate   = 0.037000  0.037000\n  Final derate  value  = 1.037000  1.037000\n\n*Scenario func_mode_ssg_0p72v_125c\n  AOCVM derate         = 1.166689  1.166689\n  AOCVM guardband      = 1.020000  1.020000\n  Incremental derate   = 0.045000  0.045000\n  Final derate  value  = 1.235023  1.235023"
            },
            {
                "doc_id": "_xtop_handbook_0144",
                "summary": "这是关于XTop工具中的\"report_mode\"命令的说明，该命令用于报告指定模式的模式。它包含两个选项，\"-fixed_string\"用于将模式匹配为固定字符串，\"-regex\"用于将模式匹配为正则表达式。",
                "content": "Commands\n\nName\nreport_mode --Report modes of specified patterns.\n\nSynopsis\nreport_mode [ -fixed_string | -regex ] patterns\n\nflag fixed_string\n\nflag regex\n\nstring_list patterns\n\nArguments\n-fixed_string Match pattern as fixed string.\n\n-regex Match pattern as regular expression.\n\npatterns Patterns to match modes.\n\nDescription\nThis command reports modes of specified patterns.\n\nExamples\nThe following example reports the mode defined by create_mode.\n\n% report_mode *\n---------------------------------------------\nMode : func\nCreated scenarios : 2\n  func_fast\n  func_slow\n      \n\n176"
            },
            {
                "doc_id": "_xtop_handbook_0145",
                "summary": "The document provides information about the \"report_net\" command in XTop tool. This command is used to show the properties of a net. The command takes a net name as an argument and displays various properties such as terms, connections, setup wire cap, hold wire cap, setup total cap, and hold total cap.",
                "content": "Commands\n\nName\nreport_net --Show net property.\n\nSynopsis\nreport_net name_path\n\ncollection name_path\n\nArguments\nname_path Net name to show.\n\nDescription\nThis command shows net property.\n\nExamples\n\nThe following example shows net property.\n  %  report_net dnet1\n  Name               Value\n  --------------------------\n  Name               dnet1\n  Terms              0\n  Connections        2\n    buf1/Z           OUTPUT\n    buf2/I           INPUT\n  Setup wire cap     0.0012\n    func_best        0.0012\n    func_worst       0.0012\n  Hold wire cap      0.0012\n    func_best        0.0012\n    func_worst       0.0012\n  Setup total cap    0.0022\n    func_best        0.0024\n    func_worst       0.0022\n  Hold total cap     0.0022\n    func_best        0.0023\n    func_worst       0.0022\n    \n\n177"
            },
            {
                "doc_id": "_xtop_handbook_0146",
                "summary": "This is a description of the command \"report_net_phy_conn\" in XTop tools. This command is used to check the physical connectivity of a net in a design. It has three arguments: \"-design\" for the design name, \"-net\" for the net name, and \"-image_file\" for the image file name. The command can return three types of results: the net has no shape, the net is fully connected, or the net is open to several parts. If the net is open and the \"-image_file\" option is given, an image file will be generated to illustrate the open parts.",
                "content": "Commands\n\nName\nreport_net_phy_conn --Report net physical connection information.\n\nSynopsis\nreport_net_phy_conn -design design_name -net net_name [-image_file\nimage_file_name]\n\nstring design\n\nstring image_file\n\nstring net\n\nArguments\n-design design_name Name of the design.\n\n-image_file image_file_name Name of the image file.\n\n-net net_name Name of the net.\n\nDescription\nThis command is used to check physical connectivity of a net. Result could be one of the following 3 types:\n\n1). Net has no shape.\n\n2). Net is fully connected.\n\n3). Net is open to several parts.\n\nIf (3) occurs and option -image_file is given, a image file will be generated to illustrate the open parts. In\nthe image, each part will has its own color. And net pin will be denoted by a circle in the image.\n\nExamples\nThe following example shows check result for net pdata[7] in design cpu:\n\n      report_net_phy_conn -design cpu -net pdata[7] -image_file np\n      Net is open to 2 parts!\n      \n\nImage np.npg will be generated to illustrate the two open parts of the net.\n\n178"
            },
            {
                "doc_id": "_xtop_handbook_0147",
                "summary": "The document provides information about the \"report_pin\" command in XTop tool. This command is used to show the properties of a specific pin, identified by its name path. The properties include direction, net, cell, setup slack, hold slack, setup transition, hold transition, max transition, max capacitance, and noise slack.",
                "content": "Commands\n\nName\nreport_pin --Show pin property.\n\nSynopsis\nreport_pin name_path\n\ncollection name_path\n\nArguments\nname_path Pin name to show.\n\nDescription\nThis command shows pin property.\n\nExamples\nThe following example shows pin property.\n\n% report_pin buf7/Z\nName                Value\n----------------------------\nName                buf7/Z\nDirection           OUTPUT\nNet                 dnet7\nCell                buf7\nSetup slack         -0.0851\n  func_best         0.3828\n  func_worst        -0.0851\nHold slack          -0.0172\n  func_best         -0.0172\n  func_worst        0.3781\nSetup transition    0.0428\n  func_best         0.0428\n  func_worst        0.0902\nHold transition     0.0293\n  func_best         0.0293\n  func_worst        0.0653\nMax transition      0.0400\n  func_best         0.0400\n  func_worst        0.0400\nMax capacitance     0.0474\n  func_best         0.0474\n  func_worst        0.0474\nNoise slack         -0.0272\n  func_best         -0.0272\n  func_worst        -0.0040  \n      \n\n179"
            },
            {
                "doc_id": "_xtop_handbook_0148",
                "summary": "The document provides information about the 'report_placement_constraint' command in XTop. This command is used to report user-defined placement constraints for a given design. It has an optional argument '-design design_name' which specifies the design for which to report constraint. If not given, the global placement constraint will be reported. An example usage of the command is also provided.",
                "content": "Commands\n\nName\nreport_placement_constraint --Report placement constraint for given design.\n\nSynopsis\nreport_placement_constraint [-design design_name]\n\nstring design\n\nArguments\n-design design_name Design for which to report constraint. If not given, global placement\n\nconstraint will be reported.\n\nDescription\nTo report user defined placement constraint for given design.\n\nExamples\nThe following example reports the placement constraint of the given design. ECO Inst Max Displacement\nequals 150*track_pitch.\n\n% set_placement_constraint -design cpu \\\n    -max_displacement {150t 5}         \\\n    -max_congestion 0.9\n% report_placement_constraint -design cpu\nConstraint Scope:               Design cpu\nECO Inst Max Displacement:      30  Micros\nOriginal Inst Max Displacement: 5  Micros\nMax Congestion:                 0.9\n      \n\nSee Also\nset_placement_constraint(1)\n\n180"
            },
            {
                "doc_id": "_xtop_handbook_0149",
                "summary": "The document provides information about the 'report_placement_context' command in XTop. This command reports the placement context for given inputs. It has several options including '-design' to specify the design name, '-location' to specify the location in the design, '-cell' to specify the library cell name, '-instance' to specify the instance name, and '-inc_upper_level' to display upper level information of context tree. Examples of its usage and outputs are also provided.",
                "content": "Commands\n\nName\nreport_placement_context --Report placement context for given inputs.\n\nSynopsis\nreport_placement_context [ -design design_name [-location coordinate] [-instance\ninstance_name]] [-cell master_name] [-inc_upper_level]\n\nstring cell\n\nstring design\n\nflag inc_upper_level\n\nstring instance\n\npointf location\n\nArguments\n-cell master_name Name of the library cell.\n\n-design design_name Name of the design.\n\n-inc_upper_level Display upper level information of context tree.\n\n-instance instance_name Name of the instance.\n\n-location coordinate Location in the given design where to report placement context.\n\nDescription\n\nExamples\nThe following example shows the report_placement_context outputs.\n\n% report_placement_context\n/*---------------Begin Placement Technology Context---------------*/\nDatabase Units:         2000\nMetal 1 Layer:          M1\nFirst Horizontal Layer: M1 - With Pitch : 0.2\nFirst Vertical Layer:   M2 - With Pitch : 0.2\nNum of HCC Layers:      2\n                        M3 - With Pitch : 0.2\n                        M5 - With Pitch : 0.2\nNum of VCC Layers:      2\n                        M4 - With Pitch : 0.2\n                        M6 - With Pitch : 0.2\nVia 0 Layer:            CO\nNum of Basic Sites:     1\n                        core12T  0.2 BY 2.4 with Bottom PG ...\nNum of Non-Basic Sites: 5\n                 bcore12T  0.2 BY 4.8 - With basic site: core12T\n                 bcoreExt12T  0.2 BY 4.8 - With basic site: core12T\n                 ccore12T  0.2 BY 7.2 - With basic site: core12T\n                 dcore12T  0.2 BY 9.6 - With basic site: core12T\n                 gacore12T  0.8 BY 2.4 - With basic site: core12T\nMP Num Masks:           0\nPin Mask Num Assigned:  NO\nFixed Mask Colors:      NO\nMin Spacing Sites:      -1\nEdge Abutment Rule:     NOT-FOUND\nVT Implant Rule:        NOT-FOUND\nOD Jog Rule:            NOT-FOUND\n/*---------------End of Placement Technology Context--------------*/\n      \n\nThe following example shows how to report the placement context for placing the specified cell at the\nspecified location.\n\n% report_placement_context -design cpu \\\n    -location {(45.6000, 283.8000)} -cell BUFFD8EPLVT\n/*------------------Begin Placement Cell Context------------------*/\nCell Name:                    BUFFD8EPLVT\n/*------------------End of Placement Cell Context-----------------*/\n\n/*-----------------Begin Placement Sub Row Context----------------*/\nSite Name:                    core12T\nPower domain:                 NONE\n/*----------------End of Placement Sub Row Context----------------*/\n\n/*-------------Begin Inst Placement on SubRow Context-------------*/\nSite name:                    core12T   Match with sub row : YES\nPower domain:                 NONE      Match with sub row : YES\nLeft inst:                    regs/dram1/C3/U554\n                              Can Abut: 1       Min space sites: 0\nRight inst:                   regs/dram1/mem_reg_23__6_\n                              Can Abut: 1       Min space sites: 0\nLeft-most site:               151\nRight-most site:              152\nNum of current inst sites:    16\nCurrent Inst Begin Site:      145\nMargin Bounded Region:        (0 --> 265)\n/*-------------End of Inst Placement on SubRow Context------------*/"
            },
            {
                "doc_id": "_xtop_handbook_0150",
                "summary": "The document provides information about the 'report_power_domain' command in XTop tool. This command is used to report the power domain of specified designs. The command takes an argument '-design name_patterns' which represents the name patterns of designs. The document also includes an example showing the output of the command.",
                "content": "Commands\n\nName\nreport_power_domain --Report power domain.\n\nSynopsis\nreport_power_domain [-design name_patterns]\n\nstring_list design\n\nArguments\n-design name_patterns Name patterns of designs.\n\nDescription\nThis command reports power domain of specified designs.\n\nExamples\nThe following example shows the report_power_domain outputs.\n\n% report_power_domain -design TOP\n=================================================\ndesign: TOP\nupf    file: /home/user/design/data/test.upf\nregion file: /home/user/design/data/top.pd\nstatus     : imported\nNum of power domains: 4\n-------------------------------------------------\nPower Domain - PD_TOP\n        Is Default Domain : 1\n        Instances :\n-------------------------------------------------\n\n-------------------------------------------------\nPower Domain - PD_1\n        Is Default Domain : 0\n        Instances :\n                leaves2_pd1             ---Found\n        Area rects :\n                {{17 118.8} {138 272.2}}\n        Halos :\n                0 0 0 0\n-------------------------------------------------\n\n-------------------------------------------------\nPower Domain - PD_2\n        Is Default Domain : 0\n        Instances :\n                leaves3_pd2             ---Found\n                leaves2_pd1/sinks1      ---Found\n        Area rects :\n                {{152 17} {273 170.4}}\n        Halos :\n                0 0 0 0\n-------------------------------------------------\nEnd of power domains information."
            },
            {
                "doc_id": "_xtop_handbook_0151",
                "summary": "The document provides information about the 'report_reference_library' command in XTop. This command reports the status of the reference library, including the files that have been successfully linked or failed. It has an optional '-verbose' argument that, when specified, also reports the cells in each file.",
                "content": "Commands\n\nName\nreport_reference_library --Report status of reference library.\n\nSynopsis\nreport_reference_library [-verbose]\n\nflag verbose\n\nArguments\n-verbose Show verbose information, cells in each file.\n\nDescription\nThis command report status of reference library, including the files successfully linked or failed. While\noption -verbose is specified, the cells in each file will also be reported.\n\nExamples\nThis is an example of the report_reference_library output.\n\n% report_reference_library\n------------------------------------------------------\nTotal files: 4\nFile type:   Lef\n------------------------------------------------------\nSucceed files: 4\n /home/user/library/lef/tech.lef (cell: 0)\n /home/user/library/lef/stdcell.lef (cell: 282)\n   /home/user/library/lef/memory.lef (cell: 1)\n   /home/user/library/lef/sub.lef (cell: 1)\nFailed files: 0\n------------------------------------------------------\n    \n\n185"
            },
            {
                "doc_id": "_xtop_handbook_0152",
                "summary": "This is a description of the command \"report_reference_library_file_status\" in XTop tools. The command reports the status of files linked to the reference library, including error and warning messages. It has three optional arguments: \"-only_error\" to report only error information, \"-only_failed\" to report only failed files, and \"-truncate count\" to limit the number of error and warning messages for each file.",
                "content": "Commands\n\nName\nreport_reference_library_file_status --Report status of files linked to reference library.\n\nSynopsis\nreport_reference_library_file_status [-only_failed] [-only_error] [-truncate count]\n\nflag only_error\n\nflag only_failed\n\nint truncate in \"[0,inf)\"\n\nArguments\n-only_error Only report error information, no warning.\n\n-only_failed Only report those files failed to link.\n\n-truncate count Error and warning message upper bound for each file, default is 100.\n\nDescription\nThis command reports status of files linked to reference library. The error and warning messages in parsing\nwill also be reported.\n\nTo avoid large size of report, an option -truncate is provided to limit the warning and error count of each\nfile. Value 0 means only report file status without any warning and error message.\n\nExamples\nThe following example shows the command output:\n\n% report_reference_library_file_status\n/home/user/library/data/lef/tech65.lef : succeeded\n  Warnings : 1\n    Warning(line: 700-760) : Cumulative Antenna ratios already set \n                             with different value.\n/home/user/library/data/lef/cell.lef : succeeded\n    \n\n186"
            },
            {
                "doc_id": "_xtop_handbook_0153",
                "summary": "This is a description of the command \"report_removable_fillers\" in XTop tool. The command reports all the patterns that have been set for removable fillers, and all the library cells set as fillers. An example of its usage and output is also provided.",
                "content": "Commands\n\nName\nreport_removable_fillers --Report all fillers that set as removable.\n\nSynopsis\nreport_removable_fillers\n\nDescription\nThis command reports all the patterns that has been set for removable fillers, and all the library cells set\nas fillers.\n\nExamples\nThis is an example of the report_removable_fillers output result.\n\n% set_removable_fillers {FILLX2 FILLX4 BUFX2 INVX4}\nSet 4 cells as removable.\n% report_removable_fillers\nPatterns      : FILLX2 FILLX4 BUFX2 INVX4\nMatched cells : 2\n     FILLX2 FILLX4\n      \n\nSee Also\nset_removable_fillers(1)\n\n187"
            },
            {
                "doc_id": "_xtop_handbook_0154",
                "summary": "This is a description of the 'report_scenario' command in XTop tools. It includes options such as '-fixed_string' and '-regex' for matching patterns, and it is used to report scenarios of specified patterns.",
                "content": "Commands\n\nName\nreport_scenario --Report scenarios of specified patterns.\n\nSynopsis\nreport_scenario [ -fixed_string | -regex ] patterns\n\nflag fixed_string\n\nflag regex\n\nstring_list patterns\n\nArguments\n-fixed_string Match pattern as fixed string.\n\n-regex Match pattern as regular expression.\n\npatterns Patterns to match scenarios.\n\nDescription\nThis command reports scenarios of specified patterns.\n\nExamples\nThe following example reports the specified scenario that was defined by create_scenario.\n\n% report_scenario -fixed_string func_fast\n--------------------------------------------------\nScenario : func_fast\nCorner   : fast\nMode     : func\n      \n\n188"
            },
            {
                "doc_id": "_xtop_handbook_0155",
                "summary": "The document provides information about the command \"report_setup_extra_derate\" in XTop. This command reports the scenario setup extra derate value for given scenarios. It has two options: \"-cell cell_name\" and \"-scenario scenario_pattern\". The \"-cell\" option reports the voltage extra derate for a given cell, while the \"-scenario\" option determines which scenarios to be reported. The document also includes examples of how to use this command.",
                "content": "Commands\n\nName\nreport_setup_extra_derate --Report scenario setup extra derate value for given scenarios.\n\nSynopsis\nreport_setup_extra_derate [-scenario scenario_pattern] [-cell cell_name]\n\ncollection cell\n\nstring_list scenario\n\nArguments\n-cell cell_name When cell is given, will try to report voltage extra derate\n\ninterpolated from parameter eco_voltage_setup_extra_derate with\npriority. Only one cell is allowed to be reported at one time.\n\n-scenario scenario_pattern Patterns to match scenarios.\n\nDescription\nOption -scenario is to determine which scenarios to be reported, if not specified, derate of all scenarios\nwill be reported.\n\nIf -cell option is not specified, the extra derate value which is set by command set_setup_extra_derate(1)\nwill be reported, 1.0 is the default extra derate if that command not called.\n\nWhen cell name is given by -cell, XTop will look up cell's voltage and try to get derate from parameter\neco_voltage_setup_extra_derate(1) with priority. When the voltage is out of bound or parameter not set,\nthe derate will be determined by set_setup_extra_derate(1).\n\nThe derate reported from this command will be consistent with the value that XTop uses in delay\ncalculation.\n\nExamples\nThe following example reports setup extra derate value for all scenarios.\n\n%report_setup_extra_derate\nscenario             scenario derate\n------------------------------------\nfunc_fast            1.100\nfunc_slow            1.100\ntest_fast            1.100\ntest_slow            1.100\n      \n\nThe following example reports setup extra derate value for specified scenarios.\n\n%report_setup_extra_derate -scenario func_fast\nscenario             scenario derate\n------------------------------------\nfunc_fast            1.200\n\n%report_setup_extra_derate -scenario {func_slow test_slow}\nscenario             scenario derate\n------------------------------------\nfunc_slow            1.200\ntest_slow            1.200\n      \n\nThe following example reports report extra derate of given cell on all scenarios, where the voltage is 0.65v\nfor fast corner and 0.55v for slow corner. So XTop reports voltage derate from parameter.\n\n%set_parameter eco_voltage_setup_extra_derate \\\n                                   {(0.55, 1.20) (0.65, 1.15) (0.75, 1.05)}\n%report_setup_extra_derate -cell U3/DLY1\nscenario         scenario derate        voltage derate        final derate\n--------------------------------------------------------------------------\nfunc_fast        -                      1.150                 1.150\nfunc_slow        -                      1.200                 1.200\ntest_fast        -                      1.150                 1.150\ntset_slow        -                      1.200                 1.200\n      \n\nThe following example reports report derate of given cell on given scenario, where the voltage is 0.65v\nfor func_fast, and not given for func_slow. So, XTop reports voltage derate from parameter for func_fast,\nand derate set from command for func_slow.\n\n%set_setup_extra_derate 1.02\n%set_parameter eco_voltage_setup_extra_derate \\\n                                  {(0.55, 1.20) (0.65, 1.15) (0.75, 1.05)}\n%report_setup_extra_derate -scenario {func_*} -cell U3/DLY1\nscenario         scenario derate        voltage derate        final derate\n--------------------------------------------------------------------------\nfunc_fast        -                      1.150                 1.150\nfunc_slow        1.020                  -                     1.020\n      \n\nSee Also\nset_setup_extra_derate(1)\n\n190"
            },
            {
                "doc_id": "_xtop_handbook_0156",
                "summary": "",
                "content": "Commands\n\nName\nreport_site_map --Report site map information for designs.\n\nSynopsis\nreport_site_map\n\nDescription\nThis command reports site map information, include the global and individual for each design if defined.\n\nExamples\nSee Also\n\nset_site_map(1)\n\n191"
            },
            {
                "doc_id": "_xtop_handbook_0157",
                "summary": "This is a description of the command \"report_skip_scenarios\" in XTop tools. It has two optional arguments \"-min\" and \"-max\" to report skipped scenarios for min mode and max mode respectively. If no timing mode is specified, it will report both min and max. An example is provided to illustrate its usage.",
                "content": "Commands\n\nName\nreport_skip_scenarios --Report skipped scenarios.\n\nSynopsis\nreport_skip_scenarios [-min] [-max]\n\nflag max\n\nflag min\n\nArguments\n-max Report for max mode.\n\n-min Report for min mode.\n\nDescription\nThis command reports skipped scenarios and the related timing mode. if no timing mode is specified, it\nwill report both min and max.\n\nExamples\nThe following example reports the skipped scenarios for the max timing mode:\n\n% report_skip_scenarios -max\nSkipped 1 scenarios for max mode:\n  func_worst\n      \n\nSee Also\nset_skip_scenarios(1)\n\n192"
            },
            {
                "doc_id": "_xtop_handbook_0158",
                "summary": "",
                "content": "Commands\n\nName\nreport_specific_lib_cells --Report specific lib cells for all designs.\n\nSynopsis\nreport_specific_lib_cells\n\nDescription\nThis command reports specific lib cells for all designs.\n\nExamples\nThe following example shows the report_specific_lib_cells output.\n\n% set_specific_lib_cells -design SUB SP*\n% report_specific_lib_cells\nSUB : 2470\n  SPND2D2B\n  SPND2D4B\n  SPBUFD0B\n  ...\n      \n\nSee Also\nset_specific_lib_cells(1) get_specific_lib_cells(1)\n\n193"
            },
            {
                "doc_id": "_xtop_handbook_0159",
                "summary": "",
                "content": "Commands\n\nName\nreport_tech_group --Report all technology groups of designs.\n\nSynopsis\nreport_tech_group\n\nDescription\nThis command reports all technology groups of designs in this workspace.\n\nExamples\n\n194"
            },
            {
                "doc_id": "_xtop_handbook_0160",
                "summary": "This is a description of the \"report_timing_library_file_status\" command in XTop tool. The command reports the file status of the timing library, including error and warning messages. It has options like \"-only_failed\", \"-only_error\", \"-truncate count\", and \"-corners pattern_list\" to customize the report.",
                "content": "Commands\n\nName\nreport_timing_library_file_status --Report file status of timing library.\n\nSynopsis\nreport_timing_library_file_status [-only_failed] [-only_error] [-truncate count] [-\ncorners pattern_list]\n\nstring_list corners\n\nflag only_error\n\nflag only_failed\n\nint truncate in \"[0,inf)\"\n\nArguments\n-corners pattern_list Corners to report, matched by wildcard, all if not specified.\n\n-only_error Only report error information, no warning.\n\n-only_failed Only report those files failed to link.\n\n-truncate count Error and warning message upper bound for each file, default is 100.\n\nDescription\nThis command reports file status of timing library. The error and warning messages in parsing will also\nbe reported.\n\nTo avoid large size of report, an option -truncate is provided to limit the warning and error count of each\nfile. Value 0 means only report file status without any warning and error message.\n\nExamples\nThe following example shows the command output:\n\n% report_timing_library_file_status\nCorner: best\n  /home/user/library/data/tmlib/tech65_best.lib : succeeded\n  /home/user/library/data/tmlib/sub_design_ff.lib : succeeded\n  /home/user/library/data/tmlib/tech65hvt_best.lib : succeeded\nCorner: worst\n  /home/user/library/data/tmlib/tech65_worst.lib : succeeded\n  /home/user/library/data/tmlib/sub_design_ss.lib : succeeded\n  /home/user/library/data/tmlib/tech65hvt_worst.lib : succeeded\n      \n\nThe following example shows how to report the specified corner of the timing library file status:\n\n% report_timing_library_file_status -corners best\nCorner: best\n  /home/user/library/data/tmlib/tech65_best.lib : succeeded\n  /home/user/library/data/tmlib/sub_design_ff.lib : succeeded"
            },
            {
                "doc_id": "_xtop_handbook_0161",
                "summary": "The document provides information about the 'report_unit_rc' command. This command is used to report unit resistance and capacitance for different length intervals. It works by dividing the length of wire in a geometric sequence and calculating the average unit resistance and capacitance for each interval. The reference corner and max timing mode are used to look up the values.",
                "content": "Commands\n\nName\nreport_unit_rc --Report unit resistance and capacitance for different length intervals.\n\nSynopsis\nreport_unit_rc\n\nDescription\nThis command reports unit resistance and capacitance for different length intervals. It divides the length\nof wire in a geometric sequence, and calculates the average unit resistance and capacitance for each of\nthem. Reference corner and max timing mode are used to look up the values.\n\nExamples\n\n% report_unit_rc\nLength      unit: 1um\nResistance  unit: 1kOhm\nCapacitance unit: 1pF\nLength               Unit R        Unit C\n-----------------------------------------------\n[0, 0.268701)        0.0109595     3.64035e-05\n[0.268701, 0.38)     0.0158831     4.47237e-05\n...\n      \n\n197"
            },
            {
                "doc_id": "_xtop_handbook_0162",
                "summary": "The document provides information about the 'report_units' command in XTop. This command is used to report units of length, time, resistance, capacitance, inductance, voltage, current, and power. An example is also given to illustrate its usage.",
                "content": "Commands\n\nName\nreport_units --Report units of length, time, resistance, capacitance, inductance, voltage, current and\npower.\n\nSynopsis\nreport_units\n\nDescription\nThis command reports units of length, time, resistance, capacitance, inductance, voltage, current and\npower.\n\nExamples\nThe following example reports units of length, time, resistance, capacitance, inductance, voltage, current\nand power:\n\n% report_units\nlength       :  1um\nresistance   :  1kOhm\ncapacitance  :  1pF\ninductance   :  1uH\npower        :  1nW\nvoltage      :  1V\ncurrent      :  1mA\ntime         :  1ns\n      \n\nSee Also\nset_units(1)\n\n198"
            },
            {
                "doc_id": "_xtop_handbook_0163",
                "summary": "The document provides information about the 'restore_user_dont_touch' command in XTop tool. This command restores previously saved user_dont_touch pins, nets, and cells. If nothing was saved, it does nothing except display a message. The document also provides an example of how to use this command in a scenario where certain cells are set as 'dont touch' during optimization. Related commands are also mentioned for further reference.",
                "content": "Commands\n\nName\nrestore_user_dont_touch --Restore previous saved user_dont_touch pins, nets and cells.\n\nSynopsis\nrestore_user_dont_touch\n\nDescription\nThis command restore previous saved user_dont_touch pins, nets and cells. When nothing was saved, then\nnothing to do except message : No dont_touch objects were saved.\n\nExamples\nThe following example set \"U4\" as dont touch cell and save it, then set \"U5\" as dont touch cell too, so\nboth \"U4\" and \"U5\" will not be touched during optimization. Later you can restore previous saved user\ndont touch setting, which means only \"U4\" is dont touch cell, while the dont touch attribute of \"U5\" will\nbe removed.\n\n% set_dont_touch [get_cells \"U4\"]\n% save_user_dont_touch\n% set_dont_touch [get_cells \"U5\"]\n% optimize_leakage_power\n% restore_user_dont_touch\n      \n\nSee Also\nset_dont_touch(1) set_module_dont_touch(1) set_hier_path_dont_touch(1) is_dont_touch(1)\nsave_user_dont_touch(1) get_dont_touch_cells(1) get_dont_touch_nets(1) get_dont_touch_pins(1)\n\n199"
            },
            {
                "doc_id": "_xtop_handbook_0164",
                "summary": "The document provides information about the 'save_user_dont_touch' command in XTop tool. This command saves the current 'user_dont_touch' pins, nets, and cells, allowing the user to restore them later. The saved data will be cleared when the current STA design is closed, and overwritten when the command is used again. The document also includes an example of how to use the command.",
                "content": "Commands\n\nName\nsave_user_dont_touch --Save current user_dont_touch pins, nets and cells.\n\nSynopsis\nsave_user_dont_touch\n\nDescription\nThis command save current user_dont_touch pins, nets and cells, then user can restore them later.\n\nWhen current STA design is closed, saved data will be cleared.\n\nWhen save_user_dont_touch again, the saved result will be overwritten.\n\nThe user_dont_touch is dont_touch attribute set by set_dont_touch or set_hier_path_dont_touch or\nset_module_dont_touch.\n\nExamples\nThe following example set \"U4\" as dont touch cell and save it, then set \"U5\" as dont touch cell too, so\nboth \"U4\" and \"U5\" will not be touched during optimization. Later you can restore previous saved user\ndont touch setting, which means only \"U4\" is dont touch cell, while the dont touch attribute of \"U5\" will\nbe removed.\n\n% set_dont_touch [get_cells \"U4\"]\n% save_user_dont_touch\n% set_dont_touch [get_cells \"U5\"]\n% optimize_leakage_power\n% restore_user_dont_touch\n      \n\nSee Also\nset_dont_touch(1) set_module_dont_touch(1) set_hier_path_dont_touch(1) is_dont_touch(1)\nrestore_user_dont_touch(1) get_dont_touch_cells(1) get_dont_touch_nets(1) get_dont_touch_pins(1)\n\n200"
            },
            {
                "doc_id": "_xtop_handbook_0165",
                "summary": "This is a description of the 'save_workspace' command in XTop tool. It includes options such as '-as path' to specify the path to save the current workspace and '-overwrite' to force overwrite if the specified directory exists. The command saves all designs, timing data, eco actions, and user settings into the workspace directory.",
                "content": "Commands\n\nName\nsave_workspace --Save current workspace.\n\nSynopsis\nsave_workspace [ -as path [-overwrite]]\n\nstring as\n\nflag overwrite\n\nArguments\n-as path Path to save current workspace.\n\n-overwrite Force to overwrite if the specified directory exists.\n\nDescription\nThis command saves current workspace. All the designs, timing data, eco actions, user settings will be\nsaved into the directory of workspace. Once the saved workspace is reopened again, all the data and eco\nactions are consistent except that the manual eco action cannot be undone since all check points have been\ncleaned.\n\nWhile the workspace is saved as another name, current workspace will keep unchanged.\n\nExamples\nThe following example saves current workspace as current directory:\n\n% save_workspace\n      \n\nThe following example saves current workspace as another name or another path:\n\n% save_workspace -as /home/user/new_work/tutorial_new\n      \n\nThe following example use the -overwrite option to save current workspace if the specified directory exists:\n\n% save_workspace -as /home/user/tutorial -overwrite\n      \n\nSee Also\nopen_workspace(1)\n\n201"
            },
            {
                "doc_id": "_xtop_handbook_0166",
                "summary": "The document provides information about the 'set_dont_touch' command in XTop. This command is used to set specified objects as 'dont touch' in the design to prevent them from being modified during the optimization process. The objects can be cells, nets, pins, paths, and library cells. The command also includes examples of how to use it.",
                "content": "Commands\n\nName\nset_dont_touch --Set the specified dont touch or not.\n\nSynopsis\nset_dont_touch object_list [value]\n\ncollection object_list\n\nbool value\n\nArguments\nobject_list Objects to be set as dont touch or not.\n\nvalue Dont touch or not, default is true.\n\nDescription\nThis command set the specified objects dont touch or not in the design to prevent them to be modified\nduring optimization process.\n\nThe objects can be cells, nets, pins, paths and library cells. It is a little special for pins since they are not\nreal objects in designs. It is used to control the scanning process in optimization for purpose of debugging.\n\nIn XTop, only the top net can represent the physical net. All the logical net segments specified will be\nconverted to top level automatically.\n\nFor paths, it means that the tool does NOT try to fix the violations on the path. So, only the pins on the\nspecified paths are set as dont touch.\n\nOnce a library cell is set as dont touch, it means that all the cell instances with this library cell are dont\ntouch.\n\nExamples\nThe following example sets cells matched add_* as dont touch:\n\n% set_dont_touch [get_cells add_*]\n      \n\nThe following example sets pins on Path_0 as dont touch:\n\n% set_dont_touch [get_paths -path_name Path_0]\n      \n\nThe following example remove pins on Path_0 from dont touch:\n\n% set_dont_touch [get_paths -path_name Path_0] 0\n      \n\nThe following example sets instances with the library cell matched *BUF* as dont touch:\n\n% set_dont_touch [get_lib_cells *BUF*]  \n      \n\nSee Also\nset_module_dont_touch(1) set_hier_path_dont_touch(1) is_dont_touch(1) get_dont_touch_cells(1)\nget_dont_touch_nets(1) get_dont_touch_pins(1) save_user_dont_touch(1) restore_user_dont_touch(1)\n\n203"
            },
            {
                "doc_id": "_xtop_handbook_0167",
                "summary": "The document provides information about the 'set_dont_use' command in XTop tool. This command sets specified library cells as 'dont use' or not. It includes two arguments: 'lib_cells' and 'value'. The command will not affect buffer cells specified in automatic optimization. Examples are provided to illustrate how to add or remove library cells from 'dont use'.",
                "content": "Commands\n\nName\nset_dont_use --Set those library cells matched with specified patterns as dont use or not.\n\nSynopsis\nset_dont_use lib_cells [value]\n\ncollection lib_cells\n\nbool value\n\nArguments\nlib_cells Library cells to set as dont use or not.\n\nvalue Set as dont use or not.\n\nDescription\nThis command sets those library cells matched with the specified patterns as dont use or not. If a cell is\nmasked as dont use, it will be filtered from the candidate list of ECO actions by default.\n\nThose cells that marked as dont use in timing library of the reference corner will be considered as\ndont use by default. And this command can NOT overwrite this attribute to false unless the parameter\nhonor_timing_library_dont_use(1) is set to false.\n\nPlease note, in automatic optimization, if user specifies -buffer_list or -buffer option, those buffer cells\nwill NOT be affected by this command.\n\nExamples\nThe following example sets two library cells as dont use:\n\n% set_dont_use {BUFFD0 BUFFD1}\n2 library cells added to dont use.\n      \n\nThe following example removes library cell BUFFD0 from dont use:\n\n% set_dont_use {BUFFD0} 0\n1 library cells removed from dont use.\n      \n\nSee Also\nreport_dont_use(1) honor_timing_library_dont_use(1)\n\n204"
            },
            {
                "doc_id": "_xtop_handbook_0168",
                "summary": "The document provides information about the 'set_hier_path_dont_touch' command in XTop tool. This command sets specified hierarchical paths as 'dont touch' or not. It accepts two arguments: 'hier_path_list' and 'value'. The 'hier_path_list' is the hierarchical paths to be set, and 'value' is a boolean indicating whether to set as 'dont touch' or not, with default as true. Examples are provided to illustrate its usage. Related commands are also mentioned for further reference.",
                "content": "Commands\n\nName\nset_hier_path_dont_touch --Set all objects in the specified hier paths dont touch or not.\n\nSynopsis\nset_hier_path_dont_touch hier_path_list [value]\n\nstring_list hier_path_list\n\nbool value\n\nArguments\nhier_path_list Hier paths to be set as dont touch or not.\n\nvalue Dont touch or not, default is true.\n\nDescription\nThis command set the specified hier path dont touch or not. It has the same effect of setting the modules\nof the specified hier paths dont touch.\n\nIf you want to set dont touch for whole design, just specify a \"/\" as the hier path.\n\nExamples\nThe following example sets the objects under path alu/add_67 as dont touch:\n\n% set_hier_path_dont_touch alu/add_67\n      \n\nThe following example remove the objects in specified hier path from dont touch.\n\n% set_hier_path_dont_touch alu/add_67 0\n      \n\nSee Also\nset_dont_touch(1) set_module_dont_touch(1) is_dont_touch(1) save_user_dont_touch(1)\nrestore_user_dont_touch(1) get_dont_touch_cells(1) get_dont_touch_nets(1) get_dont_touch_pins(1)\n\n205"
            },
            {
                "doc_id": "_xtop_handbook_0169",
                "summary": "This is a description of the 'set_highlight_color' command in XTop tools. It sets the highlight color for objects on a layout after the 'start_gui' command is initiated. The command takes a color name as an argument, with options including \"yellow\", \"red\", \"green\", \"orange\", \"tomato\", \"chocolate\", \"gold\", \"magenta\", and \"lime\". The default color is yellow if no color name is specified.",
                "content": "Commands\n\nName\nset_highlight_color --Set highlight color for the following highlight actions after start_gui.\n\nSynopsis\nset_highlight_color [color_name]\n\nenum color_name in \"yellow red green orange tomato chocolate gold magenta lime\"\n\nArguments\ncolor_name Indicates the color name.\n\nDescription\nThis command set highlight color for highlighted objects on layout after start_gui. The following highlight\nactions will use this specified color to highlight objects. The default color is yellow if no color name\nspecified in command.\n\nExamples\nThe following example set highlight color for highlighted object on layout after start_gui.\n\n% set_highlight_color gold\n      \n\n206"
            },
            {
                "doc_id": "_xtop_handbook_0170",
                "summary": "The document provides information about the 'set_module_dont_touch' command in XTop tool. This command sets all objects in a specified module to 'dont touch' or not. It takes two arguments: 'module_list' which is the modules to be set, and 'value' which determines if the module is 'dont touch' or not, with the default being true. Examples are provided to illustrate its usage. Related commands are also mentioned for further reference.",
                "content": "Commands\n\nName\nset_module_dont_touch --Set all objects in module dont touch or not.\n\nSynopsis\nset_module_dont_touch module_list [value]\n\nstring_list module_list\n\nbool value\n\nArguments\nmodule_list Modules to be set as dont touch or not.\n\nvalue Dont touch or not, default is true.\n\nDescription\nThis command set the specified module dont touch or not. It has the same effect of setting all the cells and\nnets in all instances of the specified modules in the design recursively dont touch.\n\nIf you want to set dont touch for whole design, just specify top design name.\n\nExamples\nThe following example sets all of the cells and nets in instances of module dram as dont touch:\n\n% set_module_dont_touch dram\n      \n\nThe following example remove the objects in specified module from dont touch.\n\n% set_module_dont_touch dram 0\n      \n\nSee Also\nset_dont_touch(1) set_hier_path_dont_touch(1) is_dont_touch(1) save_user_dont_touch(1)\nrestore_user_dont_touch(1) get_dont_touch_cells(1) get_dont_touch_nets(1) get_dont_touch_pins(1)\n\n207"
            },
            {
                "doc_id": "_xtop_handbook_0171",
                "summary": "The document provides detailed information about the 'set_placement_constraint' command in XTop. This command is used to set user-defined placement constraints for a given design. It includes options such as '-design', '-max_density', '-density_region', '-max_displacement', '-ip_pin_exception', '-max_congestion', '-min_filler_width', and '-readiness_check_level'. Each option has specific parameters and usage explained in the document.",
                "content": "Commands\n\nName\nset_placement_constraint --Set placement constraint for given design.\n\nSynopsis\nset_placement_constraint [ -design design_name [ -max_density\nmax_density_value [-density_region max_density_region]]] [-max_displacement\nmax_displacement_value] [-ip_pin_exception ip_pin_exception_value] [-\nmax_congestion max_congestion_value] [-min_filler_width min_filler_width_value] [-\nreadiness_check_level readiness_check_level_value]\n\npointf_list density_region\n\nstring design\n\nbool ip_pin_exception\n\nfloat max_congestion in \"[0,1]\"\n\nfloat max_density in \"[0,1]\"\n\nstring_list max_displacement\n\nint min_filler_width in \"[0,4]\"\n\nenum readiness_check_level in \"hard soft\"\n\nArguments\n-density_region Max placement density region constraint for the design, if given,\nmax_density_region max_density constraint will only be applied to the given region. If\n\nsize of the list is 2, it will define a rectangle by lower left point and\ntop right point; and if size of the list is an even number larger than\n2, it will define a rectilinear fig by its boundary points.\n\n-design design_name Design for which to set constraint. If not given, constraint will be\nset to all opened designs.\n\n-ip_pin_exception true|false Due to correlation and computation effort consideration,\nlegalization engine has internal value control of max_displacement.\nBut for pin of IP cell(LEF BLOCK type cell), it may be far away\nfrom its boundary or be covered by large placement blockage,\nthe area decided by max_displacement may have no space for\nstandard cell; to insert buffer at such pin, user can set this flag, and\nlegalization engine will automatically enlarge search region to find\nplace for inserted buffer.\n\n-max_congestion Set max routing congestion constraint for the design.\nmax_congestion_value\n\n-max_density max_density_value Set max placement density constraint for the design.\n\n-max_displacement Set max displacement constraints for eco inst and original inst in\nmax_displacement_value the design.\n\n-min_filler_width Set minimum filler width that can be used, value is num of sites.\nmin_filler_width_value\n\n-readiness_check_level Set level for placement readiness check, which by default is hard. In\nreadiness_check_level_value hard mode, if there is any undefined cell, unplaced instance or cell\n\nwith no boundary information in a certain design, then this design\nis NOT ready for eco placement; but in soft mode, we loosen the\nconstraint and this design is ready for eco placement in such case.\n\nDescription\nTo set user defined placement constraint for given design.\n\nIf any constraint is not given in this command, the correspondent constraint value for the design will be\nremained unchanged.\n\nThis list for max_displacement constraint must contain exact two values, with first one being used to define\nmax_displacement_value for eco inst and second one being used to define max_displacement_value for\noriginal inst of the design. The string can either be a float, like 5.0, which means 5.0 micron. Also, it can be\na float followed by a letter t or T, like 150t, which means the max_displacement_value is 150*track_pitch,\nwith track_pitch being the routing track pitch value of the first horizontal routing layer. By default, the\nmax_displacement_value for the design is {100t 0}; Internally, there is a maximum constraint, the largest\nmax_displacement for the design is {1000t 50t}. Please note, if big max_displacement_value set, it will\ncause long runtime.\n\nExamples\n\n% set_placement_constraint -design cpu -max_displacement {150t 0} \\\n                           -max_congestion 0.9\n      \nFor design cpu, this command will set max displacement allowed of eco inst from its desired place to\n150*track_pitch, with track_pitch being first horizontal layer routing pitch.\n\nThe max displacement allowed for original inst in the design is set to 0, which means legalizer will not\nmove original inst of the design. Max congestion is set to 0.9, which means legalizer will not insert buffer\ninto region with routing congestion value larger than 0.9.\n\n% set_placement_constraint -design A_CORE -max_density 0.85\n      \n\nFor design A_CORE, this command set max placement density threshold to 0.85 for the whole design area.\n\n% set_placement_constraint -design B_CORE -max_density 0.6 \\\n                           -density_region {(0, 0) (30, 30)}\n% set_placement_constraint -design B_CORE -max_density 0.5 \\\n                           -density_region {(80, 80) (100, 100)}\n      \n\nFor design B_CORE, these two commands will set placement density threshold in two rect regions, with\ndensity threshold as 0.6 and 0.5 respectively.\n\n% set_placement_constraint -design A_CORE -readiness_check_level soft\n      \nFor design A_CORE, this command set placement readiness check level to soft."
            },
            {
                "doc_id": "_xtop_handbook_0172",
                "summary": "The document provides information about the 'set_placement_spacing_label' command in XTop tool. This command sets a label name for a specified side of the cells. It includes options such as '-name' to set the label name, '-side' to specify the side of the cell, '-ref_cells' to set labels for reference cells, '-row' for multi-row cells, and '-range' to define the range of the label on the cell.",
                "content": "Commands\n\nName\nset_placement_spacing_label --Set placement label for the given cells.\n\nSynopsis\nset_placement_spacing_label -name label_name -side cell_side -\nref_cells ref_cell_names [ -row row_index_on_cell | -range\nbottom_top_label_range_on_cell ]\n\nstring name\n\nfloat_list range\n\nstring_list ref_cells\n\nint row in \"[0,127]\"\n\nenum side in \"left right both bottom top\"\n\nArguments\n-name label_name Label/edge name to set.\n\n-range Only used for bottom or top label to define range of the label on the\nbottom_top_label_range_on_cell cell. It is a two value list, with first one denoting left bound of the\n\nrange and second one denoting right bound of the range.\n\n-ref_cells ref_cell_names Full names of reference cells to set labels for.\n\n-row row_index_on_cell For multi-row cell, suppose number of rows this cell occupies is\nN, then value of this parameter should be one in [0, N-1], with 0\ndenoting bottom row(bit 1) and N-1 denoting top row(bit N).\n\n-side cell_side Specify which side of the cell to set label.\n\nDescription\nThis command set label name for the given side of the cells specified by cell names.\n\nExamples\nThe following example sets placement label for the given cell.\n\n% set_placement_spacing_label -name DEL3B_L \\\n    -side left -ref_cells [get_ref_cells DEL3B*]\n% set_placement_spacing_label -name DEL3B_R \\\n    -side right -ref_cells [get_ref_cells DEL3B*]\n% set_placement_spacing_label -name DEL3B_Side \\\n    -side both -ref_cells [get_ref_cells DEL3B*]\n% set_placement_spacing_label -name DEL3B_Top_Side \\\n    -side top -ref_cells [get_ref_cells DEL3B*] -range {0 0.09}\n      \n\n211"
            },
            {
                "doc_id": "_xtop_handbook_0173",
                "summary": "This is a description of the 'set_placement_spacing_rule' command in XTop tool. It includes options such as '-adjacent_rows', '-halo', '-labels', and '-unit'. The command is used to set placement spacing label rule for specified labels with given values.",
                "content": "Commands\n\nName\nset_placement_spacing_rule --Set placement spacing label rule.\n\nSynopsis\nset_placement_spacing_rule value -labels cell_side_labels [-unit spacing_unit]\n[ -adjacent_rows | -halo ]\n\nflag adjacent_rows\n\nflag halo\n\nstring_list labels\n\nenum unit in \"site micron\"\n\nfloat_list value\n\nArguments\n-adjacent_rows Specify if it is a adjacent-row spacing rule.\n\n-halo Specify if it is a halo spacing rule.\n\n-labels cell_side_labels Label names of cells to set spacing rule.\n\n-unit spacing_unit Specify the unit of the spacing range number, either site or micron.\nsite by default.\n\nvalue Two value of the rule, first is whether can abut(0/1), second is min\nsites spacing - 1.\n\nDescription\nThis command set placement spacing label rule for the given labels with given values.\n\nExamples\nThe following example sets placement spacing label rule.\n\n% set_placement_spacing_rule -labels {DEL3B_L DEL3B_R} {1 3}\n      \n\n212"
            },
            {
                "doc_id": "_xtop_handbook_0174",
                "summary": "",
                "content": "Commands\n\nName\nset_reference_corner --Set reference corner.\n\nSynopsis\nset_reference_corner corner_name\n\nstring corner_name\n\nArguments\ncorner_name Indicates the corner name.\n\nDescription\nThis command set a reference corner.\n\nExamples\nThe following example sets reference corner as slow.\n\n% set_reference_corner slow\n      \n\nSee Also\ncreate_corner(1) remove_corner(1) get_reference_corner(1)\n\n213"
            },
            {
                "doc_id": "_xtop_handbook_0175",
                "summary": "",
                "content": "Commands\n\nName\nset_reference_mode --Set reference mode.\n\nSynopsis\nset_reference_mode mode_name\n\nstring mode_name\n\nArguments\nmode_name Indicates the mode name.\n\nDescription\nThis command set a reference mode.\n\nExamples\nThe following example sets reference mode as func.\n\n% set_reference_mode func\n      \n\nSee Also\ncreate_mode(1) remove_mode(1) get_reference_mode(1)\n\n214"
            },
            {
                "doc_id": "_xtop_handbook_0176",
                "summary": "",
                "content": "Commands\n\nName\nset_reference_scenario --Set reference scenario.\n\nSynopsis\nset_reference_scenario scenario_name\n\nstring scenario_name\n\nArguments\nscenario_name Indicates the scenario name.\n\nDescription\nThis command set a reference scenario.\n\nExamples\nThe following example sets reference scenario as func_worst.\n\n% set_reference_scenario func_worst\n      \n\nSee Also\ncreate_scenario(1) remove_scenario(1) get_reference_scenario(1)\n\n215"
            },
            {
                "doc_id": "_xtop_handbook_0177",
                "summary": "The document provides information about the 'set_removable_fillers' command in XTop tool. This command sets certain cells, matched with specified patterns, to be removable during ECO and optimization process. The command has two arguments: '-append' for setting removable filler in append mode, and 'cell_names' for wildcard patterns to match the library cells. The document also includes examples of how to use the command.",
                "content": "Commands\n\nName\nset_removable_fillers --Set those cells matched with the specified patterns to be removable during ECO\nand optimization process.\n\nSynopsis\nset_removable_fillers [-append] cell_names\n\nflag append\n\nstring_list cell_names\n\nArguments\n-append Set removable filler in append mode.\n\ncell_names Wildcard patterns to match the library cells.\n\nDescription\nThis command sets those cells matched with the specified patterns to be removable during ECO and\noptimization process. The cells are matched with reference library cell name, and those cells set as fixed\nor locked are not included.\n\nDuring the ECO and optimization process, it will the space occupied by these fillers, and write the\ncorresponding commands for removing them when exporting the scripts.\n\nSpecify an empty string list to clear all the removable fillers.\n\nIt is needed to run this command between link_reference_library and import_designs.\n\nExamples\nThe following example specifies some buffers to be removable fillers.\n\n% link_reference_library ...\n% set_removable_fillers {FILLX2 FILLX4 DCAPX8 DCAPX12}\nSet 4 cells as removable.\n% ...\n% import_designs\n      \n\nThe following example shows how to clear all the removable fillers.\n\n% set_removable_fillers {}\nSet 0 cells as removable.\n      \n\nSee Also\nreport_removable_fillers(1)\n\n216"
            },
            {
                "doc_id": "_xtop_handbook_0178",
                "summary": "The document provides information about the command 'set_setup_extra_derate' which sets up extra derate value for specified scenarios. It can set a uniform derate value for all scenarios or for one or several scenarios. The command has two arguments: '-scenario scenario_list' and 'value'. The default extra derate is 1.0 if the command is not called or if the scenario is not covered. The derate will be overwritten if the command is called a second time.",
                "content": "Commands\n\nName\nset_setup_extra_derate --Set setup extra derate value for specified scenarios.\n\nSynopsis\nset_setup_extra_derate value [-scenario scenario_list]\n\nstring_list scenario\n\nfloat value in \"[1,1.2]\"\n\nArguments\n-scenario scenario_list It can specify one or several scenarios.\n\nvalue Set setup extra derate value for scenarios.\n\nDescription\nThis command sets setup extra derate value for specified scenarios. it has two methods which can set\nuniform derate value for all scenarios or set derate value for one or several scenarios. this value will affect\ndelay calculation.\n\nIf command not called, or if scenario is not covered when set, the default extra derate will be 1.0.\n\nDerate will be overwritten if the command called a second time.\n\nExamples\nThe following example sets setup extra derate value for all scenarios.\n\n%set_setup_extra_derate 1.1\n      \n\nThe following example sets setup extra derate to 1.05 for func_slow, and 1.02 for other scenarios.\n\n%set_setup_extra_derate 1.02\n\n%set_setup_extra_derate -scenario {func_slow} 1.05\n      \n\nSee Also\nreport_setup_extra_derate(1)\n\n217"
            },
            {
                "doc_id": "_xtop_handbook_0179",
                "summary": "This is a description of the 'set_site_map' command in XTop tools. It sets the site map for designs, particularly useful when PR tools output meaningless site names in DEF files. The command takes two arguments: '-design design_name' to specify the design, and 'site_map' to provide the site map in pairs. The command should be used before 'import_designs'. Examples are provided for setting global site map and for specific designs.",
                "content": "Commands\n\nName\nset_site_map --Set site map for design.\n\nSynopsis\nset_site_map [-design design_name] site_map\n\nstring design\n\nstring_list site_map\n\nArguments\n-design design_name Design to set site map.\n\nsite_map Site map in pairs.\n\nDescription\nThis command sets the site map for designs. Some PR tools output a meaningless site name while exporting\nDEF files. It needs to specify a site map from DEF to those in the LEF library if the sites are not matched.\n\nThe site map is given in a string list with each pair from DEF to reference library. If multiple sites have\nthe same size, the site map can be set only once. It won't affect the legalization. If the design is specified,\n1 unit can only be mapped to 1 LEF site for the design. For multiple mappings, only the last mapped LEF\nsite will be taken. If the design is not specified, it will be set for all designs in the workspace.\n\nThis command must be put right before import_designs, which uses site mappings directly.\n\nExamples\nThe following example shows how to set global site map for all designs.\n\n% set_site_map \"unit core12T\"\n      \n\nThe following example shows how to set the site map for specific design.\n\n% set_site_map -design tst \"unit core9T unit2 core12T\"\n      \n\nSee Also\nreport_site_map(1)\n\n218"
            },
            {
                "doc_id": "_xtop_handbook_0180",
                "summary": "This document provides information about the 'set_skip_scenarios' command in XTop tool. The command is used to skip timing of specified scenarios with options for skipping maximum (-max) or minimum (-min) timing. The scenarios to be skipped are matched by wildcard and the default value for skipping is true. The document also includes examples of how to use the command.",
                "content": "Commands\n\nName\nset_skip_scenarios --Set to skip timing of specified scenarios.\n\nSynopsis\nset_skip_scenarios [-min] [-max] scenarios [value]\n\nflag max\n\nflag min\n\nstring_list scenarios\n\nbool value\n\nArguments\n-max Skip max timing for specified scenarios.\n\n-min Skip min timing for specified scenarios.\n\nscenarios Scenarios to skip, matched by wildcard.\n\nvalue Skipped or not, default is true.\n\nDescription\nThis command sets to skip timing of specified scenarios. While one scenario is set to be skipped, the\ncorresponding setup or hold slacks will not be taken into account in ECO flow. However, it will also be\nupdated after ECO to keep integrity of timing.\n\nIf no timing mode is specified, it will act as both of them are specified, and all timing are skipped for\nthis scenario.\n\nExamples\nThe following example sets to skip min and max timing of scenario func_best:\n\n% set_skip_scenarios func_best\nSkip 1 matched scenarios:\n  func_best\n      \n\nThe following example removes the setting of skipping min timing of scenario func_best:\n\n% set_skip_scenarios func_best -min false\nSkip 1 matched scenarios:\n  func_best\n      \n\nSee Also\nreport_skip_scenarios(1)\n\n219"
            },
            {
                "doc_id": "_xtop_handbook_0181",
                "summary": "This is a description of the command \"set_specific_lib_cells\" in XTop tools. The command sets specific library cells for a specified design. It has options like \"-design\" to specify the design, \"-hier_path\" to set the hierarchy path, and \"-recursive\" to trace all sub designs. The command also provides examples of how to use these options.",
                "content": "Commands\n\nName\nset_specific_lib_cells --Set specific library cells for specified design.\n\nSynopsis\nset_specific_lib_cells [-design design_name] [ -recursive | -hier_path hier_path_name\n] lib_cells\n\nstring design\n\nstring hier_path\n\nflag recursive\n\ncollection lib_cells\n\nArguments\n-design design_name Design to set specific lib cells.\n\n-hier_path hier_path_name Hierarchy path name of specified design.\n\n-recursive Trace all sub designs recursively.\n\nlib_cells Lib cells to set, matched by wildcard.\n\nDescription\nThis command sets specific library cells for specified design. Once the specific cells are set, the ECO\noperations will look for candidates in this set only.\n\nBy default, this command did NOT trace all the sub designs unless option -recursive is specified. An empty\nlibrary cell set means clear the settings for specified design. While no design is set, it will apply to the\ntop design.\n\n-hier_path is used if user wants to set the lib cells to certain hierarchy path of given design, all instances\nof current and sub hierachy will be honored, but will not trace through sub designs. It will have higher\npriority than full design setting.\n\nExamples\nThe following example shows how to set specified library cells for sub design.\n\n% set_specific_lib_cells -design SUB SP*\n% report_specific_lib_cells\nSUB : 240\n  SPND2D2B\n  SPND2D4B\n  SPBUFD0B\n  ...\n      \nThe following example shows how to set trace all sub designs recursively.\n\n% set_specific_lib_cells -design cpu -recursive SP*\n% report_specific_lib_cells\ncpu : 470\n  SPND2D2B\n  ...\nregs : 240\n  SPND2D2B\n  ...\n     \n\nThe following example shows how to set specific cell by hier_path.\n\n% set_specific_lib_cells -design cpu -hier_path regs BUFFD4*\n% report_specific_lib_cells\ncpu :\n regs : 3\n  BUFFD4EPLVT\n  BUFFD4EP\n  BUFFD4EPHVT\n     \n\nSee Also\nget_specific_lib_cells(1) report_specific_lib_cells(1) purge_specific_lib_cells(1)"
            },
            {
                "doc_id": "_xtop_handbook_0182",
                "summary": "The document provides information about the 'set_tech_group' command in XTop tool. This command is used to set the technology group for a specified design. The command syntax includes the design name and the technology group name as arguments. The command is used once a design definition is created and it references to the libraries in the default technology group. If other technology groups have been defined, the correct technology group needs to be set for each design.",
                "content": "Commands\n\nName\nset_tech_group --Set technology group for the specified design.\n\nSynopsis\nset_tech_group -design design_name tech_group\n\nstring design\n\nstring tech_group\n\nArguments\n-design design_name Design to set tech group.\n\ntech_group Technology group name to set for the specified design.\n\nDescription\nThis command sets technology group the specified design. Once a design definition is created with\ncommand create_design_definition(1) or define_designs(1), it will always reference to the libraries linked\nin the default technology group. If technology groups other than the default one have been defined in this\nworkspace, it needs to set correct technology group to reference for each design.\n\nExamples\nSee Also\n\nget_tech_group(1) report_tech_group(1) link_reference_library(1)\n\n222"
            },
            {
                "doc_id": "_xtop_handbook_0183",
                "summary": "The document provides information about the 'set_tmlib_cell_property_formula' command in XTop tool. This command is used to set a formula for trend analysis in a library. It supports six properties represented by uppercase letters: A for cell area, L for leakage power, I for internal power, D for cell delay, T for output transition, and C for pin cap. The command supports simple operators such as '+', '-', '*', '/', '^', and '()'. The default formula is (D+T)*(L+I+A).",
                "content": "Commands\n\nName\nset_tmlib_cell_property_formula --Set tmlib property formula for trend analyze.\n\nSynopsis\nset_tmlib_cell_property_formula formula_string\n\nstring formula_string\n\nArguments\nformula_string Formula string to set.\n\nDescription\nWhile doing trend analysis, sometimes user want to check if the library is reasonable or not. Commonly,\nthere are six important properties to justify a cell, and there are represented by an uppercase letter\nrespectively.\n\n--A: cell area.\n\n--L: leakage power.\n\n--I: internal power.\n\n--D: cell delay.\n\n--T: output transition.\n\n--C: pin cap.\n\nOnly simple operators are supported in this formula: '+', '-', '*', '/', '^', and '()'. The score formula is set to\n(D+T)*(L+I+A) by default.\n\nExamples\n\n     % set_tmlib_cell_property_formula {(A^0.67+L+I)*(D+T)}\n     \n\nSee Also\nget_tmlib_cell_property_formula(1) set_tmlib_score_formula(1) get_tmlib_score_formula(1)\n\n223"
            },
            {
                "doc_id": "_xtop_handbook_0184",
                "summary": "The document provides information about the 'set_tmlib_score_formula' command in XTop. This command is used to set a formula for comparing tmlibs. The formula uses five properties to score a cell: cell area (A), leakage power (L), internal power (I), cell delay (D), output transition (T), and pin cap (C). The score is calculated using relative values and supports simple operators like '+', '-', '*', '/', '^', and '()'. The default formula is (D+T)*(L+I+A).",
                "content": "Commands\n\nName\nset_tmlib_score_formula --Set tmlib score formula for comparison.\n\nSynopsis\nset_tmlib_score_formula formula_string\n\nstring formula_string\n\nArguments\nformula_string Formula string to set.\n\nDescription\nWhile comparing tmlibs, sometimes it needs to make a decision that which library or cell is better.\nCommonly, there are five important properties to justify the score of a cell, and there are represented by\nan uppercase letter respectively.\n\n--A: cell area.\n\n--L: leakage power.\n\n--I: internal power.\n\n--D: cell delay.\n\n--T: output transition.\n\n--C: pin cap.\n\nAnd with this formula, score values can be calculated for each cell and the whole library.\n\nSince there is no absolute standard for every property, a relative value is use to quantize the score. For\nexample, while comparing cell A with cell B, the area of B is 25% larger than A, the area score of A is\nalways set to 1.0, and area score of B is calculated as 1/(1+0.25) = 0.8.\n\nOnly simple operators are supported in this formula: '+', '-', '*', '/', '^', and '()'. The score formula is set to\n(D+T)*(L+I+A) by default.\n\nExamples\n\n  % set_tmlib_score_formula {(A^0.67+L+I)*(D+T)}      \n      \n\nSee Also\nget_tmlib_score_formula(1)\n\n224"
            },
            {
                "doc_id": "_xtop_handbook_0185",
                "summary": "The document provides information about the 'set_units' command in XTop tool. This command is used to set units for length, time, RCL, voltage, current, or power. The command has various arguments for setting different units, such as -length, -time, -resistance, -capacitance, -inductance, -voltage, -current, and -power. It also emphasizes the need for consistency when setting units, particularly for resistance, capacitance, and time. Examples of command usage are also provided.",
                "content": "Commands\n\nName\nset_units --Set unit for length, time, RCL, voltage, current or power.\n\nSynopsis\nset_units [-length unit_str] [-time unit_str] [-resistance unit_str] [-capacitance\nunit_str] [-inductance unit_str] [-voltage unit_str] [-current unit_str] [-power\nunit_str]\n\nstring capacitance\n\nstring current\n\nstring inductance\n\nstring length\n\nstring power\n\nstring resistance\n\nstring time\n\nstring voltage\n\nArguments\n-capacitance unit_str String representative for capacitance.\n\n-current unit_str String representative for current.\n\n-inductance unit_str String representative for inductance.\n\n-length unit_str String representative for length unit.\n\n-power unit_str String representative for power.\n\n-resistance unit_str String representative for resistance.\n\n-time unit_str String representative for time unit.\n\n-voltage unit_str String representative for voltage.\n\nDescription\nThis command sets units for length, time, RCL, voltage, current or power. The units must be set before\nrunning read_timing_data.\n\nWhen setting units, resistance, capacitance and time unit must be consistency. For example, resistance unit\nis kohm, capacitance unit is pf, and time unit must be ns. If user wants to change time unit to ps, will have\nto change resistance unit to ohm at the same time.\n\nExamples\nThe following example sets time unit as ps and resistance unit to ohm:\n% set_units -time ps -resistance ohm\n      \n\nThe following example tries to change only time unit, but failed due to inconsistency:\n\n% set_units -time ps\nError: Time and RC unit not consistency.\n      \n\nSee Also\nreport_units(1)\n\n226"
            },
            {
                "doc_id": "_xtop_handbook_0186",
                "summary": "This is a description of the 'swap_design_definition' command in XTop tools. It takes two arguments, 'first_design' and 'second_design', and swaps the order of these two specified designs. This command is particularly useful for adjusting the order of design definitions in a hierarchical design.",
                "content": "Commands\n\nName\nswap_design_definition --Swap the order of design definitions.\n\nSynopsis\nswap_design_definition first_design second_design\n\nstring first_design\n\nstring second_design\n\nArguments\nfirst_design First design to swap.\n\nsecond_design Second design to swap.\n\nDescription\nThis command swaps the order of the two specified designs. This is a convenient way to adjust the order\nof design definitions for a hierarchical design.\n\nExamples\nThe following examples show how a 2-level hierarchical design swap design definitions:\n\n% swap_design_definition cpu sub_1\n      \n\nSee Also\ncreate_design_definition(1)\n\n227"
            },
            {
                "doc_id": "_xtop_handbook_0187",
                "summary": "The document provides information about the 'unlink_reference_library' command in XTop. This command is used to unlink files from the reference library. It has options like '-all' to unlink all files, '-tech_group' to specify a technology group, and 'files' to specify particular files to unlink. Examples of its usage are also provided.",
                "content": "Commands\n\nName\nunlink_reference_library --Unlink reference library files.\n\nSynopsis\nunlink_reference_library [-tech_group grp_name] { -all | files }\n\nflag all\n\nstring tech_group\n\nstring_list files\n\nArguments\n-all Unlinks all files from reference library.\n\n-tech_group grp_name A marker for reference library of different technology.\n\nfiles Files to unlink.\n\nDescription\nThis command unlinks files from reference library. Once the technology LEF file is unlinked, all the files\nin the same technology group will be unlinked.\n\nIf technology group is not specified, files be will be unlinked from the default group.\n\nExamples\nThis is an example of unlink a reference library lef file.\n\n% unlink_reference_library /home/user/library/lef/tech.lef\n      \n\nThis is an example of unlink all of the reference library lef file.\n\n% unlink_reference_library -all\n      \n\nSee Also\nlink_reference_library(1)\n\n228"
            },
            {
                "doc_id": "_xtop_handbook_0188",
                "summary": "The document provides information about the 'unlink_timing_library' command in XTop. This command is used to unlink timing library files from a specified corner. It has several options including '-all' to unlink all files, '-corner' to specify the corner to unlink, '-search_type' to set the search type (min, max, or min_max), and 'files' to specify the files to unlink.",
                "content": "Commands\n\nName\nunlink_timing_library --Unlink timing library files.\n\nSynopsis\nunlink_timing_library -corner corner_name [-search_type mode_name] { files | -all }\n\nflag all\n\nstring corner\n\nenum search_type in \"min max min_max\"\n\nstring_list files\n\nArguments\n-all Unlinks all files from reference library.\n\n-corner corner_name Corner to unlink.\n\n-search_type mode_name Search type: min, max, or min_max, default is min_max.\n\nfiles Files to unlink.\n\nDescription\nThis command unlinks timing library files from the specified corner.\n\nExamples\nThe following example unlinks timing library files.\n\n% unlink_timing_library -corner slow ./idb/tutorialwc.idb\n      \n\nSee Also\nlink_timing_library(1)\n\n229"
            },
            {
                "doc_id": "_xtop_handbook_0189",
                "summary": "",
                "content": "Commands\n\nName\nzoom_to_highlighted --Zoom layout to the highlighted objects.\n\nSynopsis\nzoom_to_highlighted\n\nDescription\nThis command zooms layout to the highlighted objects. If the GUI is not on or layout is not open, it does\nnothing.\n\nExamples\nThe following example zooms layout to the highlighted objects:\n\n% zoom_to_highlighted\n      \n\n230"
            },
            {
                "doc_id": "_xtop_handbook_0190",
                "summary": "This is a description of the 'commit_candidate' command in XTop tools. It includes the command's name, synopsis, arguments, description, and an example of its usage. The command commits a specified candidate from the table model, with the candidate's index as an argument. It also details the errors that may occur during its execution.",
                "content": "Commands\n\nName\ncommit_candidate --Commit specified candidate.\n\nSynopsis\ncommit_candidate -index id_candidate\n\nint index in \"[0,inf)\"\n\nArguments\n-index id_candidate The index of candidate from the table model.\n\nDescription\nThis command will commit specified candidate.\n\nIt will report errors when following happens.\n\n--Number of candidates is zero.\n\n--The given index is larger than number of candidates.\n\nExamples\nThe following example will commit specified candidate (index is 5) from the last table model.\n\n% commit_candidate -index 5\n      \n\n231"
            },
            {
                "doc_id": "_xtop_handbook_0191",
                "summary": "This is a description of the 'count_eco_actions' command in XTop tool. It counts the eco actions of specified types. The command has two optional arguments: '-last_n count' which counts in the last n eco actions, and '-types type_list' which specifies the ECO action types to count.",
                "content": "Commands\n\nName\ncount_eco_actions --Count the eco actions of the specified types.\n\nSynopsis\nint count_eco_actions [-last_n count] [-types type_list]\n\nint last_n\n\nenum_list types in \"move_cell size_cell exchange_cell insert_buffer remove_buffer insert_dummy_cell\nreconnect_pin insert_buffer_chain split_load split_net\"\n\nArguments\n-last_n count Count in the last n eco actions, a number less than 1 means all.\n\n-types type_list ECO action types to count, empty means all, default is all.\n\nDescription\nThis command counts the eco actions of specified types. If no type is specified, it return the count of all,\notherwise, only the specified types. While last_n is specified, it counts in the specified range.\n\nExamples\nThe following example counts the size_cell actions.\n\n% count_eco_actions -types size_cell\n7\n      \n\n232"
            },
            {
                "doc_id": "_xtop_handbook_0192",
                "summary": "The document provides a detailed explanation of the 'exchange_cell' command in XTop tools. This command is used to exchange specified cell instances with other specified cell instances. The command takes three arguments: '-design design_name', 'cell', and 'cell_list'. The command also handles errors such as incomplete timing library cells, non-unique instances in Verilog, locked instances in placement, and instances connected to a multi-driven net. An example of the command usage is also provided.",
                "content": "Commands\n\nName\nexchange_cell --Exchange specified cell instance with the specified cell instances.\n\nSynopsis\nexchange_cell [-design design_name] cell cell_list\n\nstring design\n\ncollection cell\n\ncollection cell_list\n\nArguments\n-design design_name Design for this action.\n\ncell Target Cell.\n\ncell_list Cells to exchange.\n\nDescription\nThis command exchanges the specified instance with a list of specified instances.\n\nSimply, for two specified instances 'A' and 'B', this command will size inst 'A' to the master of inst 'B',\nsize inst 'B' to the master of inst 'A', and exchange their positions. For the specified instance 'A' with a list\nof specified instances {'B','C','D'}, this command will size inst 'A' to the master of inst 'B', size inst 'B' to\nthe master of inst 'C', size inst 'C' to the master of inst 'D', and for the last inst 'D', it will be sized to the\nmaster of inst 'A'. So does their position change.\n\nFor following situations, it will report errors.\n\n--Any of the timing library cells of specified instances is not complete for all corners.\n\n--The target instance is not single.\n\n--Any of the specified instances is not unique in Verilog.\n\n--Any of the specified instances is locked in placement.\n\n--Any of the specified instances is connected to a multi-driven net.\n\nExamples\nThe following example exchange cell regs/dram1/U180/add_buf_1 with specified cells regs/dram1/U181/\nadd_buf_2 and regs/dram1/U181/add_buf_3.\n\n% exchange_cell -design {cpu} regs/dram1/U180/add_buf_1 \\\n            {regs/dram1/U181/add_buf_2 regs/dram1/U181/add_buf_3}\n      \n\n233"
            },
            {
                "doc_id": "_xtop_handbook_0193",
                "summary": "This is a description of the \"insert_buffer\" command in XTop tools. The command inserts a buffer and inverter chain to buffer specified pins on the net. It includes options such as \"-design\", \"-force\", \"-inverter_pair\", \"-locations\", \"-new_cell_names\", \"-new_net_names\", \"pin_list\", and \"lib_cells\". It allows to insert a mixed chain of buffers and an even number of inverters, with a recommendation to use the \"-inverter_pair\" option for compatibility with other STA tools.",
                "content": "Commands\n\nName\ninsert_buffer --Insert buffer and inverter chain to buffer specified pins on the net.\n\nSynopsis\ninsert_buffer [-design design_name] [-inverter_pair] [-new_cell_names names] [-\nnew_net_names names] [-locations coord] [-force] pin_list lib_cells\n\nstring design\n\nflag force\n\nflag inverter_pair\n\npointf_list locations\n\nstring_list new_cell_names\n\nstring_list new_net_names\n\ncollection pin_list\n\ncollection lib_cells\n\nArguments\n-design design_name Design for this action.\n\n-force Force to insert buffer in different power domain with buffered pin.\n\n-inverter_pair The specified cells to insert are inverters, and will be inserted in pairs.\n\n-locations coord Original locations for the newly created buffers, and should be the same\nsize of lib cell list, or double if inverter pair is specified.\n\n-new_cell_names names Cell names for the newly inserted buffers or inverter pairs, and should\nbe the same size of lib cells, or double if inverter pair is specified .\n\n-new_net_names names Net names for the newly created nets, and should be the same size of lib\ncell list, or double if inverter pair is specified.\n\npin_list Pins to buffer.\n\nlib_cells A list of lib cells to insert.\n\nDescription\nThis command inserts buffer and inverter chain to buffer specified pins on the net.\n\nGenerally, it allows to insert a mixed chain of buffers and an even number of inverters. While inserting\ninverters, for compatibility with other STA tools, it is highly recommended to use option -inverter_pair to\ninsert them in pairs. Otherwise, it cannot write out correct eco scripts for these tools.\n\nWhile option -inverter_pair is specified, the cell list must be inverters and each of them will be inserted\nas pairs.\n\n234"
            },
            {
                "doc_id": "_xtop_handbook_0194",
                "summary": "This document provides instructions on how to use the XTop tool's command for inserting buffers or inverter pairs into a design. It explains the conditions under which errors will be reported, such as non-existent library cells or incomplete timing library cells. It also provides examples of how to use the command in different scenarios, such as buffering a pin in a specific design or at a specific location, or inserting an inverter pair.",
                "content": "Commands\n\nIf the placement legalization is on, it will try to find correct places for the newly inserted buffers or inverter\npairs in the legalization margin. If failed, by default, these cells will be put just at the specified positions,\nand it will go on updating timing. If the placement legalization is an obligation, you can just turn the\nparameter placement_legalization_obligated(1) on. Thus if any cell failed to legalize, it will report an error\nand revert back.\n\nFor following situations, it will report errors.\n\n--Any of the library cells does not exist.\n\n--The timing library cell is not complete for all corners.\n\n--Any of the specified is not a buffer or inverter.\n\n--The specified pins are not on the same net.\n\n--The net has no driver or more than one driver.\n\n--Buffer more than one pins on a net with equivalent nets.\n\nWhile inserting buffer on a net that crosses physical hierarchies to buffer a hierarchical port, it needs to\nspecify the design that you want to put the buffer in. Otherwise, it will be always put in the upper level.\nFor example, insert a buffer to buffer an input \"I\" of sub block \"CPU\".\n\n% insert_buffer CPU/I BUFX1\n \n\nand\n\n% insert_buffer -design cpu I BUFX1\n \n\nThe first command will insert buffer in the top design, while the second will insert the buffer in design\n\"cpu\".\n\nExamples\nThe following example inserts 2 BUFFD6 to buffer pin dram1/C3/U574/C1 in design regs:\n\n% insert_buffer -design {regs} {dram1/C3/U574/C1} {BUFFD6 BUFFD6}\n      \n\nThe following example inserts BUFFD12 at location (45.247, 57.306) to buffer pin dram1/C3/U574/C1\nin design regs:\n\n% insert_buffer -design {regs} {dram1/C3/U574/C1} {BUFFD12} \\\n                -locations {(45.247, 57.306)}\n      \n\nThe following example inserts INVD16 pair to buffer pin dram1/C3/U574/C1 in design regs:\n\n% insert_buffer -design {regs} {dram1/C3/U574/C1} {INVD16} \\\n                -inverter_pair\n      \n\nThe following example inserts 2 BUFFD6 with specified names for newly inserted buffers and newly\ncreated nets to buffer pin dram1/C3/U574/C1 in design regs:\n\n% insert_buffer -design {regs} {dram1/C3/U574/C1} {BUFFD6 BUFFD6} \\\n                -new_cell_names {eco_buf0 eco_buf1} \\\n                -new_net_names {eco_net0 eco_net1}"
            },
            {
                "doc_id": "_xtop_handbook_0195",
                "summary": "This is a description of the \"insert_dummy_cell\" command in XTop tool. The command inserts a buffer or inverter on the net that contains a specified pin. It includes options such as \"-design\" for design name, \"-force\" to force insert, \"-location\" for the original location of the new dummy cell, \"-new_cell_name\" for the name of the new cell, \"pin\" to insert, and \"lib_cell\" to insert. It also provides examples of how to use the command.",
                "content": "Commands\n\nName\ninsert_dummy_cell --Insert inverter or buffer on the net that contains the specified pin.\n\nSynopsis\ninsert_dummy_cell [-design design_name] [-new_cell_name name] [-location coord] [-force]\npin lib_cell\n\nstring design\n\nflag force\n\npointf_list location\n\nstring_list new_cell_name\n\ncollection pin\n\ncollection lib_cell\n\nArguments\n-design design_name Design for this action.\n\n-force Force to insert dummy cell in different power domain of pins.\n\n-location coord Original location for the newly created dummy cell.\n\n-new_cell_name name Cell name for the newly inserted dummy cell.\n\npin Pin to insert.\n\nlib_cell The lib cell to insert.\n\nDescription\nThis command inserts buffer or inverter on the net that contains the specified pin.\n\nIt only allows to insert single dummy cell for single pin. All the input pins of dummy cell will be connected\nto the net that contains specified pin. And among all path segments on the net, the one that makes the\ndistance between center of all input pins and the net shortest will be connected.\n\nFor following situations, it will report errors.\n\n--The library cell does not exist.\n\n--Any of the specified is not a buffer or inverter.\n\n--The timing library cell is not complete for all corners.\n\n--None or more than one specified pin.\n\n--The size of lib cells is not equal with pins.\n\nExamples\nThe following example inserts BUFFD1 with specified name for newly inserted dummy to pin dram1/C2/\nU10/C1 in design cpu:\n\n% insert_dummy_cell -design {cpu} {dram1/C2/U10/C1} {BUFFD1} \\\n                    -new_cell_name {eco_dummy0}\n      \n\nThe following example inserts a BUFFD2 at location (30.200, 62.870) for inserted dummy to pin dram0/\nU12/A1 in design regs:\n\n% insert_dummy_cell -design {regs} {dram0/U12/A1} {BUFFD2} \\\n                    -location {(30.200, 62.870)}"
            },
            {
                "doc_id": "_xtop_handbook_0196",
                "summary": "This is a description of the \"list_exchange_cell_candidates\" command in XTop tool. It lists the instance candidates that can be exchanged in a legal constraint region. The command has options such as \"-by_function\", \"-design design_name\", \"-filter expression\", and \"cell\". It also provides examples of how to use the command and explains the errors that may occur.",
                "content": "Commands\n\nName\nlist_exchange_cell_candidates --List the instance candidates that can be exchanged in legal constraint\nregion.\n\nSynopsis\nlist_exchange_cell_candidates [-design design_name] cell [-by_function] [-filter\nexpression]\n\nflag by_function\n\nstring design\n\nstring filter\n\ncollection cell\n\nArguments\n-by_function Matched cells by function matching pattern instead of by footprint.\n\n-design design_name Design for candidates.\n\n-filter expression Filter for candidates.\n\ncell Cell to exchange. Only single cell is supported.\n\nDescription\nThis command will show the instance candidates that can be exchanged for specified instance.\n\nIf the legal constraint region isn't specified, the region is default legal constraint.\n\nIt will report errors when following happens.\n\n--More than one instance is given.\n\n--The given instance is not exist in specified design.\n\nExamples\nThe following example will list the instance candidates that can be exchanged with regs/dram1/U180/\nadd_buf_1 in design cpu.\n\n% list_exchange_cell_candidates -design {cpu} regs/dram1/U180/add_buf_1\n      \n\n239"
            },
            {
                "doc_id": "_xtop_handbook_0197",
                "summary": "This is a description of the \"list_insert_buffer_candidates\" command in XTop tool. The command lists buffer or inverter candidates that can be inserted for a specified pin in a design. It includes options for specifying the design name, whether to include \"dont_use\" cells, a filter for candidates, whether to match cells for gate array cells, and whether to only include inverter candidates.",
                "content": "Commands\n\nName\nlist_insert_buffer_candidates --List buffer or inverter candidates that can be inserted.\n\nSynopsis\nlist_insert_buffer_candidates [-design design_name] pin [-inverter] [-dont_use] [-\ngate_array] [-filter expression]\n\nstring design\n\nflag dont_use\n\nstring filter\n\nflag gate_array\n\nflag inverter\n\ncollection pin\n\nArguments\n-design design_name Design where buffer or inverters will be inserted in.\n\n-dont_use Matched candidates including dont_use cells.\n\n-filter expression Filter for candidates.\n\n-gate_array Matched cells for gate array cells. Only valid in post mask eco mode.\n\n-inverter Only inverter candidates.\n\npin Pin to insert. Only single pin is supported.\n\nDescription\nThis command will show the buffer or inverter candidates that can be inserted for specified pin.\n\nIt will report errors when following happens.\n\n--More than one specified pin is given.\n\n--The given pin is not exist in specified design.\n\nExamples\nThe following example will list only inverter candidates that can be inserted at pin U318/I in design cpu,\nincluding dont_use cells.\n\n% list_insert_buffer_candidates -design {cpu} U318/I -inverter -dont_use\n      \n\n240"
            },
            {
                "doc_id": "_xtop_handbook_0198",
                "summary": "The document provides information about the \"list_insert_dummy_cell_candidates\" command in XTop. This command lists the master candidates that can be inserted for a specified pin. The command has several options including -design, -dont_use, -filter, -gate_array, -inverter, and pin. The command will report errors if more than one pin is specified or if the given pin does not exist in the specified design.",
                "content": "Commands\n\nName\nlist_insert_dummy_cell_candidates --List the master candidates that can be inserted.\n\nSynopsis\nlist_insert_dummy_cell_candidates [-design design_name] pin [-inverter] [-dont_use]\n[-gate_array] [-filter expression]\n\nstring design\n\nflag dont_use\n\nstring filter\n\nflag gate_array\n\nflag inverter\n\ncollection pin\n\nArguments\n-design design_name Design where dummy will be inserted in.\n\n-dont_use Matched candidates including dont_use cells.\n\n-filter expression Filter for candidates.\n\n-gate_array Matched cells for gate array cells. Only valid in post mask eco mode.\n\n-inverter Only inverter candidates.\n\npin Pin to insert. Only single pin is supported.\n\nDescription\nThis command will show the master candidates that can be inserted for specified pin.\n\nThe master candidates must be inverter.\n\nIt will report errors when following happens.\n\n--More than one specified pin is given.\n\n--The given pin is not exist in specified design.\n\nExamples\nThe following example will list only inverter candidates that can be inserted at pin U318/I in design cpu,\nincluding dont_use cells.\n\n% list_insert_dummy_cell_candidates -design {cpu} U318/I -inverter -dont_use\n      \n\n241"
            },
            {
                "doc_id": "_xtop_handbook_0199",
                "summary": "This is a description of the \"list_size_cell_candidates\" command in XTop tool. The command lists the master candidates that can be sized for a specified cell in a design. It includes options such as \"-by_function\", \"-design\", \"-dont_use\", \"-filter\", \"-gate_array\", and \"cell\". It also provides examples of how to use the command.",
                "content": "Commands\n\nName\nlist_size_cell_candidates --List the master candidates that can be sized.\n\nSynopsis\nlist_size_cell_candidates [-design design_name] cell [-by_function] [-dont_use] [-\ngate_array] [-filter expression]\n\nflag by_function\n\nstring design\n\nflag dont_use\n\nstring filter\n\nflag gate_array\n\ncollection cell\n\nArguments\n-by_function Matched cells by function matching pattern instead of by footprint.\n\n-design design_name Design where the cell will be sized.\n\n-dont_use Matched cells including dont_use cells.\n\n-filter expression Filter for candidates.\n\n-gate_array Matched cells for gate array cells. Only valid in post mask eco mode.\n\ncell Cell to size. Only single cell is supported.\n\nDescription\nThis command will show the master candidates that can be sized for specified cell.\n\nIt will report errors when following happens.\n\n--More than one specified cell is given.\n\n--The given cell is not exist in specified design.\n\nExamples\nThe following example will list the master candidates that U318 can be sized using function matched\nmethod in design cpu, and include dont_use cells.\n\n% list_size_cell_candidates -design {cpu} {U318} -by_function -dont_use\n      \n\n242"
            },
            {
                "doc_id": "_xtop_handbook_0200",
                "summary": "This is a description of the 'load_native_eco_files' command in XTop tool. It includes options such as file_names and -quiet. The command loads native format eco files without updating timing and handles conflicts and legalization failures according to certain parameters. Examples of how to use the command are also provided.",
                "content": "Commands\n\nName\nload_native_eco_files --Load native format eco files in timing irrelevant mode.\n\nSynopsis\nload_native_eco_files file_names [-quiet]\n\nflag quiet\n\nstring_list file_names\n\nArguments\n-quiet Do not output any message when dropping actions.\n\nfile_names Files to load.\n\nDescription\nThis command loads native format eco files without updating timing. It will report a message if eco action\nis in conflict with a previous action and drop the current eco action. If legalization fails, the eco action will\nbe dropped or just leave the cells overlapping. The legalization fail treatment is controlled by parameter\nplacement_legalization_obligated.\n\nExamples\nThe following example shows how to load eco files:\n\n% load_native_eco_files { native_netlist_regs0.txt native_netlist_regs1.txt }\n      \n\nThe following example shows how to load eco files without printing detail messages for dropped actions:\n\n% load_native_eco_files native_netlist_regs.txt -quiet\n      \n\n243"
            },
            {
                "doc_id": "_xtop_handbook_0201",
                "summary": "This is a description of the \"move_cell\" command in XTop, which moves specified cell instances to new positions. The command has options such as \"-design\" to specify the design for the action, \"-to\" to move the cell origin to a specified position, and \"-delta\" to move the cell list with a specified delta x and y. It also checks if the instances can be moved and reports errors under certain conditions.",
                "content": "Commands\n\nName\nmove_cell --Move specified cell instances to new positions.\n\nSynopsis\nmove_cell [-design design_name] { -to to_coord | -delta delta_x_y } cell_list\n\npointf delta\n\nstring design\n\npointf to\n\ncollection cell_list\n\nArguments\n-delta delta_x_y Move cell list with specified delta x and y.\n\n-design design_name Design for this action.\n\n-to to_coord Move cell origin to this position.\n\ncell_list Cells to move.\n\nDescription\nThis command moves specified cell instances to new positions. It will first check if the instances can be\nmoved.\n\nIf the placement legalization is on, it will try to find a legal place around the position specified.\nIf failed, by default, these cells will be put just at the specified positions, and it will go on\nupdating timing. If the placement legalization is an obligation, you can just turn the parameter\nplacement_legalization_obligated(1) on. Thus if any cell failed to legalize, it will report an error and revert\nback.\n\nFor following situations, it will report errors.\n\n--Any of the library cells of the specified instances is not available.\n\n--Any of the timing library cells of specified instances is not complete for all corners.\n\n--Any of the specified instances is locked in placement.\n\n--Any of the specified instances is connected to a multi-driven net.\n\nExamples\nThe following example shows how to move cell by using '-delta' option:\n\n% move_cell -design {cpu} \\\n            -delta {(+38.026, +24.549)} {dram_t2/mem_reg_13__0_}\n\nThe following example shows how to move cell by using coordinates:\n\n% move_cell -design {cpu} \\\n            -to {(338.337,179.483)} {dram_t2/mem_reg_13__0_}"
            },
            {
                "doc_id": "_xtop_handbook_0202",
                "summary": "The document provides information about the 'reconnect_pin' command in XTop tool. This command reconnects a pin to a specified net in a design. The command has options for specifying the design, pin, and net. It also outlines certain error conditions, such as the pin not being an input pin of a cell, the pin or net not being used as a clock, and issues with the path from the pin to the net. An example usage of the command is also provided.",
                "content": "Commands\n\nName\nreconnect_pin --Reconnect pin to specified net.\n\nSynopsis\nreconnect_pin [-design design_name] pin net\n\nstring design\n\ncollection pin\n\ncollection net\n\nArguments\n-design design_name Design for this action.\n\npin Pin to reconnect.\n\nnet Net for pin to reconnect.\n\nDescription\nThis command reconnect pin to the specified net.\n\nFor following situations, it will report errors.\n\n--The specified pin is not an input pin of cell.\n\n--The specified pin is not used as clock pin.\n\n--The specified net is not used as clock net.\n\n--There is no path from the specified pin and net.\n\n--Any of the cells on the path from pin to net is not a buffer or inverter.\n\n--Any of the nets on the path from pin to net has more than one source.\n\n--There are odd inverters on the path from pin to net.\n\nExamples\nThe following example means that pin U1/C1/I reconnect to net n253.\n\n% reconnect_pin -design {cpu} {U1/C1/I} {n253}\n      \n\n246"
            },
            {
                "doc_id": "_xtop_handbook_0203",
                "summary": "This is a description of the \"remove_buffer\" command in XTop tool. The command is used to remove a specified buffer list from a design. It includes options such as \"-design design_name\" and \"cell_list\". The document also outlines various error conditions that may occur during the execution of the command.",
                "content": "Commands\n\nName\nremove_buffer --Remove specified buffer list.\n\nSynopsis\nremove_buffer [-design design_name] cell_list\n\nstring design\n\ncollection cell_list\n\nArguments\n-design design_name Design for this action.\n\ncell_list Buffer or inverter list to remove.\n\nDescription\nThis command removes the specified buffer list from design.\n\nFor following situations, it will report errors.\n\n--Specified cells are not in same module hierarchy.\n\n--Any of the cells is not a buffer or inverter.\n\n--The inverters are not cascaded in pairs.\n\n--The specified cells are not cascaded.\n\n--The internal net has more than one source or sink.\n\n--Both input and output net have equivalent nets assigned or term attached.\n\n--It will introduce a pass through net if the buffers removed.\n\n--The timing library cell are not complete for the cell(s) to remove.\n\nExamples\nThe following example removes 2 buffers from design cpu:\n\n% remove_buffer -design {cpu} \\\n  {dram_t2/ice2_cell_8 dram_t2/ice2_cell_7 dram_t2/ice2_cell_6}\n      \n\n247"
            },
            {
                "doc_id": "_xtop_handbook_0204",
                "summary": "This is a description of the 'report_cell_classification' command in XTop. It includes three flags: '-by_attribute', '-by_sizing_pattern', and '-by_swap_keywords', which allow library cells to be classified by attribute, sizing pattern, or swap keywords respectively. The command is used to report library cell classification and can affect optimization processes.",
                "content": "Commands\n\nName\nreport_cell_classification --Report library cell classification.\n\nSynopsis\nreport_cell_classification [ -by_attribute | -by_swap_keywords | -by_sizing_pattern ]\n\nflag by_attribute\n\nflag by_sizing_pattern\n\nflag by_swap_keywords\n\nArguments\n-by_attribute Cell classified by attribute defined by eco_cell_match_attribute.\n\n-by_sizing_pattern Cell classified by eco_cell_nominal_sizing_pattern.\n\n-by_swap_keywords Cell classified by eco_cell_nominal_swap_keywords.\n\nDescription\nThis command reports library cell classification. Library cells can be grouped by defined attribute, or\nswap keywords, or sizing pattern. Only matched cells within same group can be swapped or sized during\noptimization.\n\nPlease note, eco_buffer_group setting could affect the classification result.\n\nExamples\nThe following example displays a report of the cell classification by attribute.\n\n% report_cell_classification -by_attribute\nClassify by: footprint\nan2d1 : 8\n  AN2D0BX2T  AN2D1BX4T ...\ninvd1 : 16\n...\n\n% set_parameter eco_cell_match_attribute {pin_function}\n% report_cell_classification -by_attribute\nClassify by: pin_function\nA1=;A2=;A3=;A4=;Z=(((A1 A2) A3) A4); : 6\n  AN4D0X12T  AN4D1X12T  AN4D2X12T  AN4D4X12T  AN4D8X12T  AN4XD1X12T\n...\n      \n\nThe following example displays a report of the cell classification by sizing pattern.\n\n% set_parameter eco_cell_nominal_sizing_pattern {X([0-9]+)T}\n\n% report_cell_classification -by_sizing_pattern\nPattern: 'X([0-9]+)T'\nAN2DX12T: 5\n  AN2D8X12T  AN2D4X12T  AN2D2X12T  AN2D1X12T  AN2D0X12T\nAN3DX12T: 5\n  AN3D8X12T  AN3D4X12T  AN3D2X12T  AN3D1X12T  AN3D0X12T\n...\n      \nThe following example displays a report of the cell classification by swap keywords.\n\n% set_parameter eco_cell_nominal_swap_keywords {LVT HVT}\n% report_cell_classification -by_swap_keywords\nKeywords: 'LVT'  'HVT'\nADDFX1: 2\n  ADDFX1LVT  ADDFX1HVT\n...\n      \n\nSee Also\neco_cell_match_attribute(1) eco_cell_nominal_swap_keywords(1) eco_cell_nominal_sizing_pattern(1)\neco_buffer_group(1) report_matched_cells(1)"
            },
            {
                "doc_id": "_xtop_handbook_0205",
                "summary": "This is a description of the \"report_eco_actions\" command in XTop tool. It reports eco actions of a specified range and types. The command has options like \"-last_n count\" to report the last n eco actions, \"-sort_by sort_type\" to sort the results, \"-top_n count\" to report top n actions, and \"-types type_list\" to specify the ECO action types to report. An example is provided to illustrate its usage.",
                "content": "Commands\n\nName\nreport_eco_actions --Report eco actions of the specified range and types.\n\nSynopsis\nreport_eco_actions [-last_n count] [-types type_list] [-top_n count] [-sort_by\nsort_type]\n\nint last_n\n\nenum sort_by in \"count area\"\n\nint top_n in \"[0,inf)\"\n\nenum_list types in \"move_cell size_cell exchange_cell insert_buffer remove_buffer insert_dummy_cell\nreconnect_pin insert_buffer_chain split_load split_net\"\n\nArguments\n-last_n count Report in the last n eco actions, a number less than 1 means all.\n\n-sort_by sort_type The sort factor, can be increased cell count, or area, default is area.\n\n-top_n count Top n in descending order of specified sort type.\n\n-types type_list ECO action types to report, empty means all, default is all.\n\nDescription\nThis command reports eco actions of the specified range and types. While top_n is specified, it will report\nthe top n actions in the specified action list in the descending order of the specified sorting type.\n\nExamples\nThe following example reports the last 10 size_cell actions and sort the top 5 actions by area.\n\n% report_eco_actions -last_n 10 -types size_cell \\\n                     -top_n 7 -sort_by area\nsize cell\ndesign    : cpu\ncell name : regs/dram1/C3/U454\noriginal  : INVD1BTH\ncurrent   : INVD8BTH\n\nsize cell\ndesign    : cpu\ncell name : regs/dram1/U149/add_buf_2\noriginal  : BUFFD0BTH\ncurrent   : BUFFD6BTH\n..."
            },
            {
                "doc_id": "_xtop_handbook_0206",
                "summary": "The document provides information about the 'report_matched_cells' command in XTop tool. This command reports matched library cells for a specified cell, which can be grouped by attribute, swap keywords, or sizing pattern. The command has four arguments: '-by_attribute', '-by_sizing_pattern', '-by_swap_keywords', and 'cell_name'. The document also includes an example of how to use the command.",
                "content": "Commands\n\nName\nreport_matched_cells --Report matched library cells for the specified cell.\n\nSynopsis\nreport_matched_cells [ -by_attribute | -by_swap_keywords | -by_sizing_pattern ] cell_name\n\nflag by_attribute\n\nflag by_sizing_pattern\n\nflag by_swap_keywords\n\nstring cell_name\n\nArguments\n-by_attribute Cell classified by attribute defined by eco_cell_match_attribute.\n\n-by_sizing_pattern Cell classified by eco_cell_nominal_sizing_pattern.\n\n-by_swap_keywords Cell classified by eco_cell_nominal_swap_keywords.\n\ncell_name Cell name to get matched cells.\n\nDescription\nThis command reports matched library cells for the specified cell. Library cells can be grouped by defined\nattribute, or swap keywords, or sizing pattern. Only matched cells within same group can be swapped or\nsized during optimization.\n\nPlease note, eco_buffer_group setting could affect the classification result.\n\nExamples\nThe following example reports the library cells in the same group of specified cell by attribute.\n\n% report_matched_cells -by_attribute IOA21X4THVT\nMatched cells (self included): 8\n  IOA21X0T\n  IOA21X0THVT\n  IOA21X1T\n  IOA21X1THVT\n  IOA21X2T\n  IOA21X2THVT\n  IOA21X4T\n  IOA21X4THVT\n      \n\nSee Also\neco_cell_match_attribute(1) eco_cell_nominal_swap_keywords(1) eco_cell_nominal_sizing_pattern(1)\neco_buffer_group(1) report_cell_classification(1)\n\n251"
            },
            {
                "doc_id": "_xtop_handbook_0207",
                "summary": "The document provides information about the 'size_cell' command in XTop tool. This command is used to size specified cell instances to a specified cell. It includes options such as '-design', '-location', 'cell_list', and 'lib_cell'. The command checks if the instances can be changed and if the master is legal. It also handles placement legalization and reports errors under certain conditions.",
                "content": "Commands\n\nName\nsize_cell --Size specified cell instances to the specified cell.\n\nSynopsis\nsize_cell [-design design_name] [-location coord...] cell_list lib_cell\n\nstring design\n\npointf location\n\ncollection cell_list\n\ncollection lib_cell\n\nArguments\n-design design_name Design for this action.\n\n-location... coord Location for the cell.\n\ncell_list Cells to size.\n\nlib_cell Library cell to size to.\n\nDescription\nThis command sizes the specified instances to the specified cell. It will first check if the specified instances\ncan be changed, and the specified master is legal.\n\nIf the placement legalization is on, it will try to find a correct place for the changed cell in the\nlegalization margin. If failed, by default, these cells will be put just at the specified positions, and it will\ngo on updating timing. If the placement legalization is an obligation, you can just turn the parameter\nplacement_legalization_obligated(1) on. Thus if any cell failed to legalize, it will report an error and revert\nback.\n\nFor following situations, it will report errors.\n\n--Any of the library cells of the specified instances is not available.\n\n--Any of the timing library cells of specified instances is not complete for all corners.\n\n--The library for the specified cell is not available.\n\n--The timing library for the specified cell is not complete for all corners.\n\n--Any of the specified instances is not unique in Verilog.\n\n--Any of the specified instances is locked in placement.\n\n--Any of the specified instances is connected to a multi-driven net.\n\n--Function of the specified lib cell mismatches with original.\n\n252"
            },
            {
                "doc_id": "_xtop_handbook_0208",
                "summary": "",
                "content": "Commands\n\nExamples\nThe following example size regs/dram1/U181/add_buf_4 to BUFFD12BTH, with user specified location.\n\n% size_cell -design {cpu} -location {(20.772, 179.597)} \\\n            {regs/dram1/U181/add_buf_4} {BUFFD12BTH}\n      \n\n253"
            },
            {
                "doc_id": "_xtop_handbook_0209",
                "summary": "This is a description of the 'split_load' command in XTop tool. It includes options such as '-design', '-inverter_pair', '-lib_cell', '-locations', '-new_cell_names', '-new_net_names', and '-pin_group'. The command is used to split net into specified groups and handle various situations related to placement legalization, library cell, timing library cell, buffer or inverter, pins, and net drivers.",
                "content": "Commands\n\nName\nsplit_load --Split loads of net into specified groups.\n\nSynopsis\nsplit_load [-design design_name] [-inverter_pair] [-new_cell_names names...] [-new_net_names\nnames...] [-locations coord...] -pin_group pin_list... -lib_cell cell_name\n\nstring design\n\nflag inverter_pair\n\ncollection lib_cell\n\npointf_list locations\n\nstring_list new_cell_names\n\nstring_list new_net_names\n\ncollection pin_group\n\nArguments\n-design design_name Design for this action.\n\n-inverter_pair The specified cell to insert is inverter, and will be inserted in pair.\n\n-lib_cell cell_name Lib cell for the buffer.\n\n-locations... coord Original location for the newly inserted buffer, and should be in\npairs for inverters.\n\n-new_cell_names... names Cell name for the newly inserted buffer, and should be in pairs for\ninverters.\n\n-new_net_names... names Net name for the newly inserted buffer, and should be in pairs for\ninverters.\n\n-pin_group... pin_list One group of pins to buffer.\n\nDescription\nThis command split net into specified groups.\n\nIf the placement legalization is on, it will try to find correct places for each newly created buffer or inverter\npair in legalization margin. If failed, by default, these cells will be put just at the specified positions, and it\nwill go on updating timing. If the placement legalization is an obligation, you can just turn the parameter\nplacement_legalization_obligated(1) on. Thus if any cell failed to legalize, it will report an error and revert\nback.\n\nFor following situations, it will report errors.\n\n--The library cell does not exist.\n\n--The timing library cell is not complete for all corners.\n\n--Specified is not a buffer or inverter.\n\n--The specified pins are not on the same net.\n\n--The net has no driver or more than one driver.\n\n--The net has equivalent net.\n\nExamples\nThe following example splits 3 loads into two pin_groups with user specified locations.\n\n% split_load -design {top} -lib_cell {BUFD8BTH} \\\n             -pin_group {U1/instA/I U1/instB/I} \\\n             -locations {(882.602, 3183.335)}   \\\n             -pin_group {U0/instC/I}            \\\n             -locations {(1140.736, 3165.997)}"
            },
            {
                "doc_id": "_xtop_handbook_0210",
                "summary": "The document provides detailed information about the 'split_net' command in XTop tool. This command is used to split a net into several segments based on a specified rule. The command has several arguments including design name, lib cell, split rule, scenario, segment, and net. It is an efficient method to fix transition violations for long nets, especially those without branches or with very few short branches. The command splits the net by wire length or capacitance with a specified buffer or inverter.",
                "content": "Commands\n\nName\nsplit_net --Split net into several segments by specified rule.\n\nSynopsis\nsplit_net [-design design_name] [-scenario scenario_name] net -lib_cell cell_name -rule\nsplit_rule -segment split_segment_count\n\nstring design\n\ncollection lib_cell\n\nenum rule in \"wire_length cap\"\n\nstring scenario\n\nint segment in \"[2,inf)\"\n\ncollection net\n\nArguments\n-design design_name Design for this action.\n\n-lib_cell cell_name Lib cell for the buffer.\n\n-rule split_rule Split rule: wire_length, cap.\n\n-scenario scenario_name Scenario for calculating capacitance.\n\n-segment split_segment_count Split the specified net into n segments.\n\nnet Net to split.\n\nDescription\nSplit net is an efficient method to fix transition violations for long nets, especially for long nets which do\nnot have branches or have very few short branches.\n\nThis command split net into several segments by wire length or capacitance with specified buffer or\ninverter. For each segment, the wire length or total capacitance should be the same. However, for nets\nwhich have many branches, due to the tree structure of net, the segment length or capacitance may be less\nthan the average value, and the segment count may be more than the specified count. Also, if inverter is\nused to split net, extra inverters may be inserted to keep the correct polarity.\n\nIf the placement legalization is on, it will try to find correct places for each newly created buffer or inverter\nin legalization margin. If failed, by default, these cells will be put just at the specified positions, and it\nwill go on updating timing. If the placement legalization is an obligation, you can just turn the parameter\nplacement_legalization_obligated(1) on. Thus if any cell failed to legalize, it will report an error and revert\nback.\n\nFor following situations, it will report errors.\n\n--The library cell does not exist.\n\n--The timing library cell is not complete for all corners.\n\n--Specified is not a buffer or inverter.\n\n--The net has no driver or more than one driver.\n\n--The net has equivalent net.\n\n--The net has no complete route.\n\n--The net has been touched by previous eco actions.\n\nExamples\nThe following example uses the buffer to split one net into 3 segments by wire length.\n\n% split_net -design {cpu} -lib_cell {BUFFX4} -segment 3 \\\n            -rule wire_length {sub/C32/n246}\n      \n\nThe following example uses the buffer to split one net into 5 segments by capacitance.\n\n% split_net -design {cpu} -lib_cell {BUFFX6} -segment 5 \\\n            -rule cap -scenario func_fast {n42}\n    \n\n257"
            },
            {
                "doc_id": "_xtop_handbook_0211",
                "summary": "The document provides a detailed explanation of the 'summarize_capacitance_violations' command in XTop tool. This command is used to summarize the information of capacitance violations in a design. It includes various flags such as '-as_reference', '-clock', '-data_path', '-exclude_dont_touch', '-io_only', '-r2r_only', '-with_delta', '-with_distribution', '-with_fail_reason', '-with_reference', and 'with_top_n'. The command outputs the violation count, worst slack, and total negative slack. It also provides examples of how to use the command in different scenarios.",
                "content": "Commands\n\nName\nsummarize_capacitance_violations --Summarize the information of capacitance violations in design.\n\nSynopsis\nsummarize_capacitance_violations [-as_reference] [-with_delta] [-with_reference] [-clock]\n[-data_path] [ -r2r_only | -io_only ] [-exclude_dont_touch] [-with_distribution] [ -with_top_n count [-\nwith_fail_reason]] [pin_list]\n\nflag as_reference\n\nflag clock\n\nflag data_path\n\nflag exclude_dont_touch\n\nflag io_only\n\nflag r2r_only\n\nflag with_delta\n\nflag with_distribution\n\nflag with_fail_reason\n\nflag with_reference\n\nint with_top_n in \"[1,inf)\"\n\ncollection pin_list\n\nArguments\n-as_reference Set current summary as a reference for later summary.\n\n-clock Report violations on clock network.\n\n-data_path Report violations on data path.\n\n-exclude_dont_touch Do not take those pins marked as dont touch into account.\n\n-io_only Only summarize those endpoints on io paths.\n\n-r2r_only Only summarize those endpoints on r2r paths.\n\n-with_delta Report delta to the reference if possible.\n\n-with_distribution Print a slack distribution histogram.\n\n-with_fail_reason Report fail reason on each top n pin.\n\n-with_reference Report the reference in the same table if exists.\n\n-with_top_n count Also report the top n worst endpoints.\n\npin_list Pins to summarize.\n\nDescription\nThis command summarizes the information of capacitance violations in design. It will output the violation\ncount, worst slack, and total negative slack.\n\nThe option -clock and -data_path represent the capacitance violations on clock network and data path\nrespectively. If none of them is specified, it acts as both of them are specified.\n\nWhile the option -with_delta or -with_reference is on, it will try to find the matched reference record,\nand report the difference according to the reference value of it. While option -as_reference is on, current\nsummary will be set as reference.\n\nBy default, all pins are taken into account in the summary. Also you can summarize the violations related\nto io or internal r2r paths respectively by specifying option -io_only or -r2r_only. However, the criterion\nto identify whether a pin is on io or internal path is not well defined, and XTop just follows the timing\ndata dumped from STA tools.\n\nOnce -with_top_n is specified, it will display the information of top n violated pins. If a corresponding\nautomatic fix flow has been applied, fail reasons can also be displayed for each top n pin with option -\nwith_fail_reason.\n\nWhile option -exclude_dont_touch is specified, those endpoints that already marked as dont touch will be\nignored in the summary. Notice that it only takes the dont touch attribute on pin, and does NOT care about\ncells and nets. If any doubt on this, please use command is_dont_touch(1) to verify.\n\nWhile pins are specified, it will only summarize the pins in the pin list.\n\nExamples\nThe following example summarizes the information of capacitance violations and set current summary as\na reference for later summary:\n\n% summarize_capacitance_violations -as_reference\n### capacitance summary ###\nScenario        Count     Worst       TNS\n------------------------------------------\ntotal             135    -1.217    -7.737\n  func_best       122    -1.217    -7.519\n  func_worst      127    -1.080    -7.402\n      \n\nThe following example summarizes the information of capacitance violations on clock network:\n\n% summarize_capacitance_violations -clock\n      \n\nThe following example summarizes the information of capacitance violations on data path:\n\n% summarize_capacitance_violations -data_path\n\nThe following example summarizes the information of capacitance violations and reports the top 5 worst\nendpoints:\n\n% summarize_capacitance_violations -with_top_n 5\n### capacitance summary ###\nScenario        Count     Worst       TNS\n------------------------------------------\ntotal             135    -1.217    -7.737\n  func_best       122    -1.217    -7.519\n  func_worst      127    -1.080    -7.402\n### capacitance top 5 endpoints ###\n Slack    Scenario     Value    Constraint    Name\n--------------------------------------------------------------\n-1.217    func_best    2.311         0.095    U316/Z\n-0.786    func_best    1.965         0.190    U395/Z\n-0.568    func_best    0.215         0.047    clk_gen_u0/U4/Z\n-0.439    func_best    0.329         0.190    U325/ZN\n-0.122    func_best    0.168         0.046    regs/U9/ZN\n      \n\nThe following example summarizes the information of capacitance violations on data path with reference\nand delta value:\n\n% summarize_capacitance_violations -with_reference -with_delta \\\n                                   -data_path\n### capacitance summary ###\nScenario  Count Count0 D_Count    Worst  Worst0  D_Worst   TNS  ...\n-------------------------------------------------------------\ntotal         1   131  -130     | -0.005 -0.139  +0.134  | -0.005 ...\n  func_best   1   118  -117     | -0.002 -0.139  +0.138  | -0.002 ...\n  func_worst  1   123  -122     | -0.005 -0.135  +0.130  | -0.005 ..."
            },
            {
                "doc_id": "_xtop_handbook_0212",
                "summary": "This is a description of the 'summarize_design_area' command in XTop tool. It summarizes cell area information of a design, including cell count, area, and density. The command has options such as '-as_reference', '-recursive', '-with_delta', and '-with_reference' to set current summary as a reference, report from top design, report delta to the reference, and report the reference in the same table respectively.",
                "content": "Commands\n\nName\nsummarize_design_area --Summarize cell area information of design.\n\nSynopsis\nsummarize_design_area [-as_reference] [-with_delta] [-with_reference] [-recursive]\n\nflag as_reference\n\nflag recursive\n\nflag with_delta\n\nflag with_reference\n\nArguments\n-as_reference Set current summary as a reference for later summary.\n\n-recursive Report from top design as if all sub designs are flattened.\n\n-with_delta Report delta to the reference if possible.\n\n-with_reference Report the reference in the same table if exists.\n\nDescription\nThis command summarizes cell area information of design. It will output the cell count, area, and density\nof design.\n\nWhile the option -with_delta or -with_reference is on, it will try to find the matched reference record,\nand report the difference according to the reference value of it. While option -as_reference is on, current\nsummary will be set as reference.\n\nExamples\nThe following example summarizes the information of design area and set current summary as a reference\nfor later summary:\n\n% summarize_design_area -as_reference\n### design: SUB_MODULE ###\nCount        Area    Density\n-----------------------------\n  378    6036.000    46.995%\n### design: TOP_MODULE ###\nCount         Area    Density\n------------------------------\n 1270    39023.360    46.529%\n      \n\nThe following example summarizes the information of design area including all sub designs of the top\ndesign:\n\n% summarize_design_area -recursive -as_reference \n### design: TOP ###\nCount         Area    Density\n------------------------------\n 2024    25407.360    30.294%\n      \n\nThe following example summarizes the information of design area with previous reference and delta value:\n\n% summarize_design_area -with_delta -with_reference \n### design: SUB_MODULE ###\nCount  Count0  D_Count   Area  Area0  D_Area        Density  Density0  D_Density\n--------------------------------------------------------------------------------\n210    378     -168    | 5011.00 6036.00 -1025.00 | 40.895% 46.995%  -6.100%\n### design: TOP_MODULE ###\nCount  Count0  D_Count   Area  Area0  D_Area       Density  Density0  D_Density\n-------------------------------------------------------------------------------\n1150   1270    -120    | 38978.24 39023.36 -45.12 | 46.476% 46.529%  -0.054%"
            },
            {
                "doc_id": "_xtop_handbook_0213",
                "summary": "The document provides information about the 'summarize_dynamic_power' command in XTop. This command summarizes dynamic power for specified modules or cells, and includes options such as '-as_reference', '-current_hier_only', '-hier_path_list', '-with_delta', '-with_reference', and '-with_top_n'. It also explains the arguments and usage of these options, and provides examples of how to use the command.",
                "content": "Commands\n\nName\nsummarize_dynamic_power --Summarize dynamic power for the specified modules or cells.\n\nSynopsis\nsummarize_dynamic_power [-as_reference] [-with_delta] [-with_reference] [-with_top_n count]\n[[ -hier_path_list str_list [-current_hier_only]] | cell_list ]\n\nflag as_reference\n\nflag current_hier_only\n\nstring_list hier_path_list\n\nflag with_delta\n\nflag with_reference\n\nint with_top_n in \"[1,10000)\"\n\ncollection cell_list\n\nArguments\n-as_reference Set current summary as a reference for later summary.\n\n-current_hier_only Only report dynamic power information of cells in current hierachy.\n\n-hier_path_list str_list Hier paths to summarize the dynamic power.\n\n-with_delta Report delta to the reference if possible.\n\n-with_reference Report also the reference if exists.\n\n-with_top_n count Report also the top n dynamic power cells.\n\ncell_list Cells to summarize the dynamic power.\n\nDescription\nThis command summarizes dynamic power for the specified modules or cells. It will print the cell count,\ndynamic power (including internal power and switching power).\n\nIf the option -with_delta or -with_reference is specified, it will try to find the matched reference record,\nand report the difference according to the reference value. If the option -as reference is specified, current\nsummary will be set as reference.\n\nPlease note cell_list and -hier_path_list are mutual exclusive options. If cell_list is specified, it will\nsummarize cells in list. If -hier_path_list is specified, it will summarize modules in list. If both cell_list\nand -hier_path list are not specified, statistics of the whole design will be printed. If -cur_hier is given,\nonly cells in this module level will be taken into account.\n\nIf -with_top_n is specified, it will also print the information of top n dynamic power cells. There will be\nan upper bound 10000 for top n to avoid large size of report.\n\nExamples\nThe following example summarizes dynamic power for cells within the hier path list \"A1\", \"A1/B3\", \"A1/\nB3/C2\".\n\n%summarize_dynamic_power -hier_path_list {A1 A1/B3 A1/B3/C2}\n### hier_path: A1 ###\nCellType           Count     Internal    Switching    DynamicPower\n------------------------------------------------------------------\ntotal                  8    4273.5104     705.9671       4979.4775\n  Sequential           1    3670.2777     101.9856       3772.2633\n  Combinational        7     603.2327     603.9815       1207.2142\n### hier_path: A1/B3 ###\nCellType           Count     Internal    Switching    DynamicPower\n------------------------------------------------------------------\ntotal                  8    4275.0508     336.1108       4611.1616\n  Sequential           1    3679.2404      76.0571       3755.2975\n  Combinational        7     595.8104     260.0537        855.8641\n### hier_path: A1/B3/C2 ###\nCellType           Count      Internal    Switching   DynamicPower\n------------------------------------------------------------------\ntotal                 10    11584.1675     315.0414     11899.2090\n  Sequential           3    10988.6548      77.2479     11065.9026\n  Combinational        7      595.5127     237.7936       833.3063\n      \n\nThe following example summarizes dynamic power for the whole design and set it as reference summary.\nAdditionally, it will print top 3 dynamic power cells.\n\n%summarize_dynamic_power -as_reference -with_top_n 3\n### design: fibre_ctrl ###\nCellType             Count      Internal     Switching    DynamicPower\n----------------------------------------------------------------------\ntotal              1503397    7.1552e+05    3.3095e+05    1.0465e+06\n  Sequential        254131    5.3892e+05    36583.6776    5.7551e+05\n  Combinational    1249266    1.7660e+05    2.9436e+05    4.7096e+05\n### top 3 cells ###\nPower       Internal    Switching    Name                                         \n--------------------------------------------\n419.5743    0.0000      419.5743     cell_A\n408.7838    0.0000      408.7838     cell_B\n408.7838    0.0000      408.7838     cell_C\n      \n\nThe follow example summarizes dynamic power after optimize_dynamic_power. Since -with_reference\nis specified, it will print both current and reference summary for convenience of comparison.\n\n%summarize_dynamic_power -with_reference\n### design: fibre_ctrl ###\nCellType             Count      Internal     Internal0      Switching  ...\n------------------------------------------------------------------------ ...\ntotal              1503397    7.0662e+05    7.0745e+05  |  3.2754e+05    ...\n  Sequential        254131    5.3922e+05    5.3918e+05  |  36012.4054    ...\n  Combinational    1249266    1.6740e+05    1.6828e+05  |  2.9153e+05    ..."
            },
            {
                "doc_id": "_xtop_handbook_0214",
                "summary": "The document provides information about the 'summarize_eco_actions' command in XTop tool. This command is used to summarize eco actions and their impact on designs. It reports all the inserted, sized, and removed cell count, corresponding delta area, and density. It has two arguments: '-last_n count' which summarizes the last n actions, and '-recursive' which reports from the top design as if all sub designs are flattened.",
                "content": "Commands\n\nName\nsummarize_eco_actions --Summarize eco actions and impact on designs.\n\nSynopsis\nsummarize_eco_actions [-last_n count] [-recursive]\n\nint last_n\n\nflag recursive\n\nArguments\n-last_n count The last n action to summarize, a number less than 1 means all.\n\n-recursive Report from top design as if all sub designs are flattened.\n\nDescription\nThis command summarizes eco actions and impact on designs. It will report all the inserted, sized, and\nremoved cell count, corresponding delta area, and density. For hierarchical design, it reports every design\nrespectively by default. While option -recursive is specified, it will report the changes from top design as\nif all sub designs are flattened.\n\nExamples\nThe following example can summarize the last 5 steps of eco actions.\n\n% summarize_eco_actions -last_n 5\n### design: cpu ###\nName                  Count     D_Area    Density    D_Density\n---------------------------------------------------------------\ntotal                     -    +11.040    64.254%      +0.010%\n  inserted                2    +12.960          -      +0.012%\n    CKBUFD0BTH            1     +1.920          -      +0.002%\n    BUFFD12BTH            1    +11.040          -      +0.010%\n  sized                   2     +0.000          -      +0.000%\n  removed                -1     -1.920          -      -0.002%\n    CKBUFD1BTH           -1     -1.920          -      -0.002%\n      \n\n266"
            },
            {
                "doc_id": "_xtop_handbook_0215",
                "summary": "The document provides a detailed explanation of the 'summarize_fanout_violations' command in XTop tool. This command is used to summarize the information of fanout violations in a design. It includes various flags and arguments such as 'as_reference', 'clock', 'data_path', 'exclude_dont_touch', 'io_only', 'max_fanout', 'r2r_only', 'with_delta', 'with_distribution', 'with_fail_reason', 'with_reference', 'with_top_n', and 'pin_list'. The document also provides examples of how to use this command.",
                "content": "Commands\n\nName\nsummarize_fanout_violations --Summarize the information of fanout violations in design.\n\nSynopsis\nsummarize_fanout_violations [-max_fanout val] [-as_reference] [-with_delta] [-\nwith_reference] [-clock] [-data_path] [ -r2r_only | -io_only ] [-exclude_dont_touch] [-with_distribution]\n[ -with_top_n count [-with_fail_reason]] [pin_list]\n\nflag as_reference\n\nflag clock\n\nflag data_path\n\nflag exclude_dont_touch\n\nflag io_only\n\nint max_fanout in \"[4,inf)\"\n\nflag r2r_only\n\nflag with_delta\n\nflag with_distribution\n\nflag with_fail_reason\n\nflag with_reference\n\nint with_top_n in \"[1,inf)\"\n\ncollection pin_list\n\nArguments\n-as_reference Set current summary as a reference for later summary.\n\n-clock Report violations on clock network.\n\n-data_path Report violations on data path.\n\n-exclude_dont_touch Do not take those pins marked as dont touch into account.\n\n-io_only Only summarize those endpoints on io paths.\n\n-max_fanout val Setting max fanout threshold, for slack calculation, use parameter\nmax_fanout if not specified.\n\n-r2r_only Only summarize those endpoints on r2r paths.\n\n-with_delta Report delta to the reference if possible.\n\n-with_distribution Print a slack distribution histogram.\n\n-with_fail_reason Report fail reason on each top n pin.\n\n-with_reference Report the reference in the same table if exists.\n\n-with_top_n count Also report the top n worst endpoints.\n\npin_list Pins to summarize.\n\nDescription\nThis command summarizes the information of fanout violations in design. It will output the violation\ncount, worst slack, and total negative slack, where slack is calculated by given max fanout threshold. If it\nis not set, value of parameter max_fanout(1) will be used.\n\nThe option -clock and -data_path represent fanout violations on clock network and data path respectively.\nIf none of them is specified, it acts as both of them are specified.\n\nWhile the option -with_delta or -with_reference is on, it will try to find the matched reference record,\nand report the difference according to the reference value of it. While option -as_reference is on, current\nsummary will be set as reference.\n\nBy default, all pins are taken into account in the summary. Also you can summarize the violations related\nto io or internal r2r paths respectively by specifying option -io_only or -r2r_only. However, the criterion\nto identify whether a pin is on io or internal path is not well defined, and XTop just follows the timing\ndata dumped from STA tools.\n\nOnce -with_top_n is specified, it will display the information of top n violated pins. If a corresponding\nautomatic fix flow has been applied, fail reasons can also be displayed for each top n pin with option -\nwith_fail_reason.\n\nWhile option -exclude_dont_touch is specified, those endpoints that already marked as dont touch will be\nignored in the summary. Notice that it only takes the dont touch attribute on pin, and does NOT care about\ncells and nets. If any doubt on this, please use command is_dont_touch(1) to verify.\n\nWhile pins are specified, it will only summarize the pins in the pin list.\n\nExamples\nThe following example summarizes the information of fanout violations on data path with default\nthreshold:\n\n% summarize_fanout_violations -data_path\n### fanout summary ###\nCount         Worst           TNS\n----------------------------------\n 1475    -64601.000    -1.432e+05\n      \n\nThe following example summarizes the information of fanout violations on both data and clock path and\nset current summary as a reference for later summary, with top 3 worst endpoints listed:\n\n% summarize_fanout_violations -as_reference -max_fanout 64 \\\n                              -with_top_n 3\n### fanout summary ###\nCount         Worst           TNS\n----------------------------------\n  579    -64569.000    -1.476e+05\n### fanout top 3 endpoints ###\n     Slack        Value    Constraint    Name\n-----------------------------------------------------\n-64569.000    64633.000        64.000    UX_SCAN_EN\n-10631.000    10695.000        64.000    SPRSTB\n -5615.000     5679.000        64.000    ECLK\n      \n\nThe following example summarizes the information of fanout violations with previous reference, where\nthe new threshold is set to 128:\n\n% summarize_fanout_violations -with_reference -max_fanout 128\n### fanout summary ###\nCount  Count0         Worst       Worst0         TNS          TNS0\n------------------------------------------------------------------\n  198     579    -64505.000   -64569.000  -1.260e+05    -1.476e+05"
            },
            {
                "doc_id": "_xtop_handbook_0216",
                "summary": "The document provides a detailed explanation of the 'summarize_gba_violations' command in XTop tool. This command is used to summarize the timing violations of global based analysis. It includes various flags such as '-as_reference', '-exclude_dont_touch', '-exclude_path', '-hold', '-io_only', '-r2r_only', '-setup', '-with_delta', '-with_distribution', '-with_fail_reason', '-with_reference', and 'with_top_n'. The command also takes a collection 'pin_list' as an argument.",
                "content": "Commands\n\nName\nsummarize_gba_violations --Summarize the timing violations of global based analysis.\n\nSynopsis\nsummarize_gba_violations [-with_delta] [-with_reference] [-as_reference] [-exclude_path]\n[ -r2r_only | -io_only ] [-with_distribution] [-exclude_dont_touch] [ -with_top_n count [-\nwith_fail_reason]] { -setup | -hold } [pin_list]\n\nflag as_reference\n\nflag exclude_dont_touch\n\nflag exclude_path\n\nflag hold\n\nflag io_only\n\nflag r2r_only\n\nflag setup\n\nflag with_delta\n\nflag with_distribution\n\nflag with_fail_reason\n\nflag with_reference\n\nint with_top_n in \"[1,inf)\"\n\ncollection pin_list\n\nArguments\n-as_reference Set current summary as a reference for later summary.\n\n-exclude_dont_touch Do not take those pins marked as dont touch into account.\n\n-exclude_path Do not take the slack of path into account.\n\n-hold Report the hold timing.\n\n-io_only Only summarize those endpoints on io paths.\n\n-r2r_only Only summarize those endpoints on r2r paths.\n\n-setup Report the setup timing.\n\n-with_delta Report delta to the reference if possible.\n\n-with_distribution Print a slack distribution histogram.\n\n-with_fail_reason Report statistical summary of fail reasons on critical paths to top n\nendpoints.\n-with_reference Report the reference in the same table if exists.\n\n-with_top_n count Also report the top n worst endpoints.\n\npin_list Pins to summarize.\n\nDescription\nThis command summarizes the timing violations of global based analysis. It will output the violation\ncount, worst slack, total negative slack. While there exists paths through one pin, the worst slack of paths\nis preferred unless option -exclude_path is specified.\n\nWhile the option -with_delta or -with_reference is on, it will try to find the matched reference record,\nand report the difference according to the reference value of it. While option -as_reference is on, current\nsummary will be set as reference.\n\nBy default, all endpoints are taken into account in the summary. Also you can summarize the violations\nrelated to io or internal r2r paths respectively by specifying option -io_only or -r2r_only. However, the\ncriterion to identify whether a pin is on io or internal path is not well defined, and XTop just follows the\ntiming data dumped from STA tools.\n\nWhile -with_top_n is specified, it will display the information of top n violated endpoints. If a\ncorresponding automatic fix flow has been applied, a statistical fail reason summary can also be displayed\nfor each top n endpoint with option -with_fail_reason. Once -with_path_detail is specified, the summary\nof path list will be reported in detail format as those on GUI, and the data path timing of each path will be\nreported also. In the detail format, there will be an upper bound 10000 for top n to avoid large size of report.\n\nWhile option -exclude_dont_touch is specified, those endpoints that already marked as dont touch will be\nignored in the summary. Notice that it only takes the dont touch attribute on pin, and does NOT care about\ncells and nets. If any doubt on this, please use command is_dont_touch(1) to verify.\n\nWhile pins are specified, it will only take the endpoints that is in the pin list into account.\n\nExamples\nThe following example summarizes the gba hold violations with the top 3 violated endpoints.\n\n% summarize_gba_violations -hold -with_top_n 3\n### hold summary ###\nScenario       Count     Worst         TNS\n-------------------------------------------\ntotal            793    -1.404    -208.730\n  func_fast      752    -1.302    -194.422\n  func_slow       61    -1.404     -19.081\n  test_fast      756    -0.707    -187.356\n  test_slow       40    -0.586      -9.860\n### hold top 3 endpoints ###\n Slack    Scenario     Name\n------------------------------------\n-1.404    func_slow    sram_1/D[10]\n-1.059    func_slow    sram_4/D[1]\n-1.042    func_slow    sram_4/D[3]"
            },
            {
                "doc_id": "_xtop_handbook_0217",
                "summary": "The document provides information about the 'summarize_glitch_violations' command in XTop tool. This command summarizes the information of noise glitch violations in a design, including violation count, noise slack, and total negative slack. It offers several flags for customization such as '-as_reference', '-clock', '-data_path', '-exclude_dont_touch', '-io_only', '-r2r_only', '-with_delta', '-with_distribution', '-with_fail_reason', '-with_reference', and 'with_top_n'. It also allows specifying a list of pins to summarize.",
                "content": "Commands\n\nName\nsummarize_glitch_violations --Summarize the information of noise glitch violations in design.\n\nSynopsis\nsummarize_glitch_violations [-as_reference] [-with_delta] [-with_reference] [-clock] [-\ndata_path] [ -r2r_only | -io_only ] [-exclude_dont_touch] [-with_distribution] [ -with_top_n count [-\nwith_fail_reason]] [pin_list]\n\nflag as_reference\n\nflag clock\n\nflag data_path\n\nflag exclude_dont_touch\n\nflag io_only\n\nflag r2r_only\n\nflag with_delta\n\nflag with_distribution\n\nflag with_fail_reason\n\nflag with_reference\n\nint with_top_n in \"[1,inf)\"\n\ncollection pin_list\n\nArguments\n-as_reference Set current summary as a reference for later summary.\n\n-clock Report violations on clock network.\n\n-data_path Report violations on data path.\n\n-exclude_dont_touch Do not take those pins marked as dont touch into account.\n\n-io_only Only summarize those endpoints on io paths.\n\n-r2r_only Only summarize those endpoints on r2r paths.\n\n-with_delta Report delta to the reference if possible.\n\n-with_distribution Print a slack distribution histogram.\n\n-with_fail_reason Report fail reason on each top n pin.\n\n-with_reference Report the reference in the same table if exists.\n\n-with_top_n count Also report the top n worst endpoints.\n\npin_list Pins to summarize.\n\nDescription\nThis command summarizes the information of noise glitch violations in design. It will output the violation\ncount, noise slack, and total negative slack, where slack is collected from STA tools.\n\nBy default, all pins are taken into account in the summary.\n\nOnce -with_top_n is specified, it will display the information of top n violated pins. If a corresponding\nautomatic fix flow has been applied, fail reasons can also be displayed for each top n pin with option -\nwith_fail_reason.\n\nWhile pins are specified, it will only summarize the pins in the pin list.\n\nExamples\nThe following example summarizes the information of noise glitch violations, and with top 6 worst\nendpoints listed\n\n% summarize_glitch_violations\n### noise slack summary ###\nScenario            Count      Worst           TNS\n---------------------------------------------------\ntotal              126136    -0.3436    -3864.9067\n  func_rcmin_ff         0     0.0000        0.0000\n  func_rcmin_ss    126136    -0.3436    -3864.9067\n          \n% summarize_glitch_violations -with_top_n 6\n### noise slack summary ###\nScenario            Count      Worst           TNS\n---------------------------------------------------\ntotal              126136    -0.3436    -3864.9067\n  func_rcmin_ff         0     0.0000        0.0000\n  func_rcmin_ss    126136    -0.3436    -3864.9067\n### noise slack top 6 endpoints ###\n  Slack    Scenario          Value    Constraint    Name                                                                                       \n------------------------------------------------------------\n-0.3436    func_rcmin_ss    0.4336        0.0900    U2213/A4                 \n-0.3327    func_rcmin_ss    0.4227        0.0900    U358/A1                     \n-0.3250    func_rcmin_ss    0.4150        0.0900    U902/A4                  \n-0.3186    func_rcmin_ss    0.4086        0.0900    U1326/B       \n-0.3138    func_rcmin_ss    0.4038        0.0900    U902/A3                  \n-0.3073    func_rcmin_ss    0.3973        0.0900    U22/A2"
            },
            {
                "doc_id": "_xtop_handbook_0218",
                "summary": "The document provides detailed information about the 'summarize_inst_displacement' command in XTop tool. This command is used to summarize instance displacement information after optimization. It has several flags including '-recursive', '-with_distribution', '-include_location', '-include_new_inst', and '-with_top_n count'. The command can output top N instances with respect to displacement, include original and current location of instances, and print a distance distribution histogram.",
                "content": "Commands\n\nName\nsummarize_inst_displacement --Summarize inst displacement information after optimization.\n\nSynopsis\nsummarize_inst_displacement [-recursive] [-with_distribution] [-include_location] [-\ninclude_new_inst] [inst_list] [-with_top_n count]\n\nflag include_location\n\nflag include_new_inst\n\nflag recursive\n\nflag with_distribution\n\nint with_top_n in \"[1,inf)\"\n\ncollection inst_list\n\nArguments\n-include_location In the report, in each row, include the original and current location of the\n\ninstance.\n\n-include_new_inst In the report, include newly-added instances' displacement information.\n\n-recursive Report from top design as if all sub designs are flattened.\n\n-with_distribution Print a distance distribution histogram.\n\n-with_top_n count Set to report top N instances.\n\ninst_list Instances Object to be honored.\n\nDescription\nThis command summarizes instances displacement information of design. It will output topN instances\nw.r.t. displacement. By default, it will report 3 items and report distance in micron and instance name at\neach row. Original and current location of the instances can be printed out by specifying -include_location.\nEspecially for newly added instances, the distance stands for the distance between the point which user\nselected and the point which the tool finally choose to add.\n\nExamples\nThe following example summarizes the information of instance displacement for all designs, list them out\nseparately, by default we list out top 3:\n\n% summarize_inst_displacement\n### design: regs ###\nTotal count: 151\nMax Cell Displacement(micron): 27.5804\nMin Cell Displacement(micron): 0.2\nAvg Cell Displacement(micron): 6.41332\nDistance(micron)    Name         \n----------------------------------\n27.5804             regs/dram1/C3/U471\n22.8954             regs/dram1/C3/U417\n22.8561             regs/dram1/C3/U415\n### design: cpu ###\nTotal count: 46\nMax Cell Displacement(micron): 5\nMin Cell Displacement(micron): 0.2\nAvg Cell Displacement(micron): 1.01748\nDistance(micron)    Name    \n-----------------------------\n5                   idec/U75\n4.80416             U317    \n2.2                 U414    \n      \n\nThe following example summarizes the information of instance displacement for user specified instances,\nlist them out separately, by default we list out top 3:\n\n% summarize_inst_displacement [get_cells -hierarchical U41*]\n### design: regs ###\nTotal count: 8\nMax Cell Displacement(micron): 22.8954\nMin Cell Displacement(micron): 5\nAvg Cell Displacement(micron): 15.8561\nDistance(micron)    Name              \n---------------------------------------\n22.8954             regs/dram1/C3/U417\n22.8561             regs/dram1/C3/U415\n22.1269             regs/dram1/C3/U418\n### design: cpu ###\nTotal count: 1\nMax Cell Displacement(micron): 2.2\nMin Cell Displacement(micron): 2.2\nAvg Cell Displacement(micron): 2.2\nDistance(micron)    Name\n-------------------------\n2.2                 U414\n      \n\nThe following example summarizes the information of instance displacement for all design, make them\nhierarchical instance names, put them altogether and list them out:\n\n% summarize_inst_displacement -recursive\n### design: cpu ###\nTotal count: 197\nMax Cell Displacement(micron): 27.5804\nMin Cell Displacement(micron): 0.2\nAvg Cell Displacement(micron): 5.15338\nDistance(micron)    Name              \n---------------------------------------\n27.5804             regs/dram1/C3/U471\n22.8954             regs/dram1/C3/U417\n22.8561             regs/dram1/C3/U415\n      \n\nThe following example summarizes the information of instance displacement for all design, list out its\ndistance, instance name, original location, current location. Also it summarize the distance distribution\nat the end:\n\n% summarize_inst_displacement -recursive -include_location -with_distribution\n### design: cpu ###\nTotal count: 197\nMax Cell Displacement(micron): 27.5804\nMin Cell Displacement(micron): 0.2\nAvg Cell Displacement(micron): 5.15338\nDistance(micron)    Name                  Original_location    Current_location\n--------------------------------------------------------------------------------\n27.5804             regs/dram1/C3/U471    (138, 72.6)          (118.2, 91.8)   \n22.8954             regs/dram1/C3/U417    (131, 67.8)          (113.2, 53.4)   \n22.8561             regs/dram1/C3/U415    (125.2, 67.8)        (112.8, 87)     \n\nDistance distribution\nRange                                                        Count        %\n----------------------------------------------------------------------------\n 0.00 ~  3.00    #####################...................      103    52.3%\n 3.00 ~  6.00    #######.................................       35    17.8%\n 6.00 ~  9.00    ###.....................................       13     6.6%\n 9.00 ~ 12.00    ####....................................       19     9.6%\n12.00 ~ 15.00    ##......................................        9     4.6%\n15.00 ~ 18.00    ##......................................        8     4.1%\n18.00 ~ 21.00    #.......................................        5     2.5%\n21.00 ~ 24.00    #.......................................        4     2.0%\n24.00 ~ 27.00    ........................................        0     0.0%\n27.00 ~ 30.00    ........................................        1     0.5%\n      \n\n276"
            },
            {
                "doc_id": "_xtop_handbook_0219",
                "summary": "The document provides information about the 'summarize_leakage_power' command in XTop. This command summarizes leakage power for specified keywords and outputs the cell count, leakage power, and corresponding ratio. It includes options such as '-as_reference', '-include_physical_only', '-keywords str_list', '-recursive', '-with_delta', and '-with_reference'. Each option has a specific function, for example, '-as_reference' sets the current summary as a reference for later summary, and '-include_physical_only' includes only physical cells in the statistics.",
                "content": "Commands\n\nName\nsummarize_leakage_power --Summarize leakage power for each keyword.\n\nSynopsis\nsummarize_leakage_power [-as_reference] [-with_delta] [-with_reference] [-\ninclude_physical_only] [-keywords str_list] [-recursive]\n\nflag as_reference\n\nflag include_physical_only\n\nstring_list keywords\n\nflag recursive\n\nflag with_delta\n\nflag with_reference\n\nArguments\n-as_reference Set current summary as a reference for later summary.\n\n-include_physical_only Include physical only cells in the statistics.\n\n-keywords str_list Keywords for classifying cells, use\neco_cell_nominal_swap_keywords if it is empty or not specified.\n\n-recursive Report from top design as if all sub designs are flattened.\n\n-with_delta Report delta to the reference if possible.\n\n-with_reference Report the reference in the same table if exists.\n\nDescription\nThis command summarizes leakage power for the specified keywords. It will output the cell count, leakage\npower, and corresponding ratio.\n\nWhile the option -with_delta or -with_reference is on, it will try to find the matched reference record,\nand report the difference according to the reference value of it. While option -as_reference is on, current\nsummary will be set as reference.\n\nBy default, physical only cells are not take into account in the statistics unless option -\ninclude_physical_only is specified.\n\nExamples\nThe following example summarizes leakage power for cells with the keywords \"ULVT\", \"LVT\", \"\",\n\"HVT\".\n\n% summarize_leakage_power -keywords {ULVT LVT \"\" HVT}\n\n### design: cpu ###\nKeyword       Count       Ratio    LeakagePower\n------------------------------------------------\ntotal       1503403           -         180.6204\n  ULVT            0     0.0000%           0.0000\n  LVT         40916     2.7216%          35.7948\n  HVT        151253    10.0607%           1.0282\n  others    1311234    87.2177%         143.7974"
            },
            {
                "doc_id": "_xtop_handbook_0220",
                "summary": "The document provides information about the 'summarize_path_violations' command in XTop tool. This command summarizes the violation information of specified paths, including violation count, worst slack, and total negative slack. It offers several flags such as '-with_delta', '-with_distribution', '-with_fail_reason', '-with_path_detail', '-with_path_group', '-with_reference', and '-as_reference'. It also allows users to specify the top n worst paths or endpoints with '-with_top_n' count.",
                "content": "Commands\n\nName\nsummarize_path_violations --Summarize the violation information of specified timing paths.\n\nSynopsis\nsummarize_path_violations [-with_path_group] [-with_reference] [-with_delta] [-as_reference]\n[-with_distribution] [ -with_top_n count [ -with_path_detail | -with_fail_reason ]] [path_list]\n\nflag as_reference\n\nflag with_delta\n\nflag with_distribution\n\nflag with_fail_reason\n\nflag with_path_detail\n\nflag with_path_group\n\nflag with_reference\n\nint with_top_n in \"[1,inf)\"\n\ncollection path_list\n\nArguments\n-as_reference Set current summary as a reference for later summary.\n\n-with_delta Report delta to the reference if possible.\n\n-with_distribution Print a slack distribution histogram.\n\n-with_fail_reason Report statistical summary of fail reasons on top n paths.\n\n-with_path_detail Report path list and timing of every path in detail.\n\n-with_path_group Report summary of path groups for each scenario.\n\n-with_reference Report the reference in the same table if exists.\n\n-with_top_n count Also report the top n worst paths or endpoints.\n\npath_list Path list to summarize.\n\nDescription\nThis command summarizes the violation information of specified paths. It will output the violation count,\nworst slack, total negative slack for all the paths and each scenario respectively. Those paths with slack\nless than the unreasonable slack value unreasonable_negative_slack(1), or the corresponding scenario and\ntiming type is set as skipped will be ignored.\n\nWhile the option -with_delta or -with_reference is on, it will try to find the matched reference record,\nand report the difference according to the reference value of it. While option -as_reference is on, current\nsummary will be set as reference.\n\nOnce -with_top_n is specified, it will display the information of top n violated paths and endpoints. If a\ncorresponding automatic fix flow has been applied, a statistical fail reason summary can also be displayed\nfor each top n path with option -with_fail_reason. The summary of endpoints will be disabled under fail\nreason mode.\n\nExamples\nThe following example takes the current result as reference:\n\n% summarize_path_violations -as_reference\n      \n\nAfter eco, you can get the delta value with the reference value.\n\n% summarize_path_violations -with_delta -with reference\n      \n\nThe following example shows the top 3 endpoints besides the summary.\n\n% summarize_path_violations -with_top_n 3\n      \n\n280"
            },
            {
                "doc_id": "_xtop_handbook_0221",
                "summary": "The document provides a detailed explanation of the 'summarize_si_violations' command in XTop tool. This command is used to summarize the information of SI violations in a design. It includes various flags and parameters such as 'as_reference', 'clock', 'data_path', 'exclude_dont_touch', 'io_only', 'max_si', 'r2r_only', 'with_delta', 'with_distribution', 'with_fail_reason', 'with_reference', 'with_top_n', and 'pin_list'. The document also provides examples of how to use this command.",
                "content": "Commands\n\nName\nsummarize_si_violations --Summarize the information of SI violations in design.\n\nSynopsis\nsummarize_si_violations [-max_si val] [-as_reference] [-with_delta] [-with_reference] [-clock]\n[-data_path] [ -r2r_only | -io_only ] [-exclude_dont_touch] [-with_distribution] [ -with_top_n count [-\nwith_fail_reason]] [pin_list]\n\nflag as_reference\n\nflag clock\n\nflag data_path\n\nflag exclude_dont_touch\n\nflag io_only\n\nfloat max_si in \"(0,inf)\"\n\nflag r2r_only\n\nflag with_delta\n\nflag with_distribution\n\nflag with_fail_reason\n\nflag with_reference\n\nint with_top_n in \"[1,inf)\"\n\ncollection pin_list\n\nArguments\n-as_reference Set current summary as a reference for later summary.\n\n-clock Report violations on clock network.\n\n-data_path Report violations on data path.\n\n-exclude_dont_touch Do not take those pins marked as dont touch into account.\n\n-io_only Only summarize those endpoints on io paths.\n\n-max_si val Max si allowed with unit ns, use parameter max_si if not specified.\n\n-r2r_only Only summarize those endpoints on r2r paths.\n\n-with_delta Report delta to the reference if possible.\n\n-with_distribution Print a slack distribution histogram.\n\n-with_fail_reason Report fail reason on each top n pin.\n\n-with_reference Report the reference in the same table if exists.\n\n-with_top_n count Also report the top n worst endpoints.\n\npin_list Pins to summarize.\n\nDescription\nThis command summarizes the information of SI violations in design. It will output the violation count,\nworst slack, and total negative slack, where slack is calculated by given max SI threshold. The parameter -\nmax_si specifies the limitation for delta delay caused by SI effect. The unit is ns, and parameter max_si(1)\nwill be used if this option is not specified.\n\nThe option -clock and -data_path represent the SI violations on clock network and data path respectively.\nIf none of them is specified, it acts as both of them are specified.\n\nWhile the option -with_delta or -with_reference is on, it will try to find the matched reference record,\nand report the difference according to the reference value of it. While option -as_reference is on, current\nsummary will be set as reference.\n\nBy default, all pins are taken into account in the summary. Also you can summarize the violations related\nto io or internal r2r paths respectively by specifying option -io_only or -r2r_only. However, the criterion\nto identify whether a pin is on io or internal path is not well defined, and XTop just follows the timing\ndata dumped from STA tools.\n\nOnce -with_top_n is specified, it will display the information of top n violated pins. If a corresponding\nautomatic fix flow has been applied, fail reasons can also be displayed for each top n pin with option -\nwith_fail_reason.\n\nWhile option -exclude_dont_touch is specified, those endpoints that already marked as dont touch will be\nignored in the summary. Notice that it only takes the dont touch attribute on pin, and does NOT care about\ncells and nets. If any doubt on this, please use command is_dont_touch(1) to verify.\n\nWhile pins are specified, it will only summarize the pins in the pin list.\n\nExamples\nThe following example summarizes the information of SI violations on data path with max si 0.05ns:\n\n% summarize_si_violations -data_path -max_si 0.05\n### si summary ###\nScenario            Count     Worst           TNS\n--------------------------------------------------\ntotal              499084    -6.675    -13275.172\n  func_ff          144057    -1.327     -1593.994\n  func_ss          498985    -6.675    -13273.695\n      \n\nThe following example summarizes the information of SI violations on both data and clock path and set\ncurrent summary as a reference for later summary, with top 3 worst endpoints listed, and set max_si to\n0.2ns:\n\n% summarize_si_violations -as_reference -max_si 0.2 \\\n                          -with_top_n 3\n### si summary ###\nScenario           Count     Worst         TNS\n-----------------------------------------------\ntotal               4196    -6.485    -579.571\n  func_ff            308    -1.137      -34.312\n  func_ss           4196    -6.485    -579.571\n### si top 3 endpoints ###\n Slack    Scenario         Value    Constraint    Name\n-----------------------------------------------------------------\n-6.485    func_ss          6.685         0.200    u_ctrl/U717/ZN\n-3.056    func_ss          3.256         0.200    u_ctrl/U7532/ZN\n-2.926    func_ss          3.126         0.200    u_ctrl/U30/ZN\n      \n\nThe following example summarizes the information of SI violations with previous reference, where the\nnew max_si is set to 0.5ns:\n\n% summarize_si_violations -with_reference -max_si 0.5\n### si summary ###\nScenario  Count    Count0    Worst    Worst0       TNS        TNS0\n------------------------------------------------------------------\ntotal       469     4196  | -6.185    -6.485  | -181.852    -579.571\n  func_ff    22      308  | -0.837    -1.137  | -3.301     -34.312\n  func_ss   469     4196  | -6.185    -6.485  | -181.852    -579.571"
            },
            {
                "doc_id": "_xtop_handbook_0222",
                "summary": "The document provides information about the command \"summarize_transition_violations\" in XTop tool. This command summarizes the information of transition violations in a design, including violation count, worst slack, and total negative slack. It has several flags such as -as_reference, -clock, -data_path, -exclude_dont_touch, -io_only, -r2r_only, -with_delta, -with_distribution, -with_fail_reason, -with_reference, and -with_top_n. The document also provides examples of how to use this command.",
                "content": "Commands\n\nName\nsummarize_transition_violations --Summarize the information of transition violations in design.\n\nSynopsis\nsummarize_transition_violations [-as_reference] [-with_delta] [-with_reference] [-clock] [-\ndata_path] [ -r2r_only | -io_only ] [-exclude_dont_touch] [-with_distribution] [ -with_top_n count [-\nwith_fail_reason]] [pin_list]\n\nflag as_reference\n\nflag clock\n\nflag data_path\n\nflag exclude_dont_touch\n\nflag io_only\n\nflag r2r_only\n\nflag with_delta\n\nflag with_distribution\n\nflag with_fail_reason\n\nflag with_reference\n\nint with_top_n in \"[1,inf)\"\n\ncollection pin_list\n\nArguments\n-as_reference Set current summary as a reference for later summary.\n\n-clock Report violations on clock network.\n\n-data_path Report violations on data path.\n\n-exclude_dont_touch Do not take those pins marked as dont touch into account.\n\n-io_only Only summarize those endpoints on io paths.\n\n-r2r_only Only summarize those endpoints on r2r paths.\n\n-with_delta Report delta to the reference if possible.\n\n-with_distribution Print a slack distribution histogram.\n\n-with_fail_reason Report fail reason on each top n pin.\n\n-with_reference Report the reference in the same table if exists.\n\n-with_top_n count Also report the top n worst endpoints.\n\npin_list Pins to summarize.\n\nDescription\nThis command summarizes the information of transition violations in design. It will output the violation\ncount, worst slack, and total negative slack.\n\nThe option -clock and -data_path represent the transition violations on clock network and data path\nrespectively. If none of them is specified, it acts as both of them are specified.\n\nWhile the option -with_delta or -with_reference is on, it will try to find the matched reference record,\nand report the difference according to the reference value of it. While option -as_reference is on, current\nsummary will be set as reference.\n\nBy default, all pins are taken into account in the summary. Also you can summarize the violations related\nto io or internal r2r paths respectively by specifying option -io_only or -r2r_only. However, the criterion\nto identify whether a pin is on io or internal path is not well defined, and XTop just follows the timing\ndata dumped from STA tools.\n\nOnce -with_top_n is specified, it will display the information of top n violated pins. If a corresponding\nautomatic fix flow has been applied, fail reasons can also be displayed for each top n pin with option -\nwith_fail_reason.\n\nWhile option -exclude_dont_touch is specified, those endpoints that already marked as dont touch will be\nignored in the summary. Notice that it only takes the dont touch attribute on pin, and does NOT care about\ncells and nets. If any doubt on this, please use command is_dont_touch(1) to verify.\n\nWhile pins are specified, it will only summarize the pins in the pin list.\n\nExamples\nThe following example summarizes the information of transition violations and set current summary as\na reference for later summary:\n\n% summarize_transition_violations -as_reference\n      \n\nThe following example summarizes the information of transition violations on clock network:\n\n% summarize_transition_violations -clock\n      \n\nThe following example summarizes the information of transition violations on data path:\n\n% summarize_transition_violations -data_path\n      \n\nThe following example summarizes the information of transition violations and reports the top 5 worst\nendpoints:\n\n% summarize_transition_violations -with_top_n 5\n   \n\nThe following example summarizes the information of transition violations on data path with reference\nand delta value:\n\n% summarize_transition_violations -with_reference -with_delta \\\n                                  -data_path"
            },
            {
                "doc_id": "_xtop_handbook_0223",
                "summary": "The document provides detailed information about the 'summarize_wire_length_violations' command in XTop tool. This command is used to summarize the information of wire length violations in a design. It includes various flags and arguments such as 'as_reference', 'clock', 'data_path', 'exclude_dont_touch', 'io_only', 'max_wire_length', 'r2r_only', 'with_delta', 'with_distribution', 'with_fail_reason', 'with_reference', 'with_top_n', and 'pin_list'. The command outputs the violation count, worst slack, and total negative slack, calculated by the given max wire length.",
                "content": "Commands\n\nName\nsummarize_wire_length_violations --Summarize the information of wire length violations in design.\n\nSynopsis\nsummarize_wire_length_violations [-max_wire_length val] [-as_reference] [-with_delta] [-\nwith_reference] [-clock] [-data_path] [ -r2r_only | -io_only ] [-exclude_dont_touch] [-with_distribution]\n[ -with_top_n count [-with_fail_reason]] [pin_list]\n\nflag as_reference\n\nflag clock\n\nflag data_path\n\nflag exclude_dont_touch\n\nflag io_only\n\nint max_wire_length in \"[10,inf)\"\n\nflag r2r_only\n\nflag with_delta\n\nflag with_distribution\n\nflag with_fail_reason\n\nflag with_reference\n\nint with_top_n in \"[1,inf)\"\n\ncollection pin_list\n\nArguments\n-as_reference Set current summary as a reference for later summary.\n\n-clock Report violations on clock network.\n\n-data_path Report violations on data path.\n\n-exclude_dont_touch Do not take those pins marked as dont touch into account.\n\n-io_only Only summarize those endpoints on io paths.\n\n-max_wire_length val Setting max wire length threshold with unit um, use parameter\nmax_wire_length if not specified.\n\n-r2r_only Only summarize those endpoints on r2r paths.\n\n-with_delta Report delta to the reference if possible.\n\n-with_distribution Print a slack distribution histogram.\n\n-with_fail_reason Report fail reason on each top n pin.\n\n-with_reference Report the reference in the same table if exists.\n\n-with_top_n count Also report the top n worst endpoints.\n\npin_list Pins to summarize.\n\nDescription\nThis command summarizes the information of wire length violations in design. It will output the violation\ncount, worst slack, and total negative slack, where slack is calculated by given max wire length. The unit\nof length is micro meter. If it is not set, value of parameter max_wire_length(1) will be used.\n\nThe option -clock and -data_path represent the wire length violations on clock network and data path\nrespectively. If none of them is specified, it acts as both of them are specified.\n\nWhile the option -with_delta or -with_reference is on, it will try to find the matched reference record,\nand report the difference according to the reference value of it. While option -as_reference is on, current\nsummary will be set as reference.\n\nBy default, all nets are taken into account in the summary. Also you can summarize the violations related\nto io or internal r2r paths respectively by specifying option -io_only or -r2r_only. However, the criterion\nto identify whether a pin is on io or internal path is not well defined, and XTop just follows the timing\ndata dumped from STA tools.\n\nOnce -with_top_n is specified, it will display the information of top n violated pins. If a corresponding\nautomatic fix flow has been applied, a statistical fail reason summary can also be displayed for each top\nn pin with option -with_fail_reason.\n\nWhile option -exclude_dont_touch is specified, those endpoints that already marked as dont touch will be\nignored in the summary. Notice that it only takes the dont touch attribute on pin, and does NOT care about\ncells and nets. If any doubt on this, please use command is_dont_touch(1) to verify.\n\nWhile pins are specified, it will only summarize the nets that connected to the specified pins.\n\nExamples\nThe following example summarizes the information of wire_length violations on data path with default\nmax wire length:\n\n% summarize_wire_length_violations -data_path\n### wire length summary ###\nCount        Worst           TNS\n---------------------------------\n 2090    -3426.545    -4.923e+05\n      \n\nThe following example summarizes the information of wire_length violations on both data and clock path\nand set current summary as a reference for later summary, with top 3 worst endpoints listed:\n\n% summarize_wire_length_violations -as_reference -max_wire_length 1500 \\\n                                   -with_top_n 3\n### wire length summary ###\nCount        Worst           TNS\n---------------------------------\n  268    -2926.545    -62273.990\n### wire length top 3 endpoints ###\n    Slack       Value    Constraint    Name\n--------------------------------------------------------\n-2926.545    4426.545      1500.000    U_SKU_DSP_1/Z\n-1536.800    3036.800      1500.000    U_SKU_DSP_0/Z\n -901.000    2401.000      1500.000    U_CTRL_356/TOD3/C\n      \n\nThe following example summarizes the information of wire length violations with previous reference,\nwhere the new max wire length is set to 2000:\n\n% summarize_wire_length_violations -with_reference -max_wire_length 2000\n### wire length summary ###\nCount  Count0       Worst       Worst0          TNS          TNS0\n-----------------------------------------------------------------\n   27     268   -2426.545    -2926.545    -6824.165    -62273.990"
            },
            {
                "doc_id": "_xtop_handbook_0224",
                "summary": "",
                "content": "Commands\n\nName\nundo --Undo the latest eco action.\n\nSynopsis\nundo\n\nDescription\nThis command undoes the latest eco action. For manual eco actions, there will be a check point for each\naction within a certain number, and they can be undone by this command. Once a workspace is closed and\nreopened again, the check points will be destroyed.\n\nIt will report an error if there is no action or check point.\n\nExamples\nThe following example shows how to undo the latest eco action:\n\n% undo\n      \n\n290"
            },
            {
                "doc_id": "_xtop_handbook_0225",
                "summary": "The document provides detailed information about the \"write_design_changes\" command in XTop tool. This command writes out design changes in specified formats. It includes various options such as -format, -eco_file_prefix, -output_dir, -last_n, -reorder, -exclude_new_created, -keep_route, -write_atomic_cmd, -force, -add_on_route, and -version. The document also provides examples of how to use this command.",
                "content": "Commands\n\nName\nwrite_design_changes --Write out design changes that have been recorded in specified format.\n\nSynopsis\nwrite_design_changes [-format file_format] -eco_file_prefix file_name_prefix [-\noutput_dir file_output_directory] [ -last_n output_command_count | -reorder ] [-\nexclude_new_created] [-keep_route] [ -write_atomic_cmd | -force ] [-add_on_route] [-version val]\n\nflag add_on_route\n\nstring eco_file_prefix\n\nflag exclude_new_created\n\nflag force\n\nenum format in \"NATIVE INNOVUS CUI SOC ICC ICC2 PT ATOP V_DEF\"\n\nflag keep_route\n\nint last_n\n\nstring output_dir\n\nflag reorder\n\nfloat version in \"[0,inf)\"\n\nflag write_atomic_cmd\n\nArguments\n-add_on_route Output add_buffer_on_route command for split net action in ICC2\n\nformat.\n\n-eco_file_prefix file_name_prefix Prefix for eco files to write out netlist and physical changes.\n\n-exclude_new_created Exclude new created instances when output physical changes.\n\n-force Force to write out macro commands and only the illegal ones are\nwritten in atomic format.\n\n-format file_format Output file format: NATIVE, INNOVUS, CUI, SOC, ICC, ICC2,\nPT, ATOP or V_DEF(experimental), default is INNOVUS.\n\n-keep_route Do not delete original routes when output physical changes.\n\n-last_n output_command_count Write out the last N eco commands.\n\n-output_dir file_output_directory Directory for eco files to write out.\n\n-reorder Put the forced output commands at the end of the output sequence.\n\n-version val Output CUI commands for specified tool version.\n\n-write_atomic_cmd Write out atomic commands for each action.\n\nDescription\nThis command will write logical and physical changes for design into script files. For logical changes,\noption -last_n can be used to only output the changes of last N eco commands. For physical changes, it will\nalways output all the changes. Currently formats for NATIVE, INNOVUS, CUI, SOC, ICC, ICC2, PT,\nATOP and V_DEF(experimental) flows are supported. Especially for V_DEF(experimental), it writes out\nthe design changes into an incremental def file(.def), and at the meantime, it writes out the whole current\ndesign into a verilog file(.v).\n\nBy default, macro commands will be output. It will report errors when following happens.\n\n--Buffered pins are not in the same logic hierarchy when insert buffer or split net.\n\n--Split net with inverter.\n\n--Insert individual inverter when insert buffer chain.\n\n--Insert AND/OR cell as buffer in post-mask eco.\n\nIn this case, please dump the atomic eco commands with option -write_atomic_cmd instead. Or force to\ndump the macro commands with option -force. Here if -force option is used, atomic commands (which\ncan be run by source command) will be dumped only for these particular actions. The atomic commands\nwill be mixed with other macro commands. For some specific reasons, if these mixed commands are not\nconvenient, please use -reorder option to put all the atomic commands at the end of the output sequence.\n\nPlease note that when write out atomic commands, the original routes of touched nets will be removed in\nphysical file to release more routing resources. However, the original routes will be kept when write out\nmacro commands for keeping routing topology.\n\nExamples\nThe following example writes out design changes in INNOVUS format to file with prefix \"inno_macro\".\n\n% write_design_changes -eco_file_prefix inno_macro \\\n                       -format INNOVUS\n      \n\nThe following example writes out design changes in INNOVUS atomic command format to file with prefix\n\"inno_atomic\":\n\n% write_design_changes -eco_file_prefix inno_atomic \\\n                       -format INNOVUS  -write_atomic_cmd\n      \n\nThe following example only writes out the last 5 eco commands in INNOVUS format.\n\n% write_design_changes -eco_file_prefix inno_macro -last_n 5 \\\n                       -format INNOVUS\n      \n\nThe following example forces to write out the macro eco commands in INNOVUS format.\n\n% write_design_changes -eco_file_prefix inno_macro \\\n                       -format INNOVUS -force\n      \n\nThe following example forces to write out the macro eco commands in CUI format and follow the 21.1\nversion.\n\n% write_design_changes -eco_file_prefix macro \\\n                       -format CUI -force -version 21.1\n      \n\nThe following example writes out the design changes into the incremental def file and the whole current\ndesign into the verilog file.\n\n% write_design_changes -eco_file_prefix macro \\\n                       -format V_DEF"
            },
            {
                "doc_id": "_xtop_handbook_0226",
                "summary": "This is a description of the 'adjust_path_slack' command in XTop tool. It has two options: '-target' and '-offset', used to adjust the path slack value by changing the uncertainty value. The command also requires a 'paths' argument, which specifies the paths to be adjusted.",
                "content": "Commands\n\nName\nadjust_path_slack --To adjust path slack by change uncertainty value.\n\nSynopsis\nadjust_path_slack [ -target target | -offset change ] paths\n\nfloat offset\n\nfloat target\n\ncollection paths\n\nArguments\n-offset change Slack change for given paths, unit is ns.\n\n-target target Final slack value for given paths, unit is ns.\n\npaths Paths to be adjusted, do nothing if not specified.\n\nDescription\nThis command adjusts path slack value. It will change path uncertainty value and related data. If no\nuncertainty on path, then create it. Typically, clock uncertainty should be positive, so use this command\nvery carefully.\n\nTwo methods to adjust path slack : The final slack by -target. The slack change by -offset, the offset is\nnegative value when worsen path.\n\nExamples\nThe following example specifies final slack for given paths.\n\n% adjust_path_slack -target -0.05 [get_paths -end_points {RDATA15[1]} -delay_type max]\n      \n\n294"
            },
            {
                "doc_id": "_xtop_handbook_0227",
                "summary": "This is a description of the \"analyze_leakage_keywords\" command in XTop tools. It analyzes leakage power and delay trend for cell nominal swap keywords to guide leakage optimization. The command has two options: \"-group\" to set the preferred keyword group number and \"-keywords\" to specify the keywords for swapping cells. The command also provides examples of how to use these options.",
                "content": "Commands\n\nName\nanalyze_leakage_keywords --Analyze leakage power and delay trend for cell nominal swap keywords\nto guide leakage optimization.\n\nSynopsis\nanalyze_leakage_keywords [-keywords name_list] [-group group_number]\n\nint group in \"[2,20]\"\n\nstring_list keywords\n\nArguments\n-group group_number Set the preferred keyword group number. At least 3 keywords are needed\n\nif using this option. By default, two groups will be created.\n\n-keywords name_list Keywords for swapping cells, use eco_cell_nominal_swap_keywords if\nnot specified.\n\nDescription\nThis command analyze leakage power and delay trend for swap keywords to guide leakage optimization.\nKeywords will be divided to several groups according to specified group number.\n\nSome terminology on the reported results:\n\nSlope : Delta leakage power divided by delta delay which represents the benefit change rate for adjacent\nkeywords. Delta leakage power and delta delay are calculated by the data of the adjacent keywords and\nslope is marked on the preceding one.\n\nDelta-Slope% : Delta slope ratio is delta slope divided by total slope span which represents the benefit\ndifference before and after a specific keyword. Delta slope is calculated by the slope marked on adjacent\nkeywords. Total slope span is the difference between the maximum and minimum slopes. Actually, delta\nslope ratio is related to three adjacent keywords and marked on the middle one.\n\nFor simplicity, library cells in reference scenario are counted to get the average leakage power and delay\nfor each swap keyword. Slope and Delta-Slope% are calculated by average leakage and delay of adjacent\nkeywords.\n\nAs delta slope ratio represents the benefit difference before and after a specified keyword, break points to\ndivide the keyword groups are determined to be the keywords with the largest absolute delta slope ratios.\n\nGenerally speaking, more keyword groups bring better leakage optimization results. Optimization\niterations with minimum bubble keyword groups may bring the best result. However, large iteration\nnumber may make runtime unacceptable. There is a trade-off between benefits and efficiency. So make\nsure to give the appropriate group number when analyze and then optimize.\n\nExamples\nThe following example shows how to analyze with keywords parameter and group option.\n\n% set_parameter eco_cell_nominal_swap_keywords \\\n                {\"ULVT\" \"LVT\" \"\" \"HVT\"}\n% analyze_leakage_keywords -group 3\n      \n\nThe following example shows how to analyze with keywords option.\n\n% analyze_leakage_keywords -keywords {\"ULVT\" \"LVT\" \"\" \"HVT\"}\n      \n\nSee Also\noptimize_leakage_power(1)"
            },
            {
                "doc_id": "_xtop_handbook_0228",
                "summary": "这是关于XTop工具中的一个命令analyze_setup_load_shielding_net的说明，该命令用于报告可能用于通过负载屏蔽方法修复设置的网络。它包含多个参数选项，如-include_dont_touch, -met_loader_count_threshold, -met_threshold, -nets, -pins, -truncate, 和 -violated_loader_count_threshold。",
                "content": "Commands\n\nName\nanalyze_setup_load_shielding_net --Report nets that may be used to fix setup by load shielding methods.\n\nSynopsis\nanalyze_setup_load_shielding_net [-include_dont_touch] [-met_threshold\nmet_threshold] [-violated_loader_count_threshold vio_count] [-met_loader_count_threshold\nvio_count] [-truncate num] [ -nets net_list | -pins pin_list ]\n\nflag include_dont_touch\n\nint met_loader_count_threshold\n\nfloat met_threshold\n\ncollection nets\n\ncollection pins\n\nint truncate in \"[0,200000000]\"\n\nint violated_loader_count_threshold\n\nArguments\n-include_dont_touch Default dont_touch nets/pins will be ignored.\n\n-met_loader_count_threshold Only report net which has enough met loaders.\nvio_count\n\n-met_threshold met_threshold Setup met threshold.\n\n-nets net_list Only analyze those nets, default analyze all possible nets.\n\n-pins pin_list Only analyze nets of those pins.\n\n-truncate num Count limitation of nets to report, default is 100, zero value means\nall.\n\n-violated_loader_count_threshold Only report net which has enough violated loaders.\nvio_count\n\nDescription\nThis is debug command, used to analysis setup timing using load shielding.\n\nExamples\n\n297"
            },
            {
                "doc_id": "_xtop_handbook_0229",
                "summary": "",
                "content": "Commands\n\nName\nclear_fail_reasons --Clear fail reason on pins generated in optimization process.\n\nSynopsis\nclear_fail_reasons\n\nDescription\nThis command clears all generated fail reasons on pins in optimization process. After each fix action and\nsave relative fail reasons, this command can be called to clear all existed fail reasons.\n\nExamples\nThe following example clears all fail reasons on pins in XTop.\n\n% clear_fail_reasons\n      \n\n298"
            },
            {
                "doc_id": "_xtop_handbook_0230",
                "summary": "The document provides a detailed explanation of the 'clock_eco_analysis' command used in XTop tools. It includes various options such as '-setup', '-hold', '-decrease_delay', '-buffer', '-count', '-detail', '-honor_dont_touch', '-include_begin_gain', '-output_file', '-scenario', '-setup_wns_threshold', '-target_pins', '-top', and '-trace_level'. The command is used to perform clock eco analysis by increasing or decreasing delay on certain points. It also provides examples of how to use the command for hold timing and setup timing.",
                "content": "Commands\n\nName\nclock_eco_analysis --Do clock eco analysis, report suggested eco candidates.\n\nSynopsis\nclock_eco_analysis { -setup | -hold } [-decrease_delay] -buffer clock_buffer [-\ncount buffer_count] [ -trace_level trace_level | -target_pins target_pins ] [-top\ncount] [-include_begin_gain] [-detail] [-scenario reference_scenario] [-honor_dont_touch] [-\nsetup_wns_threshold setup_wns_threshold] [-hold_wns_threshold hold_wns_threshold] [-\noutput_file output_file]\n\ncollection buffer\n\nint count in \"[1,10]\"\n\nflag decrease_delay\n\nflag detail\n\nflag hold\n\nfloat hold_wns_threshold\n\nflag honor_dont_touch\n\nflag include_begin_gain\n\nstring output_file\n\nstring scenario\n\nflag setup\n\nfloat setup_wns_threshold\n\ncollection target_pins\n\nint top in \"[1,1000]\"\n\nint trace_level in \"[0,100]\"\n\nArguments\n-buffer clock_buffer Buffer or inverter used as the reference to increase or decrease\n\ndelay.\n\n-count buffer_count The length of buffer chain used as a basic unit, default value is 1.\nIf the specified library cell is inverter, this count should be inverter\npair count instead.\n\n-decrease_delay Clock eco analysis by decreasing delay, default by increasing delay.\n\n-detail Print detail pin information in each scenario. If -target_pins is set\nand there is only one target pin, slack and margin data will be\nsummarized for DADPins and BQPins. Note that the slack may\nbe difference from the slack reported by report_pins command,\nbecause min path slack will be reported here if any path exists.\n\n-hold The target is to fix hold violations.\n\n-hold_wns_threshold This threshold is to prevent Hold timing WNS from getting worse.\nhold_wns_threshold\n\n-honor_dont_touch Honor dont touch attribute of pin and net when analyze for eco\ncandidates.\n\n-include_begin_gain Calculate total gain ratio including begin gain.\n\n-output_file output_file If output file is specified, analysis summary will dump to this file.\n\n-scenario reference_scenario Referenced scenario to calculate gain.\n\n-setup The target is to fix setup violations.\n\n-setup_wns_threshold This threshold is to prevent Setup timing WNS from getting worse.\nsetup_wns_threshold\n\n-target_pins target_pins Just analysis on those pins.\n\n-top count Report top n suggested results, default value is 50.\n\n-trace_level trace_level Max allowed level for back trace when clock eco analysis, default\nvalue is 5.\n\nDescription\nClock eco analysis will be performed by increasing or decreasing delay on some points. The delay change\nis measured by {buffer typical_delay * count} or {inverter typical_delay * 2 * count}. The early/late derate\nis not considered.\n\nIt will assume that there is no change for off-path during clock eco analysis. So that the driver output delay/\ntransition should not have large change when commit insert_buffer, remove_buffer or reconnect_net eco\nactions.\n\nBy default, it will increase delay on suggested eco points, and use insert_buffer or reconnect_net eco action\nto commit the solution.\n\nWhen it needs to reduce delay, please specify the decrease_delay option, and use remove_buffer or\nreconnect_net to commit the solution.\n\nSome terminology on the reported results:\n\nDACKPin : Directly affected CKPins, all fanout CKPins from eco point.\n\nDADPin : Directly affected DPins, all related data pins of DACKPins.\n\nBQPin : Begin QPins, all fanin QPins of DADPin.\n\nTNS_Gain : Total negative slack gain on all DPins.\n\nBegin_Gain : Total negative slack gain on all BQPins.\n\nMargin_TNS_Gain : Total margin negative slack gain on all DPins.\n\nTNS_Gain_Ratio : Total gain ratio on all DPins. It is calculated by {TNS_Gain / (buffer typical_delay *\ncount)} or {TNS_Gain / (inverter typical_delay * 2 * count)}.\n\nBegin_Gain_Ratio : Total gain ratio on all BQPins. It is calculated by {Begin_Gain / (buffer typical_delay\n* count)} or {Begin_Gain / (inverter typical_delay * 2 * count)}.\n\nW_Margin_TNS_Gain_Ratio : Worst total margin gain ratio in multiple scenarios on all DPins. Total\nmargin gain ratio is calculated by {Worst_Margin_TNS_Gain / (buffer typical_delay * count)} or\n{Worst_Margin_TNS_Gain / (inverter typical_delay * 2 * count)}.\n\nGain_Ratio : Total gain ratio synthesized TNS_Gain_Ratio, W_Margin_TNS_Gain_Ratio and\nBegin_Gain_Ratio. It is calculated by {TNS_Gain_Ratio + W_Margin_TNS_Gain_Ratio}. If\ninclude_begin_gain is set, the total gain ratio will be {TNS_Gain_Ratio + 0.1*Begin_Gain_Ratio +\nW_Margin_TNS_Gain_Ratio}.\n\nThe results will be sorted by total gain ratio. The concept of gain ratio is used as a criterion to filter the\nsolutions. Once a buffer is inserted, the result expected is that it can bring a gain in a quantity of buffer\ndelay without any negative effect. The TNS gain and impact can be then synthesized into a ratio of the\nexpected buffer effect, the gain ratio.\n\nThe default value of trace_level is 5, user can adjust it according to design situation.\n\nNOTE: When specify target_pins, you should not set trace_level at the same time, and make sure there\nis no topology relation between target_pins. Tool only works fine for pins on clock tree, so no clock\nreconvergence or clock overlap. You can use hierarchical logic pin as target_pins.\n\nExamples\nThe following example performs clock eco analysis for hold timing.\n\n% clock_eco_analysis -buffer BUFF12 -hold\n\n* No.  Gain_Ratio  TNS_Gain_Ratio  W_Margin_TNS_Gain_Ratio  Pin\n********************************************************************************\n  1       161.952        279.952       -118.000      clk_gen_u0/gating_cell_u0/CP\n  2        56.000         56.000          0.000      U326/I\n  3        12.714         12.714          0.000      regs/dram2/U272/I\n      \n\nThe following example performs clock eco analysis for setup timing with decrease_delay.\n\n% clock_eco_analysis -buffer BUFFD8 -setup -decrease_delay\n\n* No.  Gain_Ratio  TNS_Gain_Ratio  W_Margin_TNS_Gain_Ratio  Pin\n********************************************************************************\n  1       446.883        448.221         -1.338      SCIBUFXT1_G2B1I1_1/A\n  2       144.515        114.515          0.000      SCJFBUFCLXP1G1B1I39_2/A\n  3        73.224         73.224          0.000      SCJFBUFCLXP1G1B1I55_2/A\n      \n\nSee Also\ncommit_clock_eco(1)\n\n301"
            },
            {
                "doc_id": "_xtop_handbook_0231",
                "summary": "This is a description of the 'commit_clock_eco' command used in XTop tools. It commits the solutions found by clock eco analysis. The command has options such as '-gain_ratio num' to filter solutions, '-hold' and '-setup' to commit solutions found by hold and setup analysis respectively, and '-top num' to commit top n solutions of analysis. The command only commits solutions of increasing delay mode.",
                "content": "Commands\n\nName\ncommit_clock_eco --Commit the solutions found by clock eco analysis.\n\nSynopsis\ncommit_clock_eco [ -gain_ratio num | -top num ] { -setup | -hold }\n\nint gain_ratio in \"[1,inf)\"\n\nflag hold\n\nflag setup\n\nint top in \"[1,1000]\"\n\nArguments\n-gain_ratio num Minimum gain ratio to filter solutions.\n\n-hold Commit the solutions found by hold analysis.\n\n-setup Commit the solutions found by setup analysis.\n\n-top num Commit top n solutions of analysis.\n\nDescription\nThis command commits the solutions found by clock eco analysis. The analysis command lists the gain\nand impact of each solutions in descending order of synthesized gain.\n\nThe concept of gain ratio is used as a criterion to filter the solutions. Once a buffer is inserted, the result\nexpected is that it can bring a gain in a quantity of buffer delay without any negative effect. The TNS gain\nand impact can be then synthesized into a ratio of the expected buffer effect, the gain ratio. At the early\nstage of optimization, a large gain ratio is commonly expected for clock eco. While in the later stage and\nthere is almost no solution on data paths, solutions with low gain ratio are also acceptable.\n\nAnyway, for experienced designers, this command also supports to commit the top n solutions directly\nwith option \"-top\".\n\nThis command can only commit solutions of increasing delay mode. For decreasing delay mode, it needs\nto convert the solution to a operational eco action and commit it manually.\n\nExamples\nThe following example commits the top 10 hold-fix solutions found by clock eco analysis.\n\n% commit_clock_eco -hold -top 10\n      \n\nSee Also\nclock_eco_analysis(1)\n\n302"
            },
            {
                "doc_id": "_xtop_handbook_0232",
                "summary": "The document provides information about the 'enlarge_timing_violations' command used in GBA mode. This command enlarges specified timing violations by multiplying the negative slack with a given factor. It has options for enlarging hold or setup violations, and for specifying scenarios. The factor can range from 0.1 to 10.",
                "content": "Commands\n\nName\nenlarge_timing_violations --Enlarge specified timing violations, only for GBA mode.\n\nSynopsis\nenlarge_timing_violations [ -setup | -hold ] [-scenarios patterns] factor\n\nflag hold\n\nstring_list scenarios\n\nflag setup\n\nfloat factor in \"(0.1,10)\"\n\nArguments\n-hold Enlarge hold violations.\n\n-scenarios patterns Scenarios to enlarge the violations, matched by wildcard.\n\n-setup Enlarge setup violations.\n\nfactor The factor to multiply with negative slack.\n\nDescription\nThis command enlarges the timing violations, only for GBA mode. It will multiply the negative slack with\nthe specified factor. If no hold or setup flag specified, both setup and hold violations will be enlarged.\nViolations of all scenarios will be modified unless scenarios are specified.\n\nHere the word \"enlarge\" acts just like \"scale\" except that it gives a hint that you should enlarge the\nviolations to get a better result for most cases. However, it is not prohibited to specify a factor less than\n1.0 to shrink the violations if you do want to do that.\n\nExamples\nThe following example specifies a factor to enlarge the hold timing violations.\n\n% enlarge_timing_violations -hold 1.1\n      \n\n303"
            },
            {
                "doc_id": "_xtop_handbook_0233",
                "summary": "这是关于XTop工具中的\"export_clock_eco\"命令的说明，该命令用于将指定的时钟eco解决方案导出为第三方STA工具的命令。它支持\"-hold\"、\"-setup\"和\"-top num\"三个选项，分别用于导出hold分析找到的解决方案、setup分析找到的解决方案以及分析的前n个解决方案。",
                "content": "Commands\n\nName\nexport_clock_eco --Export the specified clock eco solutions as commands for third party STA tools.\n\nSynopsis\nexport_clock_eco [-top num] { -setup | -hold }\n\nflag hold\n\nflag setup\n\nint top in \"[1,1000]\"\n\nArguments\n-hold Export the solutions found by hold analysis.\n\n-setup Export the solutions found by setup analysis.\n\n-top num Export top n solutions of analysis.\n\nDescription\nThis command exports the specified clock eco solutions as commands for third party STA tools. Only\nincreasing delay mode and insert buffer is supported. All scripts exported are based on top design.\n\nExamples\n\n304"
            },
            {
                "doc_id": "_xtop_handbook_0234",
                "summary": "This is a detailed documentation of the command \"fix_capacitance_violations\" in XTop tool. The command is used to fix capacitance violations in design. It provides various options such as \"-on_clock\", \"-dff_only\", \"-buffer_list\", \"-methods\", \"-size_rule\", \"-capacitance_target\", \"-transition_margin\", \"-rel_transition_margin\", \"-capacitance_margin\", \"-disable_report\", \"-check_timing_margin\", and \"violations\". The document also includes descriptions of each argument, usage examples, and related commands.",
                "content": "Commands\n\nName\nfix_capacitance_violations --Fix capacitance violations in design.\n\nSynopsis\nint fix_capacitance_violations [ -on_clock | -dff_only ] [-buffer_list buffer_names]\n[-methods method_list] [-size_rule rule_type] [-capacitance_target slack_val] [-\ntransition_margin margin_val] [-rel_transition_margin rel_margin_val] [-capacitance_margin\nmargin_val] [-disable_report] [-check_timing_margin] [violations] [-debug_pins pin_list]\n\ncollection buffer_list\n\nfloat capacitance_margin\n\nfloat capacitance_target\n\nflag check_timing_margin\n\ncollection debug_pins\n\nflag dff_only\n\nflag disable_report\n\nenum_list methods in \"insert_buffer size_cell split_net\"\n\nflag on_clock\n\nfloat rel_transition_margin in \"[0,0.5]\"\n\nenum size_rule in \"cell_attribute nominal_keywords nominal_regex\"\n\nfloat transition_margin\n\ncollection violations\n\nArguments\n-buffer_list buffer_names Buffers or inverters used to fix violations (inverters only for\n\nsplit_net), use eco_buffer_list_for_setup if not specified.\n\n-capacitance_margin margin_val Capacitance slack margin to be reserved with unit pF, use\neco_capacitance_slack_margin if not specified.\n\n-capacitance_target slack_val Target of capacitance slack with unit pF, use\neco_capacitance_slack_target if not specified.\n\n-check_timing_margin Also check hold and setup margin when fix transition, while margin\ncan be set by eco_hold_slack_margin and eco_setup_slack_margin.\n\n-debug_pins pin_list XTop will print more debug log for specified pins, and abort fix\nonce all these pins have been scanned.\n\n-dff_only Only size dff cells when set. If not specified, only size comb cells.\nCan only work with size cell and on_clock is unused.\n\n-disable_report Do NOT generate a report of violation and fail reason in workspace.\n\n-methods method_list Methods used to fix capacitance, can be any combination of\ninsert_buffer, size_cell, and split_net, all enabled by default.\n\n-on_clock Fix violations on clock only.\n\n-rel_transition_margin Relative transition slack margin to be reserved with\nrel_margin_val the value of percentage to max transition, use\n\neco_relative_transition_slack_margin if not specified, a sum of\ntransition_margin and rel_transition_margin will be actually used.\n\n-size_rule rule_type Indicate the rule used to find candidates for sizing cells, use\neco_cell_classify_rule if not specified.\n\n-transition_margin margin_val Transition slack margin to be reserved with unit ns, use\neco_transition_slack_margin if not specified.\n\nviolations The violations of pins to fix, all if not specified.\n\nDescription\nThis command fixes capacitance violations in design. It will try to size cell, insert buffer, and split net by\ndefault, and choose the best one from them. By default, it only fixes violations on data paths. If want to\nfix violations on clock, try to run a separate iteration with option -on_clock.\n\nBy default, this command will try to fix the violations to slack greater than 0, and will not break the\nmax transition constraint, and max capacitance constraint of those nets that affected by this eco action\nindirectly. Commonly, this is enough since the algorithm is always a little pessimistic. However, if you\nreally concerned about the effect and there are enough resources in the design, you can over-fix it by\nadding a positive target, and over-constraint the transition, capacitance by adding a positive margin with\noption -capacitance_target, -transition_margin and -capacitance_margin respectively.\n\nIf the target and margins are not specified, corresponding parameters eco_capacitance_slack_target(1),\neco_transition_slack_margin(1), and eco_capacitance_slack_margin(1) will be used as default.\n\nWhen using split net, tool will try best to satisfy the constraint by target and margin. There is an internal\nlimit which do not allow split exhaustively, caused by unrealistic target and margin.\n\nThe setup and hold timing constraint may be broken in this process. However, the impact will be considered\ntogether with the area cost, and the capacitance gain, and will be optimized as small as possible. We also\noffer an option -check_timing_margin to add extra margin check if user do not want to break any timing\nmargin, but solution may be less if this option specified.\n\nBy default, cells are sized by matching eco_cell_match_attribute(1). If you want to reduce the candidate\ncells for sizing, you can change the size rule to nominal_keywords or nominal_regex on demand.\n\nOnce the fix process finished, it will report the gain obtained, area and density variations. If the violations\nare not completely fixed, the statistics of fail reasons will also be reported. Thus, you can change the policy\nor release more resources according to these reasons. The command report_fail_reasons(1) can help to\nreview the detail reasons on specified objects.\n\nBy default, a report of violations and fail reasons is generated under the directory opt in workspace.\nThe maximum violation count is limited to 10000 since it will be time consuming if there are plenty of\nviolations remained. Option -disable_report can be used to avoid generating this report.\n\nThis command also supports to fix specific violations by specifying a collection of violated pins. The\nsummary and fail reason are also limited to specified pins.\n\nWhen violated pins are specified by user, tool will automatically expand all the mirror pins of them.\n\nThis command returns the number of solutions committed.\n\nExamples\nThe following example uses size cell and insert buffer methods to fix capacitance violations.\n\n% fix_capacitance_violations -methods {size_cell insert_buffer}\n      \n\nThe following example fix capacitance violations only size DFF cells.\n\n% fix_capacitance_violations -methods {size_cell} -dff_only\n      \n\nThe following example only fixes capacitance violations on clock path.\n\n% fix_capacitance_violations -on_clock\n      \n\nThe following example over-fixes capacitance violations to 0.02pF.\n\n% fix_capacitance_violations -capacitance_target 0.02\n      \n\nThe following example over-constraints the transition and capacitance by 0.01ns and 0.01pF respectively.\n\n% fix_capacitance_violations -transition_margin 0.01 \\\n                             -capacitance_margin 0.01\n      \n\nThe following example uses nominal keywords defined in parameter eco_cell_nominal_swap_keywords\nfor swapping cells to fix capacitance violations.\n\n% set_parameter eco_cell_nominal_swap_keywords \\\n                \"lvt@n30 nvt@n40 hvt@n40\"\n% fix_capacitance_violations -size_rule nominal_keywords\n      \n\nThe following example only fixes capacitance violations on pin U316/Z and U395/Z, and also check timing\nmargin.\n\n% fix_capacitance_violations {U316/Z U395/Z} -check_timing_margin\n      \n\nSee Also\nfix_transition_violations(1) fix_setup_path_violations(1) fix_hold_path_violations(1)\n\n307"
            },
            {
                "doc_id": "_xtop_handbook_0235",
                "summary": "The document provides information about the XTop command 'fix_fanout_violations', which is used to fix fanout violations in design. The command has several options including '-buffer_list', '-debug_pins', '-disable_report', '-max_fanout', '-on_clock', and 'violations'. The command tries to split the net to keep the fanout number within the user-defined max fanout threshold. It generates a report of violations and fail reasons, but this can be disabled with the '-disable_report' option. The command can also fix specific violations by specifying a collection of violated pins.",
                "content": "Commands\n\nName\nfix_fanout_violations --Fix fanout violations in design.\n\nSynopsis\nint fix_fanout_violations [-buffer_list buffer_inverter_names] [-max_fanout\nthreshold] [-on_clock] [-disable_report] [violations] [-debug_pins pin_list]\n\ncollection buffer_list\n\ncollection debug_pins\n\nflag disable_report\n\nint max_fanout in \"[4,inf)\"\n\nflag on_clock\n\ncollection violations\n\nArguments\n-buffer_list buffer_inverter_names Buffers/Inverters used to fix fanout violations, use buffers/inverters\n\ndefined in eco_buffer_list_for_setup if not specified.\n\n-debug_pins pin_list XTop will print more debug log for specified pins, and abort fix\nonce all these pins have been scanned.\n\n-disable_report Do NOT generate a report of violation and fail reason in workspace.\n\n-max_fanout threshold Max fanout threshold, use parameter max_fanout if not specified.\n\n-on_clock Fix violations on clock only.\n\nviolations The violations of pins to fix, all if not specified.\n\nDescription\nThis command fixes fanout violations in design. It will try to split net, to keep fanout number not exceed\nthe max fanout threshold defined by user. If this option is not set, it will use the value of max_fanout(1).\n\nOnce the fix process finished, it will report the solution number, area increased, and statistics of fail reason\nif violations are not fully fixed.\n\nBy default, a report of violations and fail reasons is generated under the directory opt in workspace.\nThe maximum violation count is limited to 10000 since it will be time consuming if there are plenty of\nviolations remained. Option -disable_report can be used to avoid generating this report.\n\nThis command also supports to fix specific violations by specifying a collection of violated pins. The\nsummary and fail reason are also limited to specified pins.\n\nWhen violated pins are specified by user, tool will automatically expand all the mirror pins of them.\n\nThis command returns the number of solutions committed.\n\nExamples\nThe following example fix max fanout violations.\n\n% fix_fanout_violations -max_fanout 16 -buffer_list {BUF01 BUF03}\n      \n\nThe following example fix max fanout violations on clock only.\n\n% fix_fanout_violations -on_clock -buffer_list {BUF01 BUF03}\n      \n\nThe following example fix max fanout violations on pin mul137/ZN.\n\n% fix_fanout_violations {mul137/ZN}\n      \n\nSee Also\nfix_wire_length_violations(1)\n\n309"
            },
            {
                "doc_id": "_xtop_handbook_0236",
                "summary": "The document provides detailed information about the 'fix_glitch_violations' command in XTop. This command is used to fix noise glitch violations in a design. It includes various options such as '-on_clock', '-dff_only', '-buffer_list', '-methods', '-size_rule', '-disable_report', '-check_timing_margin', '-wire_length_threshold', and 'violations'. The command attempts to split the net or size the cell and chooses the best solution. It also provides examples of how to use the command in different scenarios.",
                "content": "Commands\n\nName\nfix_glitch_violations --Fix noise glitch violations in design.\n\nSynopsis\nint fix_glitch_violations [ -on_clock | -dff_only ] [-buffer_list\nbuffer_inverter_names] [-methods method_list] [-size_rule rule_type] [-disable_report]\n[-check_timing_margin] [-wire_length_threshold length_threshold] [violations] [-debug_pins\npin_list]\n\ncollection buffer_list\n\nflag check_timing_margin\n\ncollection debug_pins\n\nflag dff_only\n\nflag disable_report\n\nenum_list methods in \"size_cell split_net\"\n\nflag on_clock\n\nenum size_rule in \"cell_attribute nominal_keywords nominal_regex\"\n\nint wire_length_threshold in \"[0,1000]\"\n\ncollection violations\n\nArguments\n-buffer_list buffer_inverter_names Buffers/Inverters used to fix noise glitch violation for split_net,\n\nuse buffers/inverters defined in eco_buffer_list_for_setup if not\nspecified.\n\n-check_timing_margin Also check hold and setup margin when fix glitch, while margin can\nbe set by eco_hold_slack_margin and eco_setup_slack_margin.\n\n-debug_pins pin_list XTop will print more debug log for specified pins, and abort fix\nonce all these pins have been scanned.\n\n-dff_only Only size dff cells when set. If not specified, only size comb cells.\nCan only work with size cell and on_clock is unused.\n\n-disable_report Do NOT generate a report of violation and fail reason in workspace.\n\n-methods method_list Methods used to fix glitch, can be any combination of size_cell and\nsplit_net, all enabled by default.\n\n-on_clock Fix violations on clock only.\n\n-size_rule rule_type Indicate the rule used to find candidates for sizing cells, use\neco_cell_classify_rule if not specified.\n\n-wire_length_threshold Minimum wire length threshold allowed for a segment when split\nlength_threshold net, there's no limit by default, the unit is um.\n\nviolations The violations of pins to fix, all if not specified.\n\nDescription\nThis command fixes noise glitch violations in design. It will try to split net, or size cell, and choose the\nbest one solution between them. By default, it only fixes violations on data paths. If want to fix violations\non clock, try to run a separate iteration with option -on_clock.\n\nOnce the fix process finished, it will report the solution number, area increased, and statistics of fail reason\nif violations are not fully fixed.\n\nWhen split net, using option -wire_length_threshold can avoid split short net into many segments. If the\nvalue is set too large, may have no solution.\n\nSize cell method can only fix violation points with small absolute value of slack.\n\nWhile size cell is used, the candidates are searched in groups classified by the rule of option -size_rule. If\nthis option is not specified, eco_cell_classify_rule(1) will be used as default.\n\nThe setup and hold timing constraint may be broken in this process. We also offer an option -\ncheck_timing_margin to add extra margin check if user do not want to break any timing margin, but\nsolution may be less if this option specified.\n\nBy default, a report of violations and fail reasons is generated under the directory opt in workspace.\nThe maximum violation count is limited to 10000 since it will be time consuming if there are plenty of\nviolations remained. Option -disable_report can be used to avoid generating this report.\n\nThis command also supports to fix specific violations by specifying a collection of violated pins. In XTop,\nthe violations on the whole net is considered even only part of the sinks are specified. So, once a pin is\nspecified, all the pins of the net will be taken into account. The timing summary and fail reason are also\nlimited to pins on the nets.\n\nWhen violated pins are specified by user, tool will automatically expand all the mirror pins of them.\n\nThis command returns the number of solutions committed.\n\nExamples\nThe following example fix glitch violations using split_net only.\n\n% fix_glitch_violations -buffer_list {BUF01 BUF03} -methods {split_net} \n      \n\nThe following example fix glitch violations using size_cell and cell_attribute as sizing rule.\n\n% set_parameter eco_cell_classify_rule cell_attribute\n% fix_glitch_violations -methods {size_cell}\n      \n\nThe following example fix glitch violations using size_cell for DFF only.\n\n% fix_glitch_violations -methods {size_cell} -dff_only\n      \n\nThe following example fix glitch violations using both split_net and size_cell on clock.\n\n% fix_glitch_violations -buffer_list {BUF01 BUF03} -on_clock\n      \n\nThe following example fix glitch violations while setting min split wire length to 50um.\n\n% fix_glitch_violations -methods {split_net} -wire_length_threshold 50\n      \n\nSee Also\nfix_fanout_violations(1) fix_wire_length_violations(1) fix_transition_violations(1)\n\n312"
            },
            {
                "doc_id": "_xtop_handbook_0237",
                "summary": "The document provides a detailed explanation of the command \"fix_hold_gba_violations\" in XTop tool. This command is used to fix hold GBA violations. It includes various options such as -buffer_list, -capacitance_margin, -debug_pins, -delay_cell_list, -dff_only, -disable_report, -dummy_only, -effort, -fix_timing_window, -group, -hold_target, -max_cluster_loader_count, -max_delay_cell_length, -only_pins, -rel_transition_margin, -setup_margin, -size_cell_only, -size_rule, -summarize_internal_iteration, -transition_margin, -use_dummy_cell, and violations. The document also provides examples of how to use the command with different options.",
                "content": "Commands\n\nName\nfix_hold_gba_violations --Fix hold GBA violations.\n\nSynopsis\nint fix_hold_gba_violations [-buffer_list buffer_names] [ -size_cell_only [-\nsize_rule rule_type] [-dff_only]] [-hold_target slack_val] [-setup_margin margin_val] [-\ntransition_margin margin_val] [-rel_transition_margin rel_margin_val] [-capacitance_margin\nmargin_val] [-effort effort_level] [-group] [-summarize_internal_iteration] [-disable_report] [-\nmax_cluster_loader_count max_count] [-fix_timing_window] [ -use_dummy_cell [-dummy_only]] [ -\nmax_delay_cell_length max_delay_cell_len -delay_cell_list delay_cell_names ] [ -only_pins\npin_list | violations ] [-debug_pins pin_list]\n\ncollection buffer_list\n\nfloat capacitance_margin\n\ncollection debug_pins\n\ncollection delay_cell_list\n\nflag dff_only\n\nflag disable_report\n\nflag dummy_only\n\nenum effort in \"low medium high ultra_high extreme_high\"\n\nflag fix_timing_window\n\nflag group\n\nfloat hold_target\n\nint max_cluster_loader_count in \"[1,6]\"\n\nint max_delay_cell_length in \"[0,5]\"\n\ncollection only_pins\n\nfloat rel_transition_margin in \"[0,0.5]\"\n\nfloat setup_margin\n\nflag size_cell_only\n\nenum size_rule in \"cell_attribute nominal_keywords nominal_regex\"\n\nflag summarize_internal_iteration\n\nfloat transition_margin\n\nflag use_dummy_cell\n\ncollection violations\n\nArguments\n-buffer_list buffer_names Buffers used to fix violations, use eco_buffer_list_for_hold if not\n\nspecified.\n\n-capacitance_margin margin_val Capacitance slack margin to be reserved with unit pF, use\neco_capacitance_slack_margin if not specified.\n\n-debug_pins pin_list XTop will print more debug log for specified pins, and abort fix\nonce all these pins have been scanned.\n\n-delay_cell_list delay_cell_names Delay buffer list to specify delay buffer.\n\n-dff_only Only size dff cells when set. If not specified, only size comb cells.\nSuggest only swapping cells using nominal_keywords.\n\n-disable_report Do NOT generate a report of violation and fail reason in workspace.\n\n-dummy_only Only insert dummy cell to fix small hold violations.\n\n-effort effort_level Effort level in optimization, default is low.\n\n-fix_timing_window Also fix timing window while fix hold violations, not work with\n-size_cell_only and when -effort is not low. Suggest using this\nfeature if many break setup fail reasons are found in summary.\n\n-group If group target pins according to interconnection and take pins in\nproportion for each iteration.\n\n-hold_target slack_val Target of hold slack with unit ns, use eco_hold_slack_target if not\nspecified.\n\n-max_cluster_loader_count Max loader number that can be clustered to one group, default is\nmax_count 1, means the function is disabled. 4 is the suggested value if user\n\nwants to use this feature.\n\n-max_delay_cell_length The maximum continuous number allowed for delay cell. When set\nmax_delay_cell_len to 0, means no constraint.\n\n-only_pins pin_list Only generate solutions on the specified pins if specified.\n\n-rel_transition_margin Relative transition slack margin to be reserved with\nrel_margin_val the value of percentage to max transition, use\n\neco_relative_transition_slack_margin if not specified, a sum of\ntransition_margin and rel_transition_margin will be actually used.\n\n-setup_margin margin_val Setup slack margin to be reserved with unit ns, use\neco_setup_slack_margin if not specified.\n\n-size_cell_only Size cell only to fix hold, and only size down.\n\n-size_rule rule_type Indicate the rule used to find candidates for sizing cells, use\neco_cell_classify_rule if not specified.\n\n-summarize_internal_iteration Summarize each internal iteration.\n\n-transition_margin margin_val Transition slack margin to be reserved with unit ns, use\neco_transition_slack_margin if not specified.\n\n-use_dummy_cell Enable use dummy cell to fix small hold violations. Parameter\neco_dummy_cell_list_for_hold(1) must also be set if this flag is\nspecified.\n\nviolations The violations of pins to fix, all if not specified.\n\nDescription\nThis command fixes hold GBA violations. For any pins, if there are paths through it, it will use the worst\nslack of paths instead of GBA slack. Generally, it is recommended to only fix violations on paths since\nGBA values are always pessimistic and will be over-fixed. But paths cannot cover all the violations, and\nit needs iterations to fix all the violations. If the concern is the completion rate, and the cost of over-fix\nis not that important, you can try this command.\n\nThis command also supports to fix specific violations by specifying a collection of violated pins. While\nthe collection of violation is specified, all fan in and fan out pins will be traced to form a sub graph to\nsearch solutions. The timing summary of timing and fail reason are also limited to the traced sub graph.\n\nAnother option -only_pins specifies the pins that solutions can be generated on. While this options is\nspecified, it behaves like that all the other pins are marked as dont touch.\n\nWhen violations or pins are specified by user, tool will automatically expand all the mirror pins of them.\n\nWe also provide an option -max_cluster_loader_count, to enable/disable cluster loader function. It is the\nlimit of how many loaders can be clustered for inserting buffer. The option is 1 by default, means the\nfunction is disabled. When enabled, tool will first try to put similar violated loaders into one group under\nthe constraint of max_cluster_loader_count, and insert buffer for it in one step. If the loaders can not be\nclustered, or not totally fixed, tool will then try insert buffer for each unfixed loader one by one, like\ndefault behavior. Note that tool does not always cluster loader at max_cluster_loader_count, but clustering\naccording to practical situation.\n\nWhen the option -fix_timing_window is specified, tool will try to size a few driver cells on the path of the\npins which setup margin are always broken, so there's a chance to get a better setup margin after sizing.\nUser can set size cell parameter, like eco_cell_classify_rule(1), or eco_cell_nominal_swap_keywords(1),\nand so on, to control sizing behavior. In next step, tool will try to fix hold violation again, so a better fix\nresult is expected.\n\nFor very small hold violations, flag -use_dummy_cell can be specified to insert a dummy cell from\neco_dummy_cell_list_for_hold(1), the purpose of which is to increase net load. If no dummy cell can\nfix, insert buffer will be automatically tried next. Meanwhile, -dummy_only can be set to only allow add\ndummy cell.\n\nBy setting max_delay_cell_length, tool will avoid inserting delay buffer successively, while delay buffer is\nrecognized by setting delay_cell_list. Existing delay buffer chain will also be considered. In this condition,\nbuffer list should contains at least 1 normal buffer.\n\nBy default, a report of violations and fail reasons is generated under the directory opt in workspace.\nThe maximum violation count is limited to 10000 since it will be time consuming if there are plenty of\nviolations remained. Option -disable_report can be used to avoid generating this report.\n\nFor detail, please refer to fix_hold_path_violations(1).\n\nExamples\nThe following example fixes hold gba violations with effort high.\n\n% fix_hold_gba_violations -effort high\n      \n\nThe following example fixes hold gba violations using buffers in buffer list.\n\n% fix_hold_gba_violations -buffer_list \"DLY01 DLY02 DLY04\"\n      \n\nThe following example fixes hold gba violations with hold target 0.005ns and setup margin 0.005ns.\n\n% set_parameter eco_hold_slack_target 0.005\n% set_parameter eco_setup_slack_margin 0.005\n% fix_hold_gba_violations\n      \n\nThe following example shows how to overwrite the hold target and setup margin to 0 and 0.01ns in this\ncommands.\n\n% set_parameter eco_hold_slack_target 0.005\n% set_parameter eco_setup_slack_margin 0.005\n% fix_hold_gba_violations -setup_margin 0.01 -hold_target 0\n      \n\nThe following example fixes hold gba violations by size_cell only.\n\n% fix_hold_gba_violations -size_cell_only\n      \n\nThe following example fixes hold gba violations by swap VT cells honoring following keywords rules.\n\n% set_parameter eco_cell_nominal_swap_keywords \\\n                {\"ULVT\" \"LVT\" \"\" \"HVT\"}\n% fix_hold_gba_violations -size_cell_only \\\n                          -size_rule nominal_keywords\n      \n\nThe following example fixes hold gba violations by size_cell honoring following regular expression rules.\n\n% set_parameter eco_cell_nominal_sizing_pattern {\"X[0-9]+TH\"}\n% fix_hold_gba_violations -size_cell_only -size_rule nominal_regex\n      \n\nThe following example fixes hold gba violations by insert buffer for max 3 clustered loaders.\n\n% fix_hold_gba_violations -buffer_list \"DLY01 DLY02 DLY04\" \n                          -max_cluster_loader_count 3\n      \nThe following example fixes hold gba violations, and uses nominal_keywords to swap cell when fix timing\nwindow.\n\n% set_parameter eco_cell_classify_rule nominal_keywords\n% set_parameter eco_cell_nominal_swap_keywords {\"HVT\" \"\" \"LVT\"}\n% fix_hold_gba_violations -buffer_list \"DLY01\" -fix_timing_window\n      \n\nThe following example fix hold gba violations only using insert dummy cell.\n\n% set_parameter eco_dummy_cell_list_for_hold {BUF02}\n% fix_hold_gba_violations -use_dummy_cell -dummy_only\n      \n\nThe following example fix hold gba violations using insert buffer as well as insert dummy cell.\n\n% set_parameter eco_dummy_cell_list_for_hold {BUF02}\n% fix_hold_gba_violations -buffer_list \"BUF01 BUF02 DLY01\" -use_dummy_cell\n      \n\nThe following example fix hold gba violation by setting max_delay_cell_length to 3.\n\n% fix_hold_gba_violations -buffer_list \"BUF01 DLY01 DEL02\"\n          -max_delay_cell_length 3 -delay_cell_list [get_lib_cells {DEL* DLY*}]\n      \n\nSee Also\nfix_hold_path_violations(1) fix_setup_gba_violations(1)\n\n317"
            },
            {
                "doc_id": "_xtop_handbook_0238",
                "summary": "The document provides a detailed explanation of the 'fix_hold_path_violations' command in XTop tool. This command is used to fix hold violations of specified paths. It includes various options such as -buffer_list, -capacitance_margin, -debug_pins, -delay_cell_list, -dff_only, -disable_report, -dummy_only, -effort, -fix_timing_window, -hold_target, -max_cluster_loader_count, -max_delay_cell_length, -only_pins, -rel_transition_margin, -setup_margin, -size_cell_only, -size_rule, -summarize_internal_iteration, -transition_margin, -use_dummy_cell, and paths. The document also provides examples of how to use this command with different options.",
                "content": "Commands\n\nName\nfix_hold_path_violations --Fix hold violations of the specified paths.\n\nSynopsis\nint fix_hold_path_violations [-buffer_list buffer_names] [ -size_cell_only [-\nsize_rule rule_type] [-dff_only]] [-hold_target slack_val] [-setup_margin margin_val] [-\ntransition_margin margin_val] [-rel_transition_margin rel_margin_val] [-capacitance_margin\nmargin_val] [-only_pins pin_list] [-debug_pins pin_list] [-effort effort_level]\n[-summarize_internal_iteration] [-disable_report] [-max_cluster_loader_count max_count] [-\nfix_timing_window] [ -use_dummy_cell [-dummy_only]] [ -max_delay_cell_length\nmax_delay_cell_len -delay_cell_list delay_cell_names ] [paths]\n\ncollection buffer_list\n\nfloat capacitance_margin\n\ncollection debug_pins\n\ncollection delay_cell_list\n\nflag dff_only\n\nflag disable_report\n\nflag dummy_only\n\nenum effort in \"low medium high ultra_high extreme_high\"\n\nflag fix_timing_window\n\nfloat hold_target\n\nint max_cluster_loader_count in \"[1,6]\"\n\nint max_delay_cell_length in \"[0,5]\"\n\ncollection only_pins\n\nfloat rel_transition_margin in \"[0,0.5]\"\n\nfloat setup_margin\n\nflag size_cell_only\n\nenum size_rule in \"cell_attribute nominal_keywords nominal_regex\"\n\nflag summarize_internal_iteration\n\nfloat transition_margin\n\nflag use_dummy_cell\n\ncollection paths\n\nArguments\n-buffer_list buffer_names Buffers used to fix violations, use eco_buffer_list_for_hold if not\n\nspecified.\n\n-capacitance_margin margin_val Capacitance slack margin to be reserved with unit pF, use\neco_capacitance_slack_margin if not specified.\n\n-debug_pins pin_list XTop will print more debug log for specified pins, and abort fix\nonce all these pins have been scanned.\n\n-delay_cell_list delay_cell_names Delay cell list to specify delay buffer.\n\n-dff_only Only size dff cells when set. If not specified, only size comb cells.\nSuggest only swapping cells using nominal_keywords.\n\n-disable_report Do NOT generate a report of violation and fail reason in workspace.\n\n-dummy_only Only insert dummy cell to fix small hold violations.\n\n-effort effort_level Effort level in optimization, default is low.\n\n-fix_timing_window Also fix timing window while fix hold violations, not work with\n-size_cell_only and when -effort is not low. Suggest using this\nfeature if many break setup fail reasons are found in summary.\n\n-hold_target slack_val Target of hold slack of this optimization action with unit ns, use\neco_hold_slack_target if not specified.\n\n-max_cluster_loader_count Max loader number that can be clustered to one group, default is\nmax_count 1, means the function is disabled. 4 is the suggested value if user\n\nwants to use this feature.\n\n-max_delay_cell_length The maximum continuous number allowed for delay cell. When set\nmax_delay_cell_len to 0, means no constraint.\n\n-only_pins pin_list Only generate solutions on the specified pins if specified.\n\n-rel_transition_margin Relative transition slack margin to be reserved with\nrel_margin_val the value of percentage to max transition, use\n\neco_relative_transition_slack_margin if not specified, a sum of\ntransition_margin and rel_transition_margin will be actually used.\n\n-setup_margin margin_val Setup slack margin to be reserved with unit ns, use\neco_setup_slack_margin if not specified.\n\n-size_cell_only Size cell only to fix hold, and only size down.\n\n-size_rule rule_type Indicate the rule used to find candidates for sizing cells, use\neco_cell_classify_rule if not specified.\n\n-summarize_internal_iteration Summarize each internal iteration.\n\n-transition_margin margin_val Transition slack margin to be reserved with unit ns, use\neco_transition_slack_margin if not specified.\n\n-use_dummy_cell Enable use dummy cell to fix small hold violations. Parameter\neco_dummy_cell_list_for_hold(1) must also be set if this flag is\nspecified.\n\npaths Paths to fix hold violations, all if not specified.\n\nDescription\nThis command fixes hold violations of the specified paths, if the paths are not specified, it will\nfix all the violated hold paths. Those paths with slack less than the unreasonable slack value\nunreasonable_negative_slack(1) , or the corresponding scenario and timing type is set as skipped will be\nignored.\n\nBy default, this command will try to fix the violated paths to slack greater than 0, and will not break the\nsetup, max transition, and max capacitance, or not to make them worse if there is already a violation.\nCommonly, this is enough since the algorithm is always a little pessimistic. However, if you really\nconcerned about the effect and there are enough resources in the design, you can over-fix it by adding\na positive target, and over-constraint the setup, transition, capacitance by adding a positive margin with\noption -hold_target, -setup_margin, -transition_margin and -capacitance_margin respectively.\n\nIf the target and margins are not specified, corresponding parameters eco_hold_slack_target(1),\neco_setup_slack_margin(1), eco_transition_slack_margin(1), and eco_capacitance_slack_margin(1) will\nbe used as default.\n\nThe most efficient method to fix hold is to insert buffer chain. To keep the consistency, the buffers can only\nbe inserted at the sinks of net, and there is a limitation eco_max_buffer_chain_length(1) on the number of\nbuffers inserted at one pin. Another way to fix hold is to size cells, and it only allows to size down here.\nIt is recommended that to fix hold by sizing cells before inserting buffers since there is no area cost, and\non the contrary, it can release some die area.\n\nWhile size cell is used, the candidates are searched in groups classified by the rule of option -size_rule. If\nthis option is not specified, eco_cell_classify_rule(1) will be used as default.\n\nOnce the fix process finished, it will report the gain obtained, area and density variations. If the violations\nare not completely fixed, the statistics of fail reasons will also be reported. Thus, you can change the policy\nor release more resources according to these reasons. The command report_fail_reasons(1) can help to\nreview the detail reasons on specified objects.\n\nThe option -effort controls the count of internal optimization iterations. The pins will be sorted by the\nviolations they covered and classified into groups with different priorities. The higher effort level, the\nmore groups will be classified. As a cost, more CPU time will be consumed in the optimization process.\nGenerally, it will result in a better optimization quality with higher effort. However, this depends on the\ntiming status, placement and routing density of the design. Sometimes, the last iteration will be inefficient,\nand waste a lot of die area. The option -summarize_internal_iteration can be turned on to review the effect\nof each internal iteration.\n\nWe also provide an option -max_cluster_loader_count, to enable/disable cluster loader function. It is the\nlimit of how many loaders can be clustered for inserting buffer. The option is 1 by default, means the\nfunction is disabled. When enabled, tool will first try to put similar violated loaders into one group under\nthe constraint of max_cluster_loader_count, and insert buffer for it in one step. If the loaders can not be\nclustered, or not totally fixed, tool will then try insert buffer for each unfixed loader one by one, like\ndefault behavior. Note that tool does not always cluster loader at max_cluster_loader_count, but clustering\naccording to practical situation.\n\nWhen the option -fix_timing_window is specified, tool will try to size a few driver cells on the path of the\npins which setup margin are always broken, so there's a chance to get a better setup margin after sizing.\n\nUser can set size cell parameter, like eco_cell_classify_rule(1), or eco_cell_nominal_swap_keywords(1),\nand so on, to control sizing behavior. In next step, tool will try to fix hold violation again, so a better fix\nresult is expect.\n\nFor very small hold violations, flag -use_dummy_cell can be specified to insert a dummy cell from\neco_dummy_cell_list_for_hold(1), the purpose of which is to increase net load. If no dummy cell can\nfix, insert buffer will be automatically tried next. Meanwhile, -dummy_only can be set to only allow add\ndummy cell.\n\nBy setting max_delay_cell_length, tool will avoid inserting delay buffer successively, while delay buffer is\nrecognized by setting delay_cell_list. Existing delay buffer chain will also be considered. In this condition,\nbuffer list should contains at least 1 normal buffer.\n\nBy default, a report of violations and fail reasons is generated under the directory opt in workspace.\nThe maximum violation count is limited to 10000 since it will be time consuming if there are plenty of\nviolations remained. Option -disable_report can be used to avoid generating this report.\n\nThis command returns the number of solutions committed.\n\nExamples\nThe following example fixes hold path violations with effort high.\n\n% fix_hold_path_violations -effort high\n      \n\nThe following example fixes hold path violations with buffers defined in buffer_list, and the max buffer\nchain's lengths is 5.\n\n% set_parameter eco_max_buffer_chain_length 5\n% fix_hold_path_violations -buffer_list \"DLY01 DLY02 DLY04\"\n      \n\nThe following example fixes hold path violations with hold target 0.005ns and setup margin 0.005ns.\n\n% set_parameter eco_hold_slack_target 0.005\n% set_parameter eco_setup_slack_margin 0.005\n% fix_hold_path_violations\n      \n\nThe following example shows how to overwrite the hold target and setup margin to 0 and 0.01ns in this\ncommands.\n\n% set_parameter eco_hold_slack_target 0.005\n% set_parameter eco_setup_slack_margin 0.005\n% fix_hold_path_violations -setup_margin 0.01 -hold_target 0\n      \n\nThe following example fixes hold violations only on specified paths.\n\n% fix_hold_path_violations [get_paths -delay_type min \\\n                           -lower_bound -1.000 -upper_bound 0.000]\n      \nThe following example fixes hold path violations by size_cell only.\n\n% fix_hold_path_violations -size_cell_only\n      \n\nThe following example fixes hold path violations by swap VT cells honoring following keywords rule.\n\n% set_parameter eco_cell_nominal_swap_keywords \\\n                {\"ULVT\" \"LVT\" \"\" \"HVT\"}\n% fix_hold_path_violations -size_cell_only \\\n                           -size_rule nominal_keywords\n      \n\nThe following example fixes hold path violations by size_cell honoring following regular expression rule.\n\n% set_parameter eco_cell_nominal_sizing_pattern {\"X[0-9]+TH\"}\n% fix_hold_path_violations -size_cell_only -size_rule nominal_regex\n      \n\nThe following example fixes hold path violations by insert buffer for max 3 clustered loaders.\n\n% fix_hold_path_violations -buffer_list \"DLY01 DLY02 DLY04\"\n                           -max_cluster_loader_count 3\n      \n\nThe following example fixes hold path violations, and uses cell_attribute as sizing rule to fix timing\nwindow.\n\n% set_parameter eco_cell_classify_rule cell_attribute\n% fix_hold_path_violations -buffer_list \"DLY01\" -fix_timing_window\n      \n\nThe following example fix hold path violations only using insert dummy cell.\n\n% set_parameter eco_dummy_cell_list_for_hold {BUF02}\n% fix_hold_path_violations -use_dummy_cell -dummy_only\n      \n\nThe following example fix hold path violations using insert buffer as well as insert dummy cell.\n\n% set_parameter eco_dummy_cell_list_for_hold {BUF02}\n% fix_hold_path_violations -buffer_list \"BUF01 BUF02 DLY01\" -use_dummy_cell\n      \n\nThe following example fix hold path violation by setting max_delay_cell_length to 3.\n\n% fix_hold_path_violations -buffer_list \"BUF01 DLY01 DEL02\"\n          -max_delay_cell_length 3 -delay_cell_list [get_lib_cells {DEL* DLY*}]\n      \n\nSee Also\nfix_hold_gba_violations(1) fix_setup_path_violations(1)\n\n323"
            },
            {
                "doc_id": "_xtop_handbook_0239",
                "summary": "The document provides a detailed explanation of the command \"fix_setup_gba_violations\" in XTop tool. This command is used to fix setup GBA violations. It includes various options such as -buffer_list, -capacitance_margin, -debug_pins, -dff_only, -disable_report, -effort, -enable_multithread, -group, -hold_margin, -methods, -only_pins, -priority_weight, -rel_transition_margin, -remove_buffer_only, -setup_target, -size_down_only, -size_rule, -summarize_internal_iteration, -transition_margin, and violations. The document also provides examples of how to use this command.",
                "content": "Commands\n\nName\nfix_setup_gba_violations --Fix setup GBA violations.\n\nSynopsis\nint fix_setup_gba_violations [-buffer_list buffer_names] [-remove_buffer_only]\n[-methods method_list] [-size_rule rule_type] [ -dff_only | {[-enable_multithread] [-\nsize_down_only]}] [-setup_target slack_val] [-hold_margin margin_val] [-transition_margin\nmargin_val] [-rel_transition_margin rel_margin_val] [-capacitance_margin margin_val] [-\neffort effort_level] [-group] [-priority_weight type_name] [-summarize_internal_iteration] [-\ndisable_report] [ -only_pins pin_list | violations ] [-debug_pins pin_list]\n\ncollection buffer_list\n\nfloat capacitance_margin\n\ncollection debug_pins\n\nflag dff_only\n\nflag disable_report\n\nenum effort in \"low medium high ultra_high extreme_high\"\n\nflag enable_multithread\n\nflag group\n\nfloat hold_margin\n\nenum_list methods in \"insert_buffer size_cell split_net\"\n\ncollection only_pins\n\nenum priority_weight in \"count delay\"\n\nfloat rel_transition_margin in \"[0,0.5]\"\n\nflag remove_buffer_only\n\nfloat setup_target\n\nflag size_down_only\n\nenum size_rule in \"cell_attribute nominal_keywords nominal_regex\"\n\nflag summarize_internal_iteration\n\nfloat transition_margin\n\ncollection violations\n\nArguments\n-buffer_list buffer_names Buffers used to fix violations, use eco_buffer_list_for_setup if not\nspecified.\n\n-capacitance_margin margin_val Capacitance slack margin to be reserved with unit pF, use\neco_capacitance_slack_margin if not specified.\n\n-debug_pins pin_list XTop will print more debug log for specified pins, and abort fix\nonce all these pins have been scanned.\n\n-dff_only Only size dff cells when set. If not specified, only size comb cells.\nSuggest only swapping cells using nominal_keywords. It works\nwith size cell alone.\n\n-disable_report Do NOT generate a report of violation and fail reason in workspace.\n\n-effort effort_level Effort level in optimization, default is low.\n\n-enable_multithread Enable multi-thread sizing comb cells. This function is disabled\nwhen use debug_pins or only_pins.\n\n-group If group target pins according to interconnection and take pins in\nproportion for each iteration.\n\n-hold_margin margin_val Hold slack margin to be reserved with unit ns, use\neco_hold_slack_margin if not specified.\n\n-methods method_list Methods used to fix setup, can be any combination of insert_buffer,\nsize_cell, and split_net, default use insert_buffer and size_cell.\n\n-only_pins pin_list Only generate solutions on specified pins if specified.\n\n-priority_weight type_name Priority weight to classify pins, for debugging purpose.\n\n-rel_transition_margin Relative transition slack margin to be reserved with\nrel_margin_val the value of percentage to max transition, use\n\neco_relative_transition_slack_margin if not specified, a sum of\ntransition_margin and rel_transition_margin will be actually used.\n\n-remove_buffer_only Remove buffer only to fix setup.\n\n-setup_target slack_val Target of setup slack with unit ns, use eco_setup_slack_target if not\nspecified.\n\n-size_down_only Only size down off-path no violation comb cell, to optimize setup\ntiming.\n\n-size_rule rule_type Indicate the rule used to find candidates for sizing cells, use\neco_cell_classify_rule if not specified.\n\n-summarize_internal_iteration Summarize each internal iteration.\n\n-transition_margin margin_val Transition slack margin to be reserved with unit ns, use\neco_transition_slack_margin if not specified.\n\nviolations The violations of pins to fix, all if not specified.\n\nDescription\nThis command fixes setup GBA violations. For any pins, if there are paths through it, it will use the worst\nslack of paths instead of GBA slack. Generally, it is recommended to only fix violations on paths since\n\nGBA values are always pessimistic and will be over-fixed. But paths cannot cover all the violations, and\nit needs iterations to fix all the violations. If the concern is the completion rate, and the cost of over-fix\nis not that important, you can try this command.\n\nThis command also supports to fix specific violations by specifying a collection of violated pins. While\nthe collection of violation is specified, all fan in and fan out pins will be traced to form a sub graph to\nsearch solutions. The timing summary of timing and fail reason are also limited to the traced sub graph.\n\nAnother option -only_pins specifies the pins that solutions can be generated on. While this options is\nspecified, it behaves like that all the other pins are marked as dont touch.\n\nWhen violations or pins are specified by user, tool will automatically expand all the mirror pins of them.\n\nBy default, a report of violations and fail reasons is generated under the directory opt in workspace.\nThe maximum violation count is limited to 10000 since it will be time consuming if there are plenty of\nviolations remained. Option -disable_report can be used to avoid generating this report.\n\n-size_down_only allows user to size down no violation off-path combinational cells, so that total\ncapacitance of net is decreased, which is good to setup timing.\n\nWhen fix setup gba violation by size cell, we can use eco_size_cell_area_change_ratio(1) to limit area\nchange, it is 6.0 if not specified.\n\nFor detail, please refer to fix_setup_path_violations(1).\n\nExamples\nThe following example fixes setup gba violations with effort high.\n\n% fix_setup_gba_violations -effort high\n      \n\nThe following example fixes setup gba violations using remove_buffer methods.\n\n% fix_setup_gba_violations -remove_buffer_only\n      \n\nThe following example fixes setup gba violations using size_cell only.\n\n% fix_setup_gba_violations -methods \"size_cell\"\n      \n\nThe following example fixes setup gba violations using both size_cell and split_net.\n\n% fix_setup_gba_violations -methods \"size_cell split_net\"\n      \n\nThe following example fixes setup path violations using size_cell only and candidates area ratio is\nconstrained to 3.0.\n\n% set_parameter eco_size_cell_area_change_ratio 3.0\n% fix_setup_path_violations -methods \"size_cell\"\n      \n\nThe following example fixes setup gba violations by size_cell honoring following keywords rule.\n\n% set_parameter eco_cell_nominal_swap_keywords \\\n                {\"ULVT\" \"LVT\" \"\" \"HVT\"}\n% fix_setup_gba_violations -methods \"size_cell\" \\\n                           -size_rule nominal_keywords\n      \n\nThe following example fixes setup gba violations by size_cell honoring following regular expression rule.\n\n% set_parameter eco_cell_nominal_sizing_pattern {X([0-9]+)TH}\n% fix_setup_gba_violations -size_rule nominal_regex \\\n                           -methods size_cell\n      \n\nThe following example fixes setup gba violations with setup target 0.005ns and hold margin -0.005ns.\n\n% set_parameter eco_setup_slack_target 0.005\n% set_parameter eco_hold_slack_margin -0.005\n% fix_setup_gba_violations\n      \n\nThe following example shows how to overwrite the setup target and hold margin to 0 and -0.01ns in this\ncommands.\n\n% set_parameter eco_setup_slack_target 0.005\n% set_parameter eco_hold_slack_margin -0.005\n% fix_setup_gba_violations -setup_target 0 -hold_margin -0.01\n    \n\nSee Also\nfix_setup_path_violations(1) fix_hold_gba_violations(1)\n\n327"
            },
            {
                "doc_id": "_xtop_handbook_0240",
                "summary": "The document provides a detailed explanation of the 'fix_setup_path_violations' command in XTop. This command is used to fix setup violations of specified paths. It includes various options such as -buffer_list, -capacitance_margin, -debug_pins, -dff_only, -disable_report, -effort, -enable_multithread, -hold_margin, -methods, -only_pins, -priority_weight, -rel_transition_margin, -remove_buffer_only, -setup_target, -size_down_only, -size_rule, -summarize_internal_iteration, -transition_margin, and paths. The document also provides examples of how to use the command.",
                "content": "Commands\n\nName\nfix_setup_path_violations --Fix setup violations of the specified paths.\n\nSynopsis\nint fix_setup_path_violations [-buffer_list buffer_names] [-remove_buffer_only]\n[-methods method_list] [-size_rule rule_type] [ -dff_only | {[-enable_multithread] [-\nsize_down_only]}] [-setup_target slack_val] [-hold_margin margin_val] [-transition_margin\nmargin_val] [-rel_transition_margin rel_margin_val] [-capacitance_margin margin_val]\n[-only_pins pin_list] [-debug_pins pin_list] [-effort effort_level] [-priority_weight\ntype_name] [-summarize_internal_iteration] [-disable_report] [paths]\n\ncollection buffer_list\n\nfloat capacitance_margin\n\ncollection debug_pins\n\nflag dff_only\n\nflag disable_report\n\nenum effort in \"low medium high ultra_high extreme_high\"\n\nflag enable_multithread\n\nfloat hold_margin\n\nenum_list methods in \"insert_buffer size_cell split_net\"\n\ncollection only_pins\n\nenum priority_weight in \"count delay\"\n\nfloat rel_transition_margin in \"[0,0.5]\"\n\nflag remove_buffer_only\n\nfloat setup_target\n\nflag size_down_only\n\nenum size_rule in \"cell_attribute nominal_keywords nominal_regex\"\n\nflag summarize_internal_iteration\n\nfloat transition_margin\n\ncollection paths\n\nArguments\n-buffer_list buffer_names Buffers used to fix violations, use eco_buffer_list_for_setup if not\n\nspecified.\n\n-capacitance_margin margin_val Capacitance slack margin to be reserved with unit pF, use\neco_capacitance_slack_margin if not specified.\n\n-debug_pins pin_list XTop will print more debug log for specified pins, and abort fix\nonce all these pins have been scanned.\n\n-dff_only Only size dff cells when set. If not specified, only size comb cells.\nSuggest only swapping cells using nominal_keywords. It works\nwith size cell alone.\n\n-disable_report Do NOT generate a report of violation and fail reason in workspace.\n\n-effort effort_level Effort level in optimization, default is low.\n\n-enable_multithread Enable multi-thread sizing comb cells. This function is disabled\nwhen use debug_pins or only_pins.\n\n-hold_margin margin_val Hold slack margin to be reserved with unit ns, use\neco_hold_slack_margin if not specified.\n\n-methods method_list Methods used to fix setup, can be any combination of insert_buffer,\nsize_cell, and split_net, default use insert_buffer and size_cell.\n\n-only_pins pin_list Only generate solutions on specified pins if specified.\n\n-priority_weight type_name Priority weight to classify pins, for debugging purpose.\n\n-rel_transition_margin Relative transition slack margin to be reserved with\nrel_margin_val the value of percentage to max transition, use\n\neco_relative_transition_slack_margin if not specified, a sum of\ntransition_margin and rel_transition_margin will be actually used.\n\n-remove_buffer_only Remove buffer only to fix setup.\n\n-setup_target slack_val Target of setup slack with unit ns, use eco_setup_slack_target if not\nspecified.\n\n-size_down_only Only size down off-path no violation comb cell, to optimize setup\ntiming.\n\n-size_rule rule_type Indicate the rule used to find candidates for sizing cells, use\neco_cell_classify_rule if not specified.\n\n-summarize_internal_iteration Summarize each internal iteration.\n\n-transition_margin margin_val Transition slack margin to be reserved with unit ns, use\neco_transition_slack_margin if not specified.\n\npaths Paths to fix setup violations, all if not specified.\n\nDescription\nThis command fixes setup violations of the specified paths, if the paths are not specified, it will\nfix all the violated setup paths. Those paths with slack less than the unreasonable slack value\nunreasonable_negative_slack(1), or the corresponding scenario and timing type is set as skipped will be\nignored.\n\nBy default, this command will try to fix the violated paths to slack greater than 0, and will not break\nthe hold, max transition, and max capacitance, or not to make them worse if there is already a violation.\n\nCommonly, this is enough since the algorithm is always a little pessimistic. However, if you really\nconcerned about the effect and there are enough resources in the design, you can over-fix it by adding\na positive target, and over-constraint the hold, transition, capacitance by adding a positive margin with\noption -setup_target, -hold_margin, -transition_margin and -capacitance_margin respectively.\n\nIf the target and margins are not specified, corresponding parameters eco_hold_slack_target(1),\neco_hold_slack_margin(1), eco_transition_slack_margin(1), and eco_capacitance_slack_margin(1) will\nbe used as default.\n\nBy default, this command uses size cell and insert buffer method, user can also specify split net for each\nscan pin, and XTop will choose the best solution among them. By default, cells are sized by matching\neco_cell_match_attribute(1). If you want to reduce the candidate cells for sizing, you can change the size\nrule to nominal_keywords or nominal_regex on demand.\n\nRemove buffer is a special method for fixing setup violations. It is especially effective for those setup\nviolations caused by buffer chains inserted by synthesis or placement and routing tools. It is recommended\nto run a separate iteration of removing buffer before any other methods.\n\nWhile sizing cells, the buffers are different from common cells. There exists a special type: delay buffer\nfor most libraries, and commonly they have different footprint with common buffers. If cells are classified\nwith cell footprint, they cannot be classified into the same group with common buffers, and of course,\nthey can not be sized to common buffers. To avoid this issue, you can build a buffer group by defining\nparameter eco_buffer_group(1).\n\nOnce the fix process finished, it will report the gain obtained, area and density variations. If the violations\nare not completely fixed, the statistics of fail reasons will also be reported. Thus, you can change the policy\nor release more resources according to these reasons. The command report_fail_reasons(1) can help to\nreview the detail reasons on specified objects.\n\nThe option -effort controls the count of internal optimization iterations. The pins will be sorted by the\ncontributions on violations and classified into groups with different priorities. The higher effort level, the\nmore groups will be classified. As a cost, more CPU time will be consumed in the optimization process.\nGenerally, it will result in a better optimization quality with higher effort. However, this depends on the\ntiming status, placement and routing density of the design. Sometimes, the last iteration will be inefficient,\nand waste a lot of die area. The option -summarize_internal_iteration can be turned on to review the effect\nof each internal iteration.\n\nBy default, a report of violations and fail reasons is generated under the directory opt in workspace.\nThe maximum violation count is limited to 10000 since it will be time consuming if there are plenty of\nviolations remained. Option -disable_report can be used to avoid generating this report.\n\n-size_down_only allows user to size down no violation off-path combinational cells, so that total\ncapacitance of net is decreased, which is good to setup timing.\n\nWhen fix setup path violation by size cell, we can use eco_size_cell_area_change_ratio(1) to limit area\nchange, it is 6.0 if not specified.\n\nThis command returns the number of solutions committed.\n\nExamples\nThe following example fixes setup path violations with effort high.\n\n% fix_setup_path_violations -effort high\n\n\nThe following example fixes setup violations only on specified paths.\n\n% fix_setup_path_violations [get_paths -delay_type max \\\n                            -lower_bound -1.000 -upper_bound 0.000]\n      \n\nThe following example fixes setup path violations using remove_buffer methods.\n\n% fix_setup_path_violations -remove_buffer_only\n      \n\nThe following example fixes setup path violations using size_cell only.\n\n% fix_setup_path_violations -methods \"size_cell\"\n      \n\nThe following example fixes setup path violations using size_cell only and candidates area ratio is\nconstrained to 3.0.\n\n% set_parameter eco_size_cell_area_change_ratio 3.0\n% fix_setup_path_violations -methods \"size_cell\"\n      \n\nThe following example fixes setup path violations using both size_cell and split_net.\n\n% fix_setup_path_violations -methods \"size_cell split_net\"\n      \n\nThe following example fixes setup path violations by size_cell honoring following keywords rule.\n\n% set_parameter eco_cell_nominal_swap_keywords \\\n                {\"ULVT\" \"LVT\" \"\" \"HVT\"}\n% fix_setup_path_violations -methods \"size_cell\" \\\n                            -size_rule nominal_keywords\n      \n\nThe following example fixes setup path violations by size_cell honoring following regular expression rule.\n\n% set_parameter eco_cell_nominal_sizing_pattern {X([0-9]+)TH}\n% fix_setup_path_violations -size_rule nominal_regex \\\n                            -methods size_cell\n      \n\nThe following example fixes setup path violations with setup target 0.005ns and hold margin -0.005ns.\n\n% set_parameter eco_setup_slack_target 0.005\n% set_parameter eco_hold_slack_margin -0.005\n% fix_setup_path_violations\n      \n\nThe following example shows how to overwrite the setup target and hold margin to 0 and -0.01ns in this\ncommands.\n\n% set_parameter eco_setup_slack_target 0.005\n% set_parameter eco_hold_slack_margin -0.005\n% fix_setup_path_violations -setup_target 0 -hold_margin -0.01\n      \n\nSee Also\nfix_setup_gba_violations(1) fix_hold_path_violations(1)\n\n332"
            },
            {
                "doc_id": "_xtop_handbook_0241",
                "summary": "The document provides detailed information about the command \"fix_si_violations\" used in XTop. This command is designed to fix SI violations in design. It includes various options such as -max_si, -on_clock, -dff_only, -buffer_list, -methods, -size_rule, -disable_report, -check_timing_margin, -wire_length_threshold, and violations. The command also supports specific violation fixes by specifying a collection of violated pins. Examples of how to use the command are also provided.",
                "content": "Commands\n\nName\nfix_si_violations --Fix SI violations in design.\n\nSynopsis\nint fix_si_violations [-max_si threshold] [ -on_clock | -dff_only ] [-buffer_list\nbuffer_inverter_names] [-methods method_list] [-size_rule rule_type] [-disable_report]\n[-check_timing_margin] [-wire_length_threshold length_threshold] [violations] [-debug_pins\npin_list]\n\ncollection buffer_list\n\nflag check_timing_margin\n\ncollection debug_pins\n\nflag dff_only\n\nflag disable_report\n\nfloat max_si in \"(0,inf)\"\n\nenum_list methods in \"size_cell split_net\"\n\nflag on_clock\n\nenum size_rule in \"cell_attribute nominal_keywords nominal_regex\"\n\nint wire_length_threshold in \"[0,200]\"\n\ncollection violations\n\nArguments\n-buffer_list buffer_inverter_names Buffers/Inverters used to fix SI violation for split_net, use buffers/\n\ninverters defined in eco_buffer_list_for_setup if not specified.\n\n-check_timing_margin Also check hold and setup margin when fix si, while margin can be\nset by eco_hold_slack_margin and eco_setup_slack_margin.\n\n-debug_pins pin_list XTop will print more debug log for specified pins, and abort fix\nonce all these pins have been scanned.\n\n-dff_only Only size dff cells when set. If not specified, only size comb cells.\nCan only work with size cell and on_clock is unused.\n\n-disable_report Do NOT generate a report of violation and fail reason in workspace.\n\n-max_si threshold Max si for delta delay with unit ns, use parameter max_si if not\nspecified.\n\n-methods method_list Methods used to fix SI, can be any combination of size_cell and\nsplit_net, all enabled by default.\n\n-on_clock Fix violations on clock only.\n\n-size_rule rule_type Indicate the rule used to find candidates for sizing cells, use\neco_cell_classify_rule if not specified.\n\n-wire_length_threshold Minimum wire length threshold allowed for a segment when split\nlength_threshold net, there's no limit by default, the unit is um.\n\nviolations The violations of pins to fix, all if not specified.\n\nDescription\nThis command fixes SI violations in design. It will try to size cell, or split net, and choose the best one\nsolution between them. By default, it only fixes violations on data paths. If want to fix violations on clock,\ntry to run a separate iteration with option -on_clock. The option -max_si specifies the restriction for delta\ndelay caused by SI, and the unit is ns. Parameter max_si(1) will be used if this option is not specified.\n\nOnce the fix process finished, it will report the solution number, area increased, and statistics of fail reason\nif violations are not fully fixed.\n\nWhen split net, using option -wire_length_threshold can avoid split short net into many segments. If the\nvalue is set too large, may have no solution.\n\nThe setup and hold timing constraint may be broken in this process. We also offer an option -\ncheck_timing_margin to add extra margin check if user do not want to break any timing margin, but\nsolution may be less if this option specified.\n\nBy default, a report of violations and fail reasons is generated under the directory opt in workspace.\nThe maximum violation count is limited to 10000 since it will be time consuming if there are plenty of\nviolations remained. Option -disable_report can be used to avoid generating this report.\n\nThis command also supports to fix specific violations by specifying a collection of violated pins. In XTop,\nthe violations on the whole net is considered even only part of the sinks are specified. So, once a pin is\nspecified, all the pins of the net will be taken into account. The timing summary and fail reason are also\nlimited to pins on the nets.\n\nWhen violated pins are specified by user, tool will automatically expand all the mirror pins of them.\n\nThis command returns the number of solutions committed.\n\nExamples\nThe following example fix SI violations using split_net only.\n\n% fix_si_violations -max_si 0.2 -buffer_list {BUF01 BUF03} -methods {split_net}\n      \n\nThe following example fix SI violations using size_cell for DFF only.\n\n% fix_si_violations -max_si 0.15 -methods {size_cell} -dff_only\n      \n\nThe following example fix SI violations using both split_net and size_cell on clock.\n\n% fix_si_violations -max_si 0.1 -buffer_list {BUF01 BUF03} -on_clock\n     \n\nThe following example fix SI violations while setting min split wire length to 50um.\n\n% fix_si_violations -methods {split_net} -wire_length_threshold 50\n      \n\nSee Also\nfix_fanout_violations(1) fix_wire_length_violations(1) fix_transition_violations(1)\n\n335"
            },
            {
                "doc_id": "_xtop_handbook_0242",
                "summary": "This is a detailed documentation of the command \"fix_transition_violations\" in XTop tool. The command is used to fix transition violations in design. It provides various options such as \"-on_clock\", \"-dff_only\", \"-buffer_list\", \"-methods\", \"-size_rule\", \"-transition_target\", \"-transition_margin\", \"-rel_transition_margin\", \"-capacitance_margin\", \"-disable_report\", \"-check_timing_margin\", and \"violations\". The document also includes descriptions of each argument, usage examples, and related commands.",
                "content": "Commands\n\nName\nfix_transition_violations --Fix transition violations in design.\n\nSynopsis\nint fix_transition_violations [ -on_clock | -dff_only ] [-buffer_list buffer_names]\n[-methods method_list] [-size_rule rule_type] [-transition_target slack_val] [-\ntransition_margin margin_val] [-rel_transition_margin rel_margin_val] [-capacitance_margin\nmargin_val] [-disable_report] [-check_timing_margin] [violations] [-debug_pins pin_list]\n\ncollection buffer_list\n\nfloat capacitance_margin\n\nflag check_timing_margin\n\ncollection debug_pins\n\nflag dff_only\n\nflag disable_report\n\nenum_list methods in \"insert_buffer size_cell split_net\"\n\nflag on_clock\n\nfloat rel_transition_margin in \"[0,0.5]\"\n\nenum size_rule in \"cell_attribute nominal_keywords nominal_regex\"\n\nfloat transition_margin\n\nfloat transition_target\n\ncollection violations\n\nArguments\n-buffer_list buffer_names Buffers or inverters used to fix violations (inverters only for\n\nsplit_net), use eco_buffer_list_for_setup if not specified.\n\n-capacitance_margin margin_val Capacitance slack margin to be reserved with unit pF, use\neco_capacitance_slack_margin if not specified.\n\n-check_timing_margin Also check hold and setup margin when fix transition, while margin\ncan be set by eco_hold_slack_margin and eco_setup_slack_margin.\n\n-debug_pins pin_list XTop will print more debug log for specified pins, and abort fix\nonce all these pins have been scanned.\n\n-dff_only Only size dff cells when set. If not specified, only size comb cells.\nCan only work with size cell and on_clock is unused.\n\n-disable_report Do NOT generate a report of violation and fail reason in workspace.\n\n-methods method_list Methods used to fix transition, can be any combination of\ninsert_buffer, size_cell, and split_net, all enabled by default.\n\n-on_clock Fix violations on clock only.\n\n-rel_transition_margin Relative transition slack margin to be reserved with\nrel_margin_val the value of percentage to max transition, use\n\neco_relative_transition_slack_margin if not specified, a sum of\ntransition_margin and rel_transition_margin will be actually used.\n\n-size_rule rule_type Indicate the rule used to find candidates for sizing cells, use\neco_cell_classify_rule if not specified.\n\n-transition_margin margin_val Transition slack margin to be reserved with unit ns, use\neco_transition_slack_margin if not specified.\n\n-transition_target slack_val Target of transition slack with unit ns, use\neco_transition_slack_target if not specified.\n\nviolations The violations of pins to fix, all if not specified.\n\nDescription\nThis command fixes transition violations in design. It will try to size cell, insert buffer, and split net by\ndefault, and choose the best one from them. By default, it only fixes violations on data paths. If want to\nfix violations on clock, try to run a separate iteration with option -on_clock.\n\nBy default, this command will try to fix the violations to slack greater than 0, and will not break the\nmax capacitance constraint, and max transition constraint of those nets that affected by this eco action\nindirectly. Commonly, this is enough since the algorithm is always a little pessimistic. However, if you\nreally concerned about the effect and there are enough resources in the design, you can over-fix it by\nadding a positive target, and over-constraint the transition, capacitance by adding a positive margin with\noption -transition_target, -transition_margin and -capacitance_margin respectively.\n\nIf the target and margins are not specified, corresponding parameters eco_transition_slack_target(1),\neco_transition_slack_margin(1), and eco_capacitance_slack_margin(1) will be used as default.\n\nWhen using split net, tool will try best to satisfy the constraint by target and margin. There is an internal\nlimit which do not allow split exhaustively, caused by unrealistic target and margin.\n\nThe setup and hold timing constraint may be broken in this process. However, the impact will be considered\ntogether with the area cost, and the transition gain, and will be optimized as small as possible. We also\noffer an option -check_timing_margin to add extra margin check if user do not want to break any timing\nmargin, but solution may be less if this option specified.\n\nBy default, cells are sized by matching eco_cell_match_attribute(1). If you want to reduce the candidate\ncells for sizing, you can change the size rule to nominal_keywords or nominal_regex on demand.\n\nOnce the fix process finished, it will report the gain obtained, area and density variations. If the violations\nare not completely fixed, the statistics of fail reasons will also be reported. Thus, you can change the policy\nor release more resources according to these reasons. The command report_fail_reasons(1) can help to\nreview the detail reasons on specified objects.\n\nBy default, a report of violations and fail reasons is generated under the directory opt in workspace.\nThe maximum violation count is limited to 10000 since it will be time consuming if there are plenty of\nviolations remained. Option -disable_report can be used to avoid generating this report.\n\nThis command also supports to fix specific violations by specifying a collection of violated pins. In XTop,\nthe violations on the whole net is considered even only part of the sinks are specified. So, once a pin is\nspecified, all the pins of the net will be taken into account. The timing summary and fail reason are also\nlimited to pins on the nets.\n\nWhen violated pins are specified by user, tool will automatically expand all the mirror pins of them.\n\nThis command returns the number of solutions committed.\n\nExamples\nThe following example uses size cell and split net methods to fix transition violations.\n\n% fix_transition_violations -methods {size_cell split_net}\n      \n\nThe following example fix transition violations only size DFF cells.\n\n% fix_transition_violations -methods {size_cell} -dff_only\n      \n\nThe following example only fixes transition violations on clock path.\n\n% fix_transition_violations -on_clock\n      \n\nThe following example over-fixes transition violations to 0.02ns.\n\n% fix_transition_violations -transition_target 0.02\n      \n\nThe following example over-constraints the transition 0.01ns and capacitance by 0.01pF.\n\n% fix_transition_violations -transition_margin 0.01 \\\n                            -capacitance_margin 0.01\n      \n\nThe following example uses nominal keywords defined in parameter eco_cell_nominal_sizing_pattern for\nsizing cells to fix transition violations.\n\n% set_parameter eco_cell_nominal_sizing_pattern {X([0-9]+)TH}\n% fix_transition_violations -size_rule nominal_regex \\\n                            -methods \"size_cell\"\n      \n\nThe following example only fixes transition violations of net connected topin U316/Z and U395/Z, and\nalso check timing margin.\n\n% fix_transition_violations {U316/Z U395/Z} -check_timing_margin\n\n      \n\nSee Also\nfix_capacitance_violations(1) fix_setup_path_violations(1) fix_hold_path_violations(1)\n\n339"
            },
            {
                "doc_id": "_xtop_handbook_0243",
                "summary": "The document provides information about the 'fix_violations_by_clock_eco' command in XTop tool. This command is used to fix setup or hold violations by applying eco operations on clock. It includes options such as '-setup', '-hold', '-buffer', '-count', '-auto_scan', '-commit_separately', '-trace_level', '-gain_ratio', '-setup_wns_threshold', and '-hold_wns_threshold'. The document also provides examples of how to use the command with different options.",
                "content": "Commands\n\nName\nfix_violations_by_clock_eco --Fix setup or hold violations by applying eco operations on clock.\n\nSynopsis\nfix_violations_by_clock_eco { -setup | -hold } -buffer buffer_name [-count num]\n[-auto_scan] [-commit_separately] [-trace_level num] [-gain_ratio num] [-setup_wns_threshold\nsetup_wns_threshold] [-hold_wns_threshold hold_wns_threshold]\n\nflag auto_scan\n\ncollection buffer\n\nflag commit_separately\n\nint count in \"[1,10]\"\n\nint gain_ratio in \"[1,inf)\"\n\nflag hold\n\nfloat hold_wns_threshold\n\nflag setup\n\nfloat setup_wns_threshold\n\nint trace_level in \"[0,10]\"\n\nArguments\n-auto_scan Run in auto-scan mode to commit the optimal solutions within max\n\ntrace level and max buffer count.\n\n-buffer buffer_name Clock buffer or inverter used to optimize violations.\n\n-commit_separately Commit the solutions separately when update timing.\n\n-count num Count of buffers or inverter pairs to form the basic unit of chain.\nThe default count is 1.\n\n-gain_ratio num Minimum gain ratio to filter the solutions. The default gain ratio\nis 1.\n\n-hold Fix hold violations.\n\n-hold_wns_threshold This threshold is to prevent Hold timing WNS from getting worse.\nhold_wns_threshold\n\n-setup Fix setup violations.\n\n-setup_wns_threshold This threshold is to prevent Setup timing WNS from getting worse.\nsetup_wns_threshold\n\n-trace_level num Maximum levels that allowed to trace back in analysis. The default\ntrace level is 5.\n\nDescription\nThis command fixes setup or hold violations by applying eco operations on clock. This command is a\ncombination of analysis and committing. Please refer to clock_eco_analysis(1) and commit_clock_eco(1)\nfor detail.\n\nWhen option auto_scan specified, it will scan from 1 to max trace level and try delay from 1 to max buffer\ncount, commit the optimal solutions with the best total gain. It may take a long time, if the max trace level\nand max buffer count are large.\n\nExamples\nThe following example fixes hold violation by clock eco.\n\n% fix_violations_by_clock_eco -buffer CKBUFF1 -hold\n      \n\nThe following example fixes setup violation by clock eco and sets the basic unit buffer chain to 2.\n\n% fix_violations_by_clock_eco -buffer CKBUFF1 -setup  -count 2\n      \n\nThe following example fixes setup violation by clock eco and sets the maximum allowed trace level to 4.\n\n% fix_violations_by_clock_eco -buffer CKBUFF1 -setup  -trace_level 4\n      \n\nThe following example fixes setup violation by clock eco and sets gain ratio to 3 to filter solutions.\n\n% fix_violations_by_clock_eco -buffer CKBUFF1 -setup -gain_ratio 3\n      \n\nThe following example fixes hold violation by clock eco and sets gain ratio to 3 to filter solutions.\nMoreover, auto scans optimal solutions within max trace level of 10 and max buffer count of 5.\n\n% fix_violations_by_clock_eco -buffer CKBUFF1 -hold -trace_level 10 -count 5 -gain_ratio 3 -auto_scan\n      \n\n341"
            },
            {
                "doc_id": "_xtop_handbook_0244",
                "summary": "This is a description of the 'fix_wire_length_violations' command in XTop. It includes options such as '-buffer_list', '-max_wire_length', '-on_clock', '-disable_report', and 'violations'. This command is used to fix wire length violations in design by splitting the net to keep wire length less than a user-defined threshold. It can generate a report of violations and fail reasons, and also supports fixing specific violations by specifying a collection of violated pins.",
                "content": "Commands\n\nName\nfix_wire_length_violations --Fix wire length violations in design.\n\nSynopsis\nint fix_wire_length_violations [-buffer_list buffer_inverter_names] [-\nmax_wire_length threshold] [-on_clock] [-disable_report] [violations] [-debug_pins\npin_list]\n\ncollection buffer_list\n\ncollection debug_pins\n\nflag disable_report\n\nint max_wire_length in \"[10,inf)\"\n\nflag on_clock\n\ncollection violations\n\nArguments\n-buffer_list buffer_inverter_names Buffers/Inverters used to fix wire length violations, use buffers/\n\ninverters defined in eco_buffer_list_for_setup if not specified.\n\n-debug_pins pin_list XTop will print more debug log for specified pins, and abort fix\nonce all these pins have been scanned.\n\n-disable_report Do NOT generate a report of violation and fail reason in workspace.\n\n-max_wire_length threshold Max wire length threshold with unit um, use parameter\nmax_wire_length if not specified.\n\n-on_clock Fix violations on clock only.\n\nviolations The violations of pins to fix, all if not specified.\n\nDescription\nThis command fixes wire length violations in design. It will try to split net, to keep wire length less than\nthe max wire length threshold defined by user. If this option is not set, it will use the value of parameter\nmax_wire_length(1). The unit of wire length is micro meter.\n\nOnce the fix process finished, it will report the solution number, area increased, and statistics of fail reason\nif violations are not fully fixed.\n\nBy default, a report of violations and fail reasons is generated under the directory opt in workspace.\nThe maximum violation count is limited to 10000 since it will be time consuming if there are plenty of\nviolations remained. Option -disable_report can be used to avoid generating this report.\n\nThis command also supports to fix specific violations by specifying a collection of violated pins. The\nsummary and fail reason are also limited to specified pins. Here, the driver pin is used to represent a net\nin order to interface with other commands.\n\nWhen violated pins are specified by user, tool will automatically expand all the mirror pins of them.\n\nThis command returns the number of solutions committed.\n\nExamples\nThe following example fix long wire violations.\n\n% fix_wire_length_violations -max_wire_length 4096 -buffer_list {BUF01 BUF03}\n      \n\nThe following example fix long wire violations on clock only.\n\n% fix_wire_length_violations -buffer_list {BUF01 BUF0} -on_clock\n      \n\nThe following example fix long wire violations on pin U384/ZN.\n\n% fix_wire_length_violations {U384/ZN}\n      \n\nSee Also\nfix_fanout_violations(1)\n\n343"
            },
            {
                "doc_id": "_xtop_handbook_0245",
                "summary": "This document provides a detailed explanation of the 'get_failed_pins' command in XTop. It includes the command's name, synopsis, arguments, description, and examples. The command is used to get pins of the specified fail reasons and ECO methods. The arguments include '-methods method_list' and '-reasons reason_list'. The document also provides examples of how to use the command.",
                "content": "Commands\n\nName\nget_failed_pins --Get pins of the specified fail reasons and ECO methods.\n\nSynopsis\ncollection get_failed_pins [-methods method_list] -reasons reason_list\n\nenum_list methods in \"insert_buffer size_cell split_net remove_buffer\"\n\nstring_list reasons\n\nArguments\n-methods method_list The methods to check the fail reasons, all if not specified.\n\n-reasons reason_list Wildcard patterns to match the fail reasons.\n\nDescription\nThis command gets pins of the specified fail reasons and ECO methods. In XTop, all the fail reasons are\nmarked on pins, though some reasons seem should be marked on cells and nets. To get the pins or nets,\nuse commands get_cells(1) and get_nets(1) with option -of_objects on the returned pin collection.\n\nNotice that at the beginning of every optimization iterations, the marked reasons will be cleaned up, and\ncannot be accumulated.\n\nExamples\nThe following example gets all fail_to_legalize pins of all ECO methods and highlights them on layout.\n\n% set fail_legal_pins [get_failed_pins -reasons fail_to_legalize]\n\"U105/ZN\", \"U110/ZN\"\n% highlight_objects $fail_legal_pins\n      \n\nThe following example gets pins of fail reason dont_touch_pin of size_cell.\n\n% get_failed_pins -reasons dont_touch_pin -methods size_cell\n\"U105/ZN\"\n      \n\n344"
            },
            {
                "doc_id": "_xtop_handbook_0246",
                "summary": "The document provides information about the 'get_rank_pins' command in XTop tools. This command creates a collection of pins with a specified rank range. It has two arguments: '-by way_to_range' which specifies the way that range represents, and 'range' which sets the range of rank value to return rank pin. The document also includes examples of how to use the command.",
                "content": "Commands\n\nName\nget_rank_pins --Create a collection of pins with given rank condition.\n\nSynopsis\ncollection get_rank_pins [-by way_to_range] range\n\nenum by in \"rank order percentage\"\n\nstring range\n\nArguments\n-by way_to_range Specify the way that range represents.\n\nrange Set the range of rank value that used to return rank pin.\n\nDescription\nThis command create a collection of pins with given range, nothing will be returned if no rank marked\non pin.\n\nOnly the most recent rank type marked will be used. It is suggested to re-mark rank type if any eco action\ncommitted.\n\nInput pins will be returned if hold marked, otherwise, output pins are returned.\n\nA correct range should be like {(lowLimit, highLimit)}. When range is defined by percentage, it should\nbetween [0, 1.0]. When range is defined by order, the order index starts from 1.\n\nExamples\nThe following example shows how to get rank pins of first 10%.\n\n% get_rank_pins {(0,0.1)}\n\"clk_gen_u0/sync_u1/U1/Q\", \"clk_gen_u0/sync_u1/U0/Q\", ...\n      \n\nThe following example shows how to get rank pins of index number between 5 and 8.\n\n% get_rank_pins -by order {(5,8)}\n\"sram_1_reg1/Q\", \"sram_2_reg1/Q\", \"sram_and_1/Z\", \"sram_1_reg2/Q\"\n      \n\nThe following example shows how to get rank pins that rank value between 3.0 and 3.1.\n\n% get_rank_pins -by rank {(3.0,3.1)}\n\"alu/U129/ZN\", \"alu/U4/ZN\", \"alu/U127/ZN\", ...\n      \nSee Also\nmark_hold_gba_pin_rank(1) mark_setup_gba_pin_rank(1) report_pin_rank(1) summarize_pin_rank(1)\n\n346"
            },
            {
                "doc_id": "_xtop_handbook_0247",
                "summary": "This is a description of the \"list_fail_reasons\" command in XTop. It includes options such as \"-with_description\" and \"patterns\". The command lists defined fail reasons that match a specified pattern, with the option to include a short description of each matched fail reason.",
                "content": "Commands\n\nName\nlist_fail_reasons --List defined fail reasons that matched with specified pattern.\n\nSynopsis\nlist_fail_reasons [-with_description] [patterns]\n\nflag with_description\n\nstring_list patterns\n\nArguments\n-with_description Print a short description of each matched fail reason.\n\npatterns Wildcard patterns to match the fail reasons.\n\nDescription\nThis command lists defined fail reasons that matched with the specified pattern. If no pattern is specified,\nall defined reasons will be listed. The pattern is matched by wildcard.\n\nExamples\nThe following example lists all eco fail reasons in XTop.\n\n% list_fail_reasons\n      \n\nThe following example lists defined fail reasons with short description that matched with break_hold*.\n\n% list_fail_reasons -with_description break_hold*\nbreak_hold\n  - Break hold while apply current solution.\nbreak_hold_of_driver\n  - Current solution breaks the hold of the driver cell.\n      \n\n347"
            },
            {
                "doc_id": "_xtop_handbook_0248",
                "summary": "The document provides information about the command \"mark_area_pin_rank\" used for setting pin's rank type for design area optimization in XTop tools. It details the syntax, arguments, description, and examples of usage. The command offers different rank types including area, count, margin, congestion, congestionReverse, areaCount, and deltaAreaDelay. The command is automatically called in the optimize area process, unless specified otherwise by the user.",
                "content": "Commands\n\nName\nmark_area_pin_rank --Set pin's rank type for design area optimization.\n\nSynopsis\nmark_area_pin_rank -type rank_type [cells] [-pattern str]\n\nstring pattern\n\nenum type in \"area count margin congestion congestionReverse areaCount deltaAreaDelay\"\n\ncollection cells\n\nArguments\n-pattern str Pattern for sizing down cell, use eco_cell_nominal_sizing_pattern(1) if not\n\nspecified, only needed when rank type is deltaAreaDelay.\n\n-type rank_type Define rank type to calculate rank value for design area optimization.\n\ncells Cells that will be considered, all if not specified.\n\nDescription\nThis command will define the criteria for calculating rank value of each pin, which is used to handle pin's\narea optimization priority. So that when -effort option is not low, we can put all pins to different groups, for\na better optimization result. Basically, the default rank type is good enough for most cases, user can change\nthe rank type according to their need. Only output pins which are possible to optimize will be marked.\n\nThe option -type defines different rank type for calculating pin's rank. We now offer following type for\nthe command:\n\n--area: pin's library cell area.\n\n--count: it is the sum of non-violated endpoint's weight, that in the downstream of current pin, where the\nweight of each endpoint is set to 1.0, higher priority if the pin has less impact to those endpoints.\n\n--margin: pin's setup margin, higher priority for better margin.\n\n--congestion: pin's congestion ratio.\n\n--congestionReverse: reversed order of congestion.\n\n--areaCount: pin's area rank, divided by count rank.\n\n--deltaAreaDelay: cell sizing down pattern must be available before mark this rank type, and assume\nswapping original cell to last candidate, rank is calculated using delta of liberty cell area, divided by\ncorresponding delta of liberty delay.\n\nWhen option cells specified, only output pins of cells will be considered. If need to optimize these cells,\nthey should also be added to optimize command.\n\nWhen the command is not explicitly called by user, default rank type is count. Otherwise, the marked rank\ntype is used. In both cases, the command will always be called automatically in optimize area process,\nif effort is not low.\n\nOld pin rank will be cleared when the command is called.\n\nWe guarantee that pin with larger rank value always has higher priority. So for some rank type, rank value\nwill be the opposite number of its original one.\n\nExamples\nThe following example set rank type to setup margin, and pin with a better setup margin will have higher\npriority.\n\n% mark_area_pin_rank -type margin\n      \n\nSee Also\nmark_leakage_pin_rank(1)\n\n349"
            },
            {
                "doc_id": "_xtop_handbook_0249",
                "summary": "The document provides information about the command \"mark_dynamic_pin_rank\" used for setting pin's rank type for dynamic power optimization. It explains the usage, arguments, and options of the command. The options include different rank types such as dynamic, count, margin, congestion, and congestionReverse. The command is used to define the criteria for calculating the rank value of each pin for dynamic optimization priority.",
                "content": "Commands\n\nName\nmark_dynamic_pin_rank --Set pin's rank type for dynamic power optimization.\n\nSynopsis\nmark_dynamic_pin_rank -type rank_type [cells]\n\nenum type in \"dynamic count margin congestion congestionReverse\"\n\ncollection cells\n\nArguments\n-type rank_type Define rank type to calculate rank value for dynamic power optimization.\n\ncells Cells that will be considered, all if not specified.\n\nDescription\nThis command will define the criteria for calculating rank value of each pin, which is used to handle pin's\ndynamic optimization priority. So that when -effort option is not low, we can put all pins to different groups,\nfor a better optimization result. Basically, the default rank type is good enough for most cases, user can\nchange the type according to their need. Only output pins which are possible to optimize will be marked.\n\nThe option -type defines different rank type for calculating pin's rank. We now offer following type for\nthe command:\n\n--dynamic: pin's library cell dynamic power.\n\n--count: it is the sum of non-violated endpoint's weight, that in the downstream of current pin, where the\nweight of each endpoint is set to 1.0, higher priority if the pin has less impact to those endpoints.\n\n--margin: pin's setup margin, higher priority for better margin.\n\n--congestion: pin's congestion ratio.\n\n--congestionReverse: reversed order of congestion.\n\nWhen option cells specified, only output pins of cells will be considered. If need to optimize these cells,\nthey should also be added to optimize command.\n\nWhen the command is not explicitly called by user, default rank type is count. Otherwise, the marked\nrank type is used. In both cases, the command will always be called automatically in optimize dynamic\nprocess, if the effort is not low.\n\nOld pin rank will be cleared when the command is called.\n\nWe guarantee that pin with larger rank value always has higher priority. So for some rank type, rank value\nwill be the opposite number of its original one.\n\nExamples\nThe following example set rank type to congestion, and optimize dynamic power.\n\n% mark_dynamic_pin_rank -type congestion\n% optimize_dynamic_power -effort high\n      \n\nSee Also\nmark_leakage_pin_rank(1) mark_area_pin_rank(1)\n\n351"
            },
            {
                "doc_id": "_xtop_handbook_0250",
                "summary": "The document provides information about the command \"mark_hold_gba_pin_rank\" used to set a pin's rank type for hold gba fix. It explains the usage, arguments, and different rank types such as \"count\", \"countSlack\", \"slack\", \"si\", \"siReverse\", \"margin\", \"congestion\", and \"congestionReverse\". It also mentions that the command will be automatically called in the fix hold gba process unless the effort is low.",
                "content": "Commands\n\nName\nmark_hold_gba_pin_rank --Set pin's rank type for hold gba fix.\n\nSynopsis\nmark_hold_gba_pin_rank -type rank_type [pins]\n\nenum type in \"count countSlack slack si siReverse margin congestion congestionReverse\"\n\ncollection pins\n\nArguments\n-type rank_type Define rank type to calculate rank value for hold gba fix.\n\npins Pins that will be marked, all if not specified.\n\nDescription\nThis command will define the criteria for calculating rank value of each pin, which is used to handle pin's\nhold fix priority. So that when -effort option is not low, we can put all pins to different groups, for a better\noptimization result. Basically, the default rank type is good enough for most cases, user can change the\nrank type according to their need. Only input pins with violation will be marked in this command.\n\nThe option -type defines different rank type for calculating pin's rank. We now offer following type for\nthe command:\n\n--count: it is the sum of violated endpoint's weight, that in the downstream of current pin, where the weight\nof each endpoint is set to 1.0, higher priority if the pin is more significant to fix those violations.\n\n--countSlack: same as count, but setting violated weight to endpoint's slack instead of 1.0.\n\n--si: pin's SI value.\n\n--siReverse: reversed order of si.\n\n--margin: pin's setup margin, higher priority for better margin.\n\n--slack: pin's hold slack, start from the worst one.\n\n--congestion: pin's congestion ratio.\n\n--congestionReverse: reversed order of congestion.\n\nWhen option pins specified, all fanin and fanout will be traced. If need to fix only these pins, they should\nalso be added to fix command.\n\nWhen the command is not explicitly called by user, default rank type is count. Otherwise, the marked rank\ntype is used. In both cases, the command will always be called automatically in fix hold gba process, if\neffort is not low.\n\nOld pin rank will be cleared when the command is called.\n\nWe guarantee that pin with larger rank value always has higher priority. So for some rank type, rank value\nwill be adjusted to the opposite number of its original one.\n\nExamples\nThe following example set rank type to congestion for hold gba fix.\n\n% mark_hold_gba_pin_rank -type congestion\n      \n\nSee Also\nmark_hold_path_pin_rank(1)\n\n353"
            },
            {
                "doc_id": "_xtop_handbook_0251",
                "summary": "The document provides information about the command \"mark_hold_path_pin_rank\" used to set a pin's rank type for hold path fix. It explains the usage, arguments, and different rank types such as \"count\", \"countSlack\", \"si\", \"siReverse\", \"margin\", \"congestion\", and \"congestionReverse\". It also mentions that the command will be automatically called in the fix hold path process unless the effort is low.",
                "content": "Commands\n\nName\nmark_hold_path_pin_rank --Set pin's rank type for hold path fix.\n\nSynopsis\nmark_hold_path_pin_rank -type rank_type [paths]\n\nenum type in \"count countSlack si siReverse margin congestion congestionReverse\"\n\ncollection paths\n\nArguments\n-type rank_type Define rank type to calculate rank value for hold path fix.\n\npaths Paths that will be included, all if not specified.\n\nDescription\nThis command will define the criteria for calculating rank value of each pin, which is used to handle pin's\nhold fix priority. So that when -effort option is not low, we can put all pins on paths to different groups,\nfor a better optimization result. Basically, the default rank type is good enough for most cases, user can\nchange the rank type according to their need. Only input pins on path will be marked in this command.\n\nThe option -type defines different rank type for calculating pin's rank. We now offer following type for\nthe command:\n\n--count: path number through this pin.\n\n--countSlack: accumulated path slack of all paths through this pin.\n\n--si: pin's SI value.\n\n--siReverse: reversed order of si.\n\n--margin: pin's setup margin, higher priority for better margin.\n\n--congestion: pin's congestion ratio.\n\n--congestionReverse: reversed order of congestion.\n\nWhen option paths specified, only pins on these paths will be marked. These paths should also be added\nto fix command if only need to fix them.\n\nWhen the command is not explicitly called by user, default rank type is count. Otherwise, the marked rank\ntype is used. In both cases, the command will always be called automatically in fix hold path process, if\neffort is not low.\n\nOld pin rank will be cleared when the command is called.\n\nWe guarantee that pin with larger rank value always has higher priority. So for some rank type, rank value\nwill be adjusted to the opposite number of its original one.\n\nExamples\nThe following example set rank type to count for hold path fix.\n% mark_hold_path_pin_rank -type count\n      \nSee Also\nmark_hold_gba_pin_rank(1)\n\n355"
            },
            {
                "doc_id": "_xtop_handbook_0252",
                "summary": "The document provides information about the 'mark_leakage_pin_rank' command used for setting pin's rank type for leakage power optimization. It includes various options such as '-type rank_type' to define rank type, '-keywords name_list' for swapping cells, and 'cells' to specify cells to be considered. The command defines the criteria for calculating rank value of each pin, which is used to handle pin's leakage optimization priority. Different rank types like 'leakage', 'count', 'margin', 'congestion', 'congestionReverse', 'leakageCount', 'deltaLeakageDelay' are also explained.",
                "content": "Commands\n\nName\nmark_leakage_pin_rank --Set pin's rank type for leakage power optimization.\n\nSynopsis\nmark_leakage_pin_rank -type rank_type [cells] [-keywords name_list]\n\nstring_list keywords\n\nenum type in \"leakage count margin congestion congestionReverse leakageCount deltaLeakageDelay\"\n\ncollection cells\n\nArguments\n-keywords name_list Keywords for swapping cells, use eco_cell_nominal_swap_keywords(1) if\n\nnot specified, only needed when rank type is deltaLeakageDelay.\n\n-type rank_type Define rank type to calculate rank value for leakage power optimization.\n\ncells Cells that will be considered, all if not specified.\n\nDescription\nThis command will define the criteria for calculating rank value of each pin, which is used to handle\npin's leakage optimization priority. So that when -effort option is not low, we can put all pins to different\ngroups, for a better optimization result. Basically, the default rank type is good enough for most cases,\nuser can change the rank type according to their need. Only output pins which are possible to optimize\nwill be marked.\n\nThe option -type defines different rank type for calculating pin's rank. We now offer following type for\nthe command:\n\n--leakage: pin's library cell leakage power.\n\n--count: it is the sum of non-violated endpoint's weight, that in the downstream of current pin, where the\nweight of each endpoint is set to 1.0, higher priority if the pin has less impact to those endpoints.\n\n--margin: pin's setup margin, higher priority for better margin.\n\n--congestion: pin's congestion ratio.\n\n--congestionReverse: reversed order of congestion.\n\n--leakageCount: pin's leakage rank, divided by count rank.\n\n--deltaLeakageDelay: cell swapping keywords must be available before mark this rank type, and assume\nswapping original cell to last candidate, rank is calculated using delta of liberty leakage power, divided\nby corresponding delta of liberty delay.\n\nWhen option cells specified, only output pins of cells will be considered. If need to optimize these cells,\nthey should also be added to optimize command.\n\nWhen the command is not explicitly called by user, default rank type is count. Otherwise, the marked rank\ntype is used. In both cases, the command will always be called automatically in optimize leakage process,\nif effort is not low.\n\nOld pin rank will be cleared when the command is called.\n\nWe guarantee that pin with larger rank value always has higher priority. So for some rank type, rank value\nwill be the opposite number of its original one.\n\nExamples\nThe following example set rank type to deltaLeakageDelay, and optimize using preset swap keywords.\n\n% set_parameter eco_cell_nominal_swap_keywords {\"LVT\" \"\" \"HVT\"}\n% mark_leakage_pin_rank -type deltaLeakageDelay\n% optimize_leakage_power -effort high\n      \n\nSee Also\nmark_area_pin_rank(1)\n\n357"
            },
            {
                "doc_id": "_xtop_handbook_0253",
                "summary": "The document provides information about the command \"mark_setup_gba_pin_rank\" used to set the rank type for setup gba fix. It explains the different rank types available such as count, countSlack, countDelay, si, siReverse, margin, congestion, congestionReverse, transition, fanout, and wireLength. The command is used to calculate the rank value of each pin, which is used to handle pin's setup fix priority. The document also provides examples of how to use the command.",
                "content": "Commands\n\nName\nmark_setup_gba_pin_rank --Set pin's rank type for setup gba fix.\n\nSynopsis\nmark_setup_gba_pin_rank -type rank_type [pins]\n\nenum type in \"count countSlack countDelay slack si siReverse margin congestion congestionReverse\ntransition fanout wireLength\"\n\ncollection pins\n\nArguments\n-type rank_type Define rank type to calculate rank value for setup gba fix.\n\npins Pins that will be marked, all if not specified.\n\nDescription\nThis command will define the criteria for calculating rank value of each pin, which is used to handle pin's\nsetup fix priority. So that when -effort option is not low, we can put all pins to different groups, for a better\noptimization result. Basically, the default rank type is good enough for most cases, user can change the\nrank type according to their need. Only output pins with violation will be marked in this command.\n\nThe option -type defines different rank type for calculating pin's rank. We now offer following type for\nthe command:\n\n--count: it is the sum of violated endpoint's weight, that in the downstream of current pin, where the weight\nof each endpoint is set to 1.0, higher priority if the pin is more significant to fix those violations.\n\n--countSlack: same as count rank, but setting violated weight to endpoint's slack instead of 1.0.\n\n--countDelay: using count rank, and multiplying corresponding pin's liberty cell delay.\n\n--si: pin's SI value.\n\n--siReverse: reversed order of si.\n\n--margin: pin's hold margin, higher priority for better margin.\n\n--slack: pin's setup slack, start from the worst one.\n\n--congestion: pin's congestion ratio.\n\n--congestionReverse: reversed order of congestion.\n\n--transition: pin's transition.\n\n--fanout: pin's fanout number.\n\n--wireLength: pin's corresponding wire length.\n\nWhen option pins specified, all fanin and fanout will be traced. If need to fix only these pins, they should\nalso be added to fix command.\n\nWhen the command is not explicitly called by user, default rank type is countDelay. Otherwise, the marked\nrank type is used. In both cases, the command will always be called automatically in fix setup gba process,\nif effort is not low.\n\nOld pin rank will be cleared when the command is called.\n\nWe guarantee that pin with larger rank value always has higher priority. So for some rank type, rank value\nwill be adjusted to the opposite number of its original one.\n\nExamples\nThe following example set rank type to hold margin, and pin with a better hold margin will have higher\npriority.\n\n% mark_setup_gba_pin_rank -type margin\n      \n\nSee Also\nmark_setup_path_pin_rank(1)\n\n359"
            },
            {
                "doc_id": "_xtop_handbook_0254",
                "summary": "The document provides information about the command \"mark_setup_path_pin_rank\" used to set the rank type for setup path fix in XTop tools. It explains the usage, arguments, and different rank types such as count, countSlack, countDelay, si, siReverse, margin, congestion, congestionReverse, transition, fanout, and wireLength. The command is used to calculate the rank value of each pin for setup path fix, which helps in better optimization results.",
                "content": "Commands\n\nName\nmark_setup_path_pin_rank --Set pin's rank type for setup path fix.\n\nSynopsis\nmark_setup_path_pin_rank -type rank_type [paths]\n\nenum type in \"count countSlack countDelay si siReverse margin congestion congestionReverse transition\nfanout wireLength\"\n\ncollection paths\n\nArguments\n-type rank_type Define rank type to calculate rank value for setup path fix.\n\npaths Paths that will be included, all if not specified.\n\nDescription\nThis command will define the criteria for calculating rank value of each pin, which is used to handle pin's\nsetup fix priority. So that when -effort option is not low, we can put all pins on paths to different groups,\nfor a better optimization result. Basically, the default rank type is good enough for most cases, user can\nchange the rank type according to their need. Only output pins on path will be marked in this command.\n\nThe option -type defines different rank type for calculating pin's rank. We now offer following type for\nthe command:\n\n--count: path number through this pin.\n\n--countSlack: accumulated path slack of all paths through this pin.\n\n--countDelay: accumulated incremental delay of all paths through this pin.\n\n--si: pin's SI value.\n\n--siReverse: reversed order of si.\n\n--margin: pin's hold margin, higher priority for better margin.\n\n--congestion: pin's congestion ratio.\n\n--congestionReverse: reversed order of congestion.\n\n--transition: pin's transition.\n\n--fanout: pin's fanout number.\n\n--wireLength: pin's corresponding wire length.\n\nWhen option paths specified, only pins on these paths will be marked. These paths should also be added\nto fix command if only need to fix them.\n\nWhen the command is not explicitly called by user, default rank type is countDelay. Otherwise, the marked\nrank type is used. In both cases, the command will always be called automatically in fix setup path process,\nif effort is not low.\n\nOld pin rank will be cleared when the command is called.\n\nWe guarantee that pin with larger rank value always has higher priority. So for some rank type, rank value\nwill be adjusted to the opposite number of its original one.\n\nExamples\nThe following example set rank type to countDelay for setup path fix.\n\n% mark_setup_path_pin_rank -type countDelay\n      \n\nSee Also\nmark_setup_gba_pin_rank(1)\n\n361"
            },
            {
                "doc_id": "_xtop_handbook_0255",
                "summary": "The document provides information about the 'narrow_timing_margins' command used in GBA mode. This command narrows the timing margin by multiplying the positive slack with a specified factor. It has options for narrowing hold margins (-hold), setup margins (-setup), and specifying scenarios (-scenarios patterns). The factor can range from 0.1 to 10.",
                "content": "Commands\n\nName\nnarrow_timing_margins --Narrow the timing margin, only for GBA mode.\n\nSynopsis\nnarrow_timing_margins [ -setup | -hold ] [-scenarios patterns] factor\n\nflag hold\n\nstring_list scenarios\n\nflag setup\n\nfloat factor in \"(0.1,10)\"\n\nArguments\n-hold Narrow hold margins.\n\n-scenarios patterns Scenarios to narrow the margins, matched by wildcard.\n\n-setup Narrow setup margins.\n\nfactor The factor to multiply with positive slack.\n\nDescription\nThis command narrows the timing margin, only for GBA mode. It will multiply the positive slack with the\nspecified factor. If no hold or setup flag specified, both setup and hold margins will be narrowed. Margins\nof all scenarios will be modified unless scenarios are specified.\n\nHere the word \"narrow\" acts just like \"scale\" except that it gives a hint that you should narrow the margin\nfor most cases if the margins broken a lot. However, it is not prohibited to specify a factor more than 1.0\nto enlarge the timing margin if you really want to do that.\n\nExamples\nThe following example specifies a factor to narrow the setup timing violations.\n\n% narrow_timing_margins -setup 0.95\n      \n\n362"
            },
            {
                "doc_id": "_xtop_handbook_0256",
                "summary": "The document provides detailed information about the 'optimize_design_area' command in XTop tool. This command is used to optimize the design area by removing buffer or sizing down cells without causing any timing and design rule violations. It includes various options such as '-remove_buffer_only', '-pattern', '-dff_only', '-effort', '-hold_margin', '-setup_margin', '-transition_margin', '-rel_transition_margin', '-capacitance_margin', '-summarize_internal_iteration', '-only_pins', and 'cells'. The command returns the number of solutions committed.",
                "content": "Commands\n\nName\noptimize_design_area --Optimize design area of the design.\n\nSynopsis\nint optimize_design_area [ -remove_buffer_only | -pattern str ] [-\ndff_only] [-hold_margin margin_val] [-setup_margin margin_val] [-transition_margin\nmargin_val] [-rel_transition_margin rel_margin_val] [-capacitance_margin margin_val] [-\neffort effort_level] [-summarize_internal_iteration] [ -only_pins pin_list | cells ] [-\ndebug_pins pin_list]\n\nfloat capacitance_margin\n\ncollection debug_pins\n\nflag dff_only\n\nenum effort in \"low medium high ultra_high extreme_high\"\n\nfloat hold_margin\n\ncollection only_pins\n\nstring pattern\n\nfloat rel_transition_margin in \"[0,0.5]\"\n\nflag remove_buffer_only\n\nfloat setup_margin\n\nflag summarize_internal_iteration\n\nfloat transition_margin\n\ncollection cells\n\nArguments\n-capacitance_margin margin_val Capacitance slack margin to be reserved with unit pF, use\n\neco_capacitance_slack_margin if not specified.\n\n-debug_pins pin_list XTop will print more debug log for specified pins, and abort fix\nonce all these pins have been scanned.\n\n-dff_only Only size down dff cells when set. If not specified, only size down\ncomb cells.\n\n-effort effort_level Effort level in optimization, default is low.\n\n-hold_margin margin_val Hold slack margin to be reserved with unit ns, use\neco_hold_slack_margin if not specified.\n\n-only_pins pin_list Only generate solutions on specified pins if not empty.\n\n-pattern str Pattern for sizing down cell, use eco_cell_nominal_sizing_pattern\nif not specified.\n\n-rel_transition_margin Relative transition slack margin to be reserved with\nrel_margin_val the value of percentage to max transition, use\n\neco_relative_transition_slack_margin if not specified, a sum of\ntransition_margin and rel_transition_margin will be actually used.\n\n-remove_buffer_only Remove buffer only.\n\n-setup_margin margin_val Setup slack margin to be reserved with unit ns, use\neco_setup_slack_margin if not specified.\n\n-summarize_internal_iteration Summarize each internal iteration.\n\n-transition_margin margin_val Transition slack margin to be reserved with unit ns, use\neco_transition_slack_margin if not specified.\n\ncells Cells to size, all if not specified.\n\nDescription\nThis command optimizes area of the design by removing buffer or sizing down cells without introducing\nany timing and design rule violations. While sizing down, it finds the candidates according to the specified\nnominal sizing pattern.\n\nThe option -effort controls the count of internal optimization iterations. The pins will be sorted by a factor\nof cost and classified into groups with different priorities. The higher effort level, the more groups will\nbe classified. As a cost, more CPU time will be consumed in the optimization process. Generally, it will\nresult in a better optimization quality with higher effort. However, this depends on the timing status,\nplacement and routing density of the design. Sometimes, the last iteration will be inefficient. The option\n-summarize_internal_iteration can be turned on to review the effect of each internal iteration.\n\nIf you only want to size specific cells, just specify the cell collection in this command. For example, to\nonly size cells in a specified region on layout by specifying cells with command get_cells_in_region(1).\nOption -only_pins is the original way for this purpose by specifying specific pins, it is obsoleted now, and\nis kept here only for compatibility. All the mirror cells of these specified cells will also be considered.\n\nThis command returns the number of solutions committed.\n\nExamples\nThe following example optimizes design area by remove_buffer method only.\n\n% optimize_design_area -remove_buffer_only\n      \n\nThe following example optimizes design area by sizing cells down honoring following regular expression\nrule.\n\n% set_parameter eco_cell_nominal_sizing_pattern {X([0-9]+)TH}\n% optimize_design_area\n      \n\nIf no eco_cell_nominal_sizing_pattern specified, user can define sizing pattern in this command too.\n\n% optimize_design_area -pattern {X([0-9]+)TH}\n      \n\nThe following example optimizes design area with setup_margin 0.01ns and transition margin 0.05ns\n\n% set_parameter eco_cell_nominal_sizing_pattern {X([0-9]+)TH}\n% optimize_design_area -setup_margin 0.01 -transition_margin 0.05\n      \n\nOptimize area and only size cells in a specified region.\n\n% optimize_design_area [get_cells_in_region -rect \"((0.0, 0.0)(11.0, 95.0))\"]\n      \n\n365"
            },
            {
                "doc_id": "_xtop_handbook_0257",
                "summary": "This is a description of the 'optimize_dynamic_power' command in XTop tool. The command is used to optimize the dynamic power of a design by sizing down cells. It includes various options such as 'size_rule', 'hold_margin', 'setup_margin', 'transition_margin', 'capacitance_margin', 'effort', 'summarize_internal_iteration', 'dff_only', 'enable_multithread', 'only_pins', 'debug_pins', and 'cells'. The command returns the number of solutions committed.",
                "content": "Commands\n\nName\noptimize_dynamic_power --Optimize dynamic power of the design.\n\nSynopsis\nint optimize_dynamic_power [-size_rule rule_type] [-hold_margin margin_val]\n[-setup_margin margin_val] [-transition_margin margin_val] [-rel_transition_margin\nrel_margin_val] [-capacitance_margin margin_val] [-effort effort_level] [-\nsummarize_internal_iteration] [ -dff_only | -enable_multithread ] [ -only_pins pin_list | cells ] [-\ndebug_pins pin_list]\n\nfloat capacitance_margin\n\ncollection debug_pins\n\nflag dff_only\n\nenum effort in \"low medium high ultra_high extreme_high\"\n\nflag enable_multithread\n\nfloat hold_margin\n\ncollection only_pins\n\nfloat rel_transition_margin in \"[0,0.5]\"\n\nfloat setup_margin\n\nenum size_rule in \"cell_attribute nominal_keywords nominal_regex\"\n\nflag summarize_internal_iteration\n\nfloat transition_margin\n\ncollection cells\n\nArguments\n-capacitance_margin margin_val Capacitance slack margin to be reserved with unit pF, use\n\neco_capacitance_slack_margin if not specified.\n\n-debug_pins pin_list XTop will print more debug log for specified pins, and abort fix\nonce all these pins have been scanned.\n\n-dff_only Only size dff cells when set. If not specified, tool only swap comb\ncells at data path.\n\n-effort effort_level Effort level in optimization, default is low.\n\n-enable_multithread Enable multi-thread sizing comb cells. This function is disabled\nwhen use debug_pins or pin list.\n\n-hold_margin margin_val Hold slack margin to be reserved with unit ns, use\neco_hold_slack_margin if not specified.\n\n-only_pins pin_list Only generate solutions on specified pins if specified.\n\n-rel_transition_margin Relative transition slack margin to be reserved with\nrel_margin_val the value of percentage to max transition, use\n\neco_relative_transition_slack_margin if not specified, a sum of\ntransition_margin and rel_transition_margin will be actually used.\n\n-setup_margin margin_val Setup slack margin to be reserved with unit ns, use\neco_setup_slack_margin if not specified.\n\n-size_rule rule_type Indicate the rule used to find candidates for sizing cells, use\neco_cell_classify_rule if not specified.\n\n-summarize_internal_iteration Summarize each internal iteration.\n\n-transition_margin margin_val Transition slack margin to be reserved with unit ns, use\neco_transition_slack_margin if not specified.\n\ncells Cells to optimize, all if not specified.\n\nDescription\nThis command optimizes the dynamic power of the design by sizing down cells. Dynamic power is\ncalculated by switching power and internal power for each cell on reference scenario. If toggle rate file is\nnot linked, toggle rate value used in optimization will be eco parameter \"eco_power_toggle_rate\". If rail\nvoltage file is not linked, rail voltage value used in optimization will be from corresponding timing lib file.\n\nWhen sizing rule is set to nominal_keywords, only matched cell after current keywords will be considered,\nsimilar to leakage optimization.\n\nThis command returns the number of solutions committed.\n\nExamples\nThe following example optimizes dynamic power by sizing cells, and uses cell_attribute as sizing rule.\n\n% set_parameter eco_cell_classify_rule cell_attribute\n% optimize_dynamic_power\n      \n\nThe following example optimizes dynamic power by sizing cells, and swap VT by nominal keywords.\n\n% set_parameter eco_cell_nominal_swap_keywords {\"ULVT\" \"LVT\" \"\" \"HVT\"}\n% optimize_dynamic_power -size_rule nominal_keywords\n      \n\nSee Also\noptimize_leakage_power(1)\n\n367"
            },
            {
                "doc_id": "_xtop_handbook_0258",
                "summary": "The document provides detailed information about the 'optimize_leakage_power' command in XTop tool. This command is used to optimize the leakage power of a design by swapping cells with specified keywords. It includes various options such as '-auto_iteration', '-capacitance_margin', '-debug_pins', '-effort', '-enable_multithread', '-group', '-hold_margin', '-keywords', '-only_pins', '-rel_transition_margin', '-setup_margin', '-summarize_internal_iteration', '-swap_vt_only', '-transition_margin', and 'cells'. Each option has a specific function and usage in the optimization process.",
                "content": "Commands\n\nName\noptimize_leakage_power --Optimize leakage power of the design.\n\nSynopsis\nint optimize_leakage_power [-keywords name_list] [-hold_margin margin_val]\n[-setup_margin margin_val] [-transition_margin margin_val] [-rel_transition_margin\nrel_margin_val] [-capacitance_margin margin_val] [-effort effort_level] [-group] [-\nsummarize_internal_iteration] [{ -dff_only | -enable_multithread } [-swap_vt_only]] [-auto_iteration\niteration_number] [ -only_pins pin_list | cells ] [-debug_pins pin_list]\n\nint auto_iteration in \"[1,20]\"\n\nfloat capacitance_margin\n\ncollection debug_pins\n\nflag dff_only\n\nenum effort in \"low medium high ultra_high extreme_high\"\n\nflag enable_multithread\n\nflag group\n\nfloat hold_margin\n\nstring_list keywords\n\ncollection only_pins\n\nfloat rel_transition_margin in \"[0,0.5]\"\n\nfloat setup_margin\n\nflag summarize_internal_iteration\n\nflag swap_vt_only\n\nfloat transition_margin\n\ncollection cells\n\nArguments\n-auto_iteration iteration_number Automatically optimize leakage power several times with keywords divided by analyze_leakage_keywords(1). At least 3 keywords are needed if using this feature. By default, no iteration.\n\n-capacitance_margin margin_val Capacitance slack margin to be reserved with unit pF, use\neco_capacitance_slack_margin if not specified.\n\n-debug_pins pin_list XTop will print more debug log for specified pins, and abort fix\nonce all these pins have been scanned.\n\n-dff_only Only swap dff cells when set. If not specified, tool only swap comb\ncells at data path.\n\n-effort effort_level Effort level in optimization, default is low.\n\n-enable_multithread Enable multi-thread swap cells for comb cells. This function is\ndisabled when use debug_pins or pin list.\n\n-group If group target pins according to interconnection and take pins in\nproportion for each iteration.\n\n-hold_margin margin_val Hold slack margin to be reserved with unit ns, use\neco_hold_slack_margin if not specified.\n\n-keywords name_list Keywords for swapping cells, use\neco_cell_nominal_swap_keywords if not specified.\n\n-only_pins pin_list Only generate solutions on specified pins if specified.\n\n-rel_transition_margin Relative transition slack margin to be reserved with\nrel_margin_val the value of percentage to max transition, use\n\neco_relative_transition_slack_margin if not specified, a sum of\ntransition_margin and rel_transition_margin will be actually used.\n\n-setup_margin margin_val Setup slack margin to be reserved with unit ns, use\neco_setup_slack_margin if not specified.\n\n-summarize_internal_iteration Summarize each internal iteration.\n\n-swap_vt_only When multi-thread is enabled, this can be specified to if user only\nswap VT, and legal margin is {0 0}, to speedup legalization.\n\n-transition_margin margin_val Transition slack margin to be reserved with unit ns, use\neco_transition_slack_margin if not specified.\n\ncells Cells to swap, all if not specified.\n\nDescription\nThis command optimizes the leakage power of the design by swapping cells with the specified keywords.\nThe keywords must be specified in order such that corresponding cells are with descending leakage power.\n\nFor those libraries with multiple dimensions of keywords, it is recommended to optimize several times\nwith only one dimension in each iteration. However, if you does know how to sort keywords with multiple\ndimension, you can also specify a multiple dimension keyword list with \"@\" as the separator.\n\nThe option -effort controls the count of internal optimization iterations. The pins will be sorted by a factor\nof cost and classified into groups with different priorities. The higher effort level, the more groups will\nbe classified. As a cost, more CPU time will be consumed in the optimization process. Generally, it will\nresult in a better optimization quality with higher effort. However, this depends on the timing status,\nplacement and routing density of the design. Sometimes, the last iteration will be inefficient. The option\n-summarize_internal_iteration can be turned on to review the effect of each internal iteration.\n\nIf you only want to swap specific cells, just specify the cell collection in this command. For example, to\nonly swap cells in a specified region on layout by specifying cells with command get_cells_in_region(1).\nOption -only_pins is the original way for this purpose by specifying specific pins, it is obsoleted now, and\nis kept here only for compatibility. All the mirror cells of these specified cells will also be considered.\n\nXTop now support automatically iteration by option -auto_iteration if many swap keywords are given.\nKeywords will be divided into groups according to analyze_leakage_keywords(1). If iteration number is\nequal or more than keywords number - 1, it is bubble mode. It will run many times if many keywords\nare given under this mode.\n\nThis command returns the number of solutions committed.\n\nExamples\nThe following example optimizes leakage power by sizing cells honoring following keywords rule.\n\n% set_parameter eco_cell_nominal_swap_keywords \\\n                {\"ULVT\" \"LVT\" \"\" \"HVT\"}\n% optimize_leakage_power\n      \n\nIf no eco_cell_nominal_swap_keywords specified, user can define keywords in this command too.\n\n% optimize_leakage_power -keywords {\"ULVT\" \"LVT\" \"\" \"HVT\"}\n      \n\nThe following example optimizes leakage power with setup_margin 0.01ns and transition margin 0.05ns.\n\n% set_parameter eco_cell_nominal_swap_keywords    \\\n                {\"ULVT\" \"LVT\" \"\" \"HVT\"}\n% optimize_leakage_power -setup_margin 0.01      \\\n                         -transition_margin 0.05\n      \n\nOptimize leakages and only swapping cells in a specified region.\n\n% optimize_leakage_power [get_cells_in_region -rect \"((0.0, 0.0)(11.0, 95.0))\"]\n      \n\nThe following example optimize leakage power several times automatically, by using -auto_iteration\noption.\n\n% optimize_leakage_power -keywords {\"10ULVT\" \"10LVT\" \"20ULVT\" \"20LVT\"} -auto_iteration 3\n      \n\n370"
            },
            {
                "doc_id": "_xtop_handbook_0259",
                "summary": "",
                "content": "Commands\n\nName\nrefine_gba_timing --To refine gba timing with path timing data.\n\nSynopsis\nrefine_gba_timing\n\nDescription\nThis command refines gba timing data by path slack value to improve timing data accuracy. Then delete\nall timing path for more efficient timing optimization.\n\nExamples\n\n371"
            },
            {
                "doc_id": "_xtop_handbook_0260",
                "summary": "This document provides a detailed explanation of the 'report_fail_reasons' command in the XTop tool. This command reports the fail reason on pins of the optimization process. It includes various flags and arguments such as 'disable_timing', 'exclude_reasons', 'methods', 'paths', 'pins', 'stats', 'truncate', and 'verbose'. The document also provides several examples of how to use this command.",
                "content": "Commands\n\nName\nreport_fail_reasons --Report fail reason on pins of the optimization process.\n\nSynopsis\nreport_fail_reasons [-methods method_list] [{ -disable_timing | -stats } [-exclude_reasons\nreason_list] [-verbose]] [-truncate num] { -pins pin_list | -paths path_list }\n\nflag disable_timing\n\nstring_list exclude_reasons\n\nenum_list methods in \"insert_buffer size_cell split_net remove_buffer\"\n\ncollection paths\n\ncollection pins\n\nflag stats\n\nint truncate\n\nflag verbose\n\nArguments\n-disable_timing Not to output the timing information.\n\n-exclude_reasons reason_list Reasons not to report in statistical summary, matched by wildcard.\n\n-methods method_list The methods to report fail reason, all if not specified.\n\n-paths path_list Paths to report.\n\n-pins pin_list Pins to report.\n\n-stats Report statistical of fail reasons.\n\n-truncate num Count limitation of the number of pins or paths to report, default is\n100, zero or negative value means all.\n\n-verbose Report the pins for each fail reason.\n\nDescription\nThis command reports fail reason on pins of the optimization process. If the violation on pin can not be\nfixed, commonly a reason will be marked for each tried method. If the pin has been fixed successfully, or\nhas no violation at all, it will be marked with \"-\".\n\nSince it can only mark one reason for one method of each pin, it can only report the reason of the last\ntried candidate. For example, if ten alternative cells tried for one cell and all failed, only the reason of the\nlast one can be reported. It is possible that no reason is marked, if the pin has solution but not completely\nfixed, or the violation is caused by fix process.\n\nFor the pins and paths, if pin or path are specified by names directly, it will get the corresponding objects\nin background silently and will not report information if not found. So, if you are not sure about the names,\nit is recommended to get the collection with corresponding command first instead of specifying names\ndirectly.\n\nExamples\nThe following example reports statistical of fail reasons of pins.\n\n% report_fail_reasons -pins * -stats\nReason                                                   Count    %\n-------------------------------------------------------------------\nbreak_setup_of_driver  ################################    49 79.0%\nbreak_setup            #####...........................     7 11.3%\nbreak_max_capacitance  ####............................     6  9.7%\n      \n\nThe following example reports statistical of fail reasons of pins and the pins for each fail reason.\n\n% report_fail_reasons -pins * -stats -verbose\nReason                                                   Count    %\n-------------------------------------------------------------------\nbreak_setup_of_driver  ################################    49 79.0%\nbreak_setup            #####...........................     7 11.3%\nbreak_max_capacitance  ####............................     6  9.7%\n(@) break_setup_of_driver : 49\nName     S_Slack  H_Slack  S_Trans  Max_Trans  S_Cap  Max_Cap  ...\n------------------------------------------------------------------\nU47/B2    -5.715   -1.524    0.516      0.320      *        *     \nU56/A2    -6.561   -1.997    0.296      0.320      *        *    \n...\n(@) break_setup : 7\nName     S_Slack  H_Slack  S_Trans  Max_Trans  S_Cap  Max_Cap  ...\n------------------------------------------------------------------\nU454/B1    0.298   -2.580    0.083      0.320      *        *    \nU460/B1    0.390   -1.852    0.083      0.320      *        *    \n...\n(@) break_max_capacitance : 6\nName              S_Slack  H_Slack  S_Trans  Max_Trans  S_Cap  ...\n------------------------------------------------------------------\noption_reg_0_/D     6.565   -2.139    0.819      0.320      *    \noption_reg_1_/D     5.381   -2.527    0.809      0.320      *   \n...\n      \n\nThe following example reports fail reasons of the first 2 pins.\n\n% report_fail_reasons -pins * -truncate 2\nPin                Master     Insert Buffer    Size Cell    ...\n---------------------------------------------------------------\nstack1_reg_2_/CP   DFFD1EP    -                -            -\nstack1_reg_2_/D    DFFD1EP    -                -            -\n      \nThe following example reports fail reasons of the first 5 paths.\n\n% report_fail_reasons -paths * -truncate 5\npath: Path_0\nPin                Master      Insert Buffer    Size Cell    ...\n----------------------------------------------------------------\npc_reg_8_/CP       DFFD1EP     -                -            -\npc_reg_8_/QN       DFFD1EP     -                -            -\n...\nU386/A2            AND2D1EP    break_setup      -            -\nU386/ZN            AND2D1EP    -                -            -\nstack1_reg_8_/D    DFFD4EP     break_setup      -            -\n-                  -           -                -            -\n...\n      \n\nThe following example reports fail reasons for method size cell of pins without timing information.\n\n% report_fail_reasons -methods size_cell -pins * -disable_timing\nPin                 Master       Size Cell\n-------------------------------------------------------\nstack1_reg_5_/Q     DFFD1EP      sequential_cell\ninst_1__U2/A1       AND2D1EP     -\ninst_1__U2/A2       AND2D1EP     -\ninst_1__U2/Z        AND2D1EP     break_max_capacitance\n...\n      \n\n374"
            },
            {
                "doc_id": "_xtop_handbook_0261",
                "summary": "The document provides information about the \"report_pin_rank\" command in XTop tool. This command returns the rank value for a given pin. It includes options such as \"-effort effort_level\" for setting the optimization effort level, and \"-group\" for grouping pins according to interconnection. The command will not report the pin if no rank type is marked, or if there's a pin direction mismatch, or if there's no need to be fixed.",
                "content": "Commands\n\nName\nreport_pin_rank --Report rank value for given pin.\n\nSynopsis\nreport_pin_rank pin [-effort effort_level] [-group]\n\nenum effort in \"low medium high ultra_high extreme_high\"\n\nflag group\n\ncollection pin\n\nArguments\n-effort effort_level Effort level in optimization, default is low. The iteration number will be\n\nreported according to effort level after ranking.\n\n-group If group pins according to interconnection and take pins in proportion for\neach iteration. The reported index will be the pin index in group.\n\npin Pin to report.\n\nDescription\nThis command will return rank value for given pin.\n\nPin will not be reported if no rank type is marked, or pin direction mismatch, or no need to be fixed.\n\nOnly the most recent rank type marked will be reported. If any eco action is committed after rank marked,\na dirty flag will be found in report, indicating the rank data is not reliable. It is suggested to re-mark rank\ntype manually if need to report the value after fix.\n\nExamples\nThe following example shows how to report rank value.\n\n% report_pin_rank stacklevel_reg_1_/Q\nIndex    Iteration    Name                  Rank\n-------------------------------------------------\n1025     1            stacklevel_reg_1_/Q   1.8963e-07\n      \n\nSee Also\nmark_hold_gba_pin_rank(1) mark_setup_gba_pin_rank(1) summarize_pin_rank(1)\n\n375"
            },
            {
                "doc_id": "_xtop_handbook_0262",
                "summary": "The document provides information about the 'summarize_buffers' command in XTop tool. This command is used to summarize major properties of buffers or inverters, including the worst typical max and min delay, the scenario to which the delay belongs, area, and leakage power. It also provides a way to find the full name of the scenario if it has a long name. The command will skip cells that do not exist in all corners.",
                "content": "Commands\n\nName\nsummarize_buffers --Summarize major properties of buffers or inverters.\n\nSynopsis\nsummarize_buffers buffer_list\n\ncollection buffer_list\n\nArguments\nbuffer_list Buffers to summarize.\n\nDescription\nThis command summarizes major properties of buffers or inverters. It will list the worst typical max and\nmin delay, which scenario the delay belongs to, area, leakage power of them. In case the scenario has a\nvery long name, it will give scenario id. Then find the scenario full name through \"get_scenario -by_id\"\ncommand. Please refer to get_scenario for details. Those cells that not exist in all corners will be skipped.\n\nExamples\nThe following example summarizes the buffers matching given pattern.\n\n% summarize_buffers [get_lib_cells */BUFFD*]\nIndex    Name            Max Delay    Max Sce    Min Delay    Min Sce     Ratio       Area      Leakage\n--------------------------------------------------------------------------------------------------------\n    0    BUFFD0EPLVT        0.0680          2       0.0311          0    2.1850     1.9200      33.4369\n    1    BUFFD24EP          0.0639          2       0.0288          0    2.2165    20.1600      40.2960\n    2    BUFFD3EPLVT        0.0512          2       0.0234          0    2.1837     3.3600     148.2235\n    3    BUFFD6EPHVT        0.0970          2       0.0385          0    2.5176     5.7600       0.5322\n...\n      \n\n376"
            },
            {
                "doc_id": "_xtop_handbook_0263",
                "summary": "The document provides information about the 'summarize_pin_rank' command in XTop tool. This command prints a summary of a given pin's rank information, with an option '-with_top_n count' to report the top n pins. It also mentions conditions under which a pin will not be reported and suggests re-marking rank type manually if needed after fix. Examples and related commands are also provided.",
                "content": "Commands\n\nName\nsummarize_pin_rank --Summarize pins rank type, value, and other status.\n\nSynopsis\nsummarize_pin_rank [pins] [-with_top_n count]\n\nint with_top_n in \"[1,inf)\"\n\ncollection pins\n\nArguments\n-with_top_n count Also report the top n pins.\n\npins Pins to summarize.\n\nDescription\nThis command will print a summary for given pin's rank information, all pins area included if pins is not\nspecified.\n\nWhile -with_top_n is specified, it will display the information of top n pins.\n\nPin will not be reported if no rank type is marked, or pin direction not match, or no need to be fixed.\n\nOnly the most recent rank type marked will be summarized. If any eco action is committed after rank\nmarked, a dirty flag will be found in summary, indicating the rank data is not reliable. It is suggested to\nre-mark rank type manually if need to summarize after fix.\n\nExamples\nThe following example shows how to summarize current pin rank.\n\n% summarize_pin_rank\n### rank summary ###\nRank type: margin   Opt target: leakage\nMin rank: 1.9818   Max rank: 5.8801\nTotal rank pin: 4061\n### rank distribution ###\nRange                                                      Count        %\n--------------------------------------------------------------------------\n1.98 ~ 2.37    ##################......................     1782    43.9%\n2.37 ~ 2.76    ############............................     1199    29.5%\n2.76 ~ 3.15    ##......................................      238     5.9%\n...\n      \n\nSee Also\nmark_hold_gba_pin_rank(1) mark_setup_gba_pin_rank(1) report_pin_rank(1)\n\n377"
            },
            {
                "doc_id": "_xtop_handbook_0264",
                "summary": "The document provides detailed information about the \"write_incremental_sdf\" command in XTop tool. This command writes an incremental sdf file, which cleans all hold violations and attempts to clean setup violations. It includes options such as \"-dir\" to specify the directory, \"-hold\" and \"-setup\" for hold and setup violations respectively, \"-prefix\" for file name prefix, \"-reserved_cell_delay_percentage\" for cell arc delay percentage, \"-target\" for target of hold or setup slack, \"-anno_derate\" for derate value adjustment, and \"-both_timing_type\" to affect both sdf_min and sdf_max.",
                "content": "Commands\n\nName\nwrite_incremental_sdf --Write incremental sdf file, which cleans all hold violations, and tries to clean\nsetup violations as well.\n\nSynopsis\nint write_incremental_sdf -dir dir_name [-prefix prefix_name] { -hold | { -setup\n[-reserved_cell_delay_percentage reserved_delay_percentage]}} [-target target_val] [-\nanno_derate derate_val] [-both_timing_type]\n\nfloat anno_derate in \"[0.5,2]\"\n\nflag both_timing_type\n\nstring dir\n\nflag hold\n\nstring prefix\n\nfloat reserved_cell_delay_percentage in \"[0.2,1]\"\n\nflag setup\n\nfloat target in \"[0,100)\"\n\nArguments\n-anno_derate derate_val Derate value for sdf, for adjustment purpose, default 1.0.\n\n-both_timing_type Affect both sdf_min and sdf_max when write file.\n\n-dir dir_name Specify the directory to save sdf file, file will be saved for every\nscenario.\n\n-hold Write incremental sdf file for hold violations, file name will append\nwith \"_hold\".\n\n-prefix prefix_name File name prefix, use \"xtop_\" if not specified.\n\n-reserved_cell_delay_percentage Cell arc delay percentage that will be reserved when decreasing cell\nreserved_delay_percentage delay for setup, if a larger value is set, less slack is to be fixed.\n\nDefault is 0.5.\n\n-setup Write incremental sdf file for setup violations, file name will\nappend with \"_setup\".\n\n-target target_val Target of hold or setup slack when writing incremental sdf, unit is\nns. Uses 0 if not specified, parameter eco_hold_slack_target and\neco_setup_slack_target are not considered. It is suggested to set an\nextra target for hold in order to be cleaned.\n\nDescription\nThis command will write incremental sdf file. All hold violations can be cleaned, and setup violations will\nalso be tried to fix. The files will be saved to the directory given by -dir for all scenarios, and named begin\nwith -prefix, and scenario names.\n\n-anno_derate is an options to adjust incremental delay in sdf file, in most cases, it would be fine to just\nkeep it default value.\n\nBy default, when fix hold, only sdf_min will be affected, when fix setup, only sdf_max will be affected. -\nboth_timing_type can be specified to apply the delay change to both. In this case, XTop will also consider\nboth type, it is suggested to run hold fix in the last step and set a fix target to keep hold clean.\n\nWhile fixing, gba data is considered, so not recommended to include pba data, and can save more\ntime. If only write sdf file, and no other fix will be done, -ignore_data_for_sdf can be specified during\nread_timing_data, so only gba slack will be read, in this case, cell delay is calculated using FO4. At the\nsame time, logical only mode can also be used to save run time and memory usage.\n\nSlack will be annotated after this command executed, so use it carefully with other fix or optimize\ncommand.\n\nExamples\nThe following example write an incremental sdf file for hold, set its fix target.\n\n% write_incremental_sdf -dir dir_to_save -hold -target 0.02\n      \n\nThe following example write an incremental sdf file for setup, and set prefix.\n\n% write_incremental_sdf -dir dir_to_save -setup \\\n                        -reserved_cell_delay_percentage 0.6 -prefix mysdf_\n      \n\nThe following example read only global slack file, and write an incremental sdf file for hold and setup.\n\n% read_timing_data -data_dir sta_data -ignore_data_for_sdf\n% write_incremental_sdf -dir dir_to_save -setup\n% write_incremental_sdf -dir dir_to_save -hold -target 0.03\n      \n\nSee Also\nfix_hold_gba_violations(1) fix_setup_gba_violations(1)\n\n379"
            },
            {
                "doc_id": "_xtop_handbook_0265",
                "summary": "This is a description of the 'cell_capacitance_corner' parameter in XTop tool. It is a string type parameter with no default value. It specifies the corner used to calculate cell's delay and transition in cell trend analysis. If users want to analyze cell in mixed corners, they must specify this parameter along with 'cell_delay_transition_corner(1)', 'cell_internal_power_corner(1)', and 'cell_leakage_power_corner(1)'. If any of these parameters are not specified or do not exist in the same session, the analysis will only be done in the same corner.",
                "content": "Parameters\n\nName\ncell_capacitance_corner --Specify the corner used to calculate capacitance in cell trend analysis.\n\nType\ntype: string\n\nDefault\ndefault = \"\"\n\nDescription\nIn cell trend analysis, some time user want to check cell's different attribute in different corner. This\nparameter specifies the corner to calculate cell's delay and transition. If user want to analyze cell in mixed\ncorners, you MUST specified this parameter and several other parameters: cell_delay_transition_corner(1)\ncell_internal_power_corner(1) cell_leakage_power_corner(1) If anyone of these parameters has not been\nspecified, or anyone of the specified corners is not exist in the same session,cell trend analysis only analyze\ncell's all attributes in same corner.\n\nExamples\nSee Also\n\ncell_delay_transition_corner(1) cell_internal_power_corner(1) cell_leakage_power_corner(1)\n\n381"
            },
            {
                "doc_id": "_xtop_handbook_0266",
                "summary": "The document provides information about the parameter 'cell_delay_transition_corner' used in cell trend analysis. This parameter specifies the corner to calculate cell's delay and transition. If a user wants to analyze a cell in mixed corners, this parameter and several others like 'cell_internal_power_corner', 'cell_leakage_power_corner', and 'cell_capacitance_corner' must be specified. If any of these parameters are not specified or do not exist in the same session, the analysis will only analyze the cell's attributes in the same corner.",
                "content": "Parameters\n\nName\ncell_delay_transition_corner --Specify the corner used to calculate delay/transition in cell trend analysis.\n\nType\ntype: string\n\nDefault\ndefault = \"\"\n\nDescription\nIn cell trend analysis, some time user want to check cell's different attribute in different corner. This\nparameter specifies the corner to calculate cell's delay and transition. If user want to analyze cell in mixed\ncorners, you MUST specified this parameter and several other parameters: cell_internal_power_corner(1)\ncell_leakage_power_corner(1) cell_capacitance_corner(1) If anyone of these parameters has not been\nspecified, or anyone of the specified corners is not exist in the same session, cell trend analysis only analyze\ncell's all attributes in same corner.\n\nExamples\nSee Also\n\ncell_internal_power_corner(1) cell_leakage_power_corner(1) cell_capacitance_corner(1)\n\n382"
            },
            {
                "doc_id": "_xtop_handbook_0267",
                "summary": "This is a description of the 'cell_internal_power_corner' parameter used in cell trend analysis. It specifies the corner to calculate cell's delay and transition. If a user wants to analyze a cell in mixed corners, this parameter and several others including 'cell_delay_transition_corner(1)', 'cell_leakage_power_corner(1)', and 'cell_capacitance_corner(1)' must be specified. If any of these parameters are not specified or do not exist in the same session, the analysis will only analyze the cell's attributes in the same corner.",
                "content": "Parameters\n\nName\ncell_internal_power_corner --Specify the corner used to calculate internal power in cell trend analysis.\n\nType\ntype: string\n\nDefault\ndefault = \"\"\n\nDescription\nIn cell trend analysis, some time user want to check cell's different attribute in different corner. This\nparameter specifies the corner to calculate cell's delay and transition. If user want to analyze cell in mixed\ncorners, you MUST specified this parameter and several other parameters: cell_delay_transition_corner(1)\ncell_leakage_power_corner(1) cell_capacitance_corner(1) If anyone of these parameters has not been\nspecified, or anyone of the specified corners is not exist in the same session, cell trend analysis only analyze\ncell's all attributes in same corner.\n\nExamples\nSee Also\n\ncell_delay_transition_corner(1) cell_leakage_power_corner(1) cell_capacitance_corner(1)\n\n383"
            },
            {
                "doc_id": "_xtop_handbook_0268",
                "summary": "This is a description of the parameter 'cell_leakage_power_corner' used in cell trend analysis. It specifies the corner to calculate cell's delay and transition. If a user wants to analyze a cell in mixed corners, this parameter and several others including 'cell_delay_transition_corner(1)', 'cell_internal_power_corner(1)', and 'cell_capacitance_corner(1)' must be specified. If any of these parameters are not specified or do not exist in the same session, the analysis will only consider the cell's attributes in the same corner.",
                "content": "Parameters\n\nName\ncell_leakage_power_corner --Specify the corner used to calculate leakage power in cell trend analysis.\n\nType\ntype: string\n\nDefault\ndefault = \"\"\n\nDescription\nIn cell trend analysis, some time user want to check cell's different attribute in different corner. This\nparameter specifies the corner to calculate cell's delay and transition. If user want to analyze cell in mixed\ncorners, you MUST specified this parameter and several other parameters: cell_delay_transition_corner(1)\ncell_internal_power_corner(1) cell_capacitance_corner(1) If anyone of these parameters has not been\nspecified, or anyone of the specified corners is not exist in the same session, cell trend analysis only analyze\ncell's all attributes in same corner.\n\nExamples\nSee Also\n\ncell_delay_transition_corner(1) cell_internal_power_corner(1) cell_capacitance_corner(1)\n\n384"
            },
            {
                "doc_id": "_xtop_handbook_0269",
                "summary": "",
                "content": "Parameters\n\nName\ncell_name_channel_length_keywords --Specify the keywords that represents different channel lengths\nin cell names.\n\nType\ntype: string_list\n\nDefault\ndefault = \"\"\n\nDescription\nThis parameter specifies the keywords that represents different channel lengths in cell names. This is used\nin automatic cell classification in trend analysis.\n\nExamples\nSee Also\n\ncell_name_drive_strength_pattern(1) cell_name_vt_keywords(1)\n\n385"
            },
            {
                "doc_id": "_xtop_handbook_0270",
                "summary": "This is a description of the parameter 'cell_name_drive_strength_pattern' in XTop tools. It is a string type parameter with a default value of an empty string. It specifies the regular expression used to capture the number representing the drive strength of cells, which is crucial for automatic cell classification in trend analysis. The pattern should be able to uniquely match in the cell names and capture the drive strength number.",
                "content": "Parameters\n\nName\ncell_name_drive_strength_pattern --Specify the regular expression that can used to capture the number\nwhich represents the drive strength of cells.\n\nType\ntype: string\n\nDefault\ndefault = \"\"\n\nDescription\nThis parameter specifies the regular expression that can used to capture the number which represents the\ndrive strength of cells. This is used in automatic cell classification in trend analysis.\n\nIt needs to ensure that this pattern can match uniquely in the name of cells, and can capture the number\nfor drive strength.\n\nExamples\n\n386"
            },
            {
                "doc_id": "_xtop_handbook_0271",
                "summary": "",
                "content": "Parameters\n\nName\ncell_name_vt_keywords --Specify the keywords that represents different vt in cell names.\n\nType\ntype: string_list\n\nDefault\ndefault = \"\"\n\nDescription\nThis parameter specifies the keywords that represents different vt in cell names. This is used in automatic\ncell classification in trend analysis.\n\nExamples\nSee Also\n\ncell_name_drive_strength_pattern(1) cell_name_channel_length_keywords(1)\n\n387"
            },
            {
                "doc_id": "_xtop_handbook_0272",
                "summary": "This is a description of the parameter 'decimal_point_tokens' in XTop tools. It is a string_list type parameter with a default value of \".\". It is used to specify tokens for decimal points, particularly in the context of naming conventions for files or libraries. It is an obligatory parameter and cannot be set to empty. An example of its usage is provided where it is set to 'p'.",
                "content": "Parameters\n\nName\ndecimal_point_tokens --Specify tokens for decimal point.\n\nType\ntype: string_list\n\nDefault\ndefault = \".\"\n\nDescription\nThis parameter specifies the tokens for decimal point. It applies to check the name convention of files,\nor libraries.\n\nFor example, while naming a timing library for voltage 1.25, string 1p25 is often used instead of 1.25. It\nneeds to set this parameter to p to notify the program that the decimal point has been set to p.\n\nIt is an obligated parameter, and cannot set to empty.\n\nExamples\n\n  % set_parameter decimal_point_tokens {p}\n      \n\n388"
            },
            {
                "doc_id": "_xtop_handbook_0273",
                "summary": "",
                "content": "Parameters\n\nName\ndefin_skip_pg_layers_mode --Control whether to skip pg shapes of def specical nets when\nimport_designs.\n\nType\ntype: enum \"NONE UPPER ALL\"\n\nDefault\ndefault = \"NONE\"\n\nDescription\nThis parameter is used to control whether to skip pg shapes of def specical nets or not, when\nimport_designs. UPPER means that only pg shapes above the first vertical routing layer for power/ground\nstripes, will be skipped.\n\nExamples\n\n% set_parameter defin_skip_pg_layers_mode {UPPER}\n      \n\n389"
            },
            {
                "doc_id": "_xtop_handbook_0274",
                "summary": "This is a description of the parameter 'defin_skip_removable_fillers' in XTop tools. It is a boolean type parameter with a default value of \"false\". It controls whether to skip removable fillers when executing the 'import_designs' command. It should be used in conjunction with the 'set_removable_fillers(1)' command.",
                "content": "Parameters\n\nName\ndefin_skip_removable_fillers --Control whether to skip removable fillers when import_designs.\n\nType\ntype: bool\n\nDefault\ndefault = \"false\"\n\nDescription\nThis parameter is used to control whether to skip removable fillers or not, when import_designs. Fillers\nwith placement status FIXED and COVER will not be skipped anyway. Please use this command\nalong with set_removable_fillers(1), which should be put between commands link_reference_lib and\nimport_designs.\n\nExamples\n\n    % set_parameter defin_skip_removable_fillers true\n    \n\n390"
            },
            {
                "doc_id": "_xtop_handbook_0275",
                "summary": "",
                "content": "Parameters\n\nName\nhonor_annotated_dont_touch --Honor the dont touch attribute that read from annotated dont touch files.\n\nType\ntype: bool\n\nDefault\ndefault = \"true\"\n\nDescription\nWhile this parameter is set to true, the eco process will honor the dont touch objects dumped from third\nparty STA tools.\n\nExamples\nThe following example shows how to disregard the dont touch settings in STA data.\n\n% set_parameter honor_annotated_dont_touch false\n      \n\n391"
            },
            {
                "doc_id": "_xtop_handbook_0276",
                "summary": "",
                "content": "Parameters\n\nName\nhonor_timing_library_dont_use --Honor the cell attribute dont use in timing library.\n\nType\ntype: bool\n\nDefault\ndefault = \"true\"\n\nDescription\nWhile this parameter is set to true, the eco or optimization process will honor the dont use attribute of cells\ndefined in timing libraries, and filter out them by default.\n\nExamples\nThe following example shows how to disregard the dont use attribute in timing library.\n\n% set_parameter honor_timing_library_dont_use false\n      \n\n392"
            },
            {
                "doc_id": "_xtop_handbook_0277",
                "summary": "",
                "content": "Parameters\n\nName\nmax_fanout --Define the allowed maximum fanout for pins.\n\nType\ntype: int \"[4,inf)\"\n\nDefault\ndefault = \"32\"\n\nDescription\nThis parameter defines the allowed maximum fanout for pins. It is used as the default constraint while\nreporting and fixing the fanout violations.\n\nExamples\nThe following example defines the allowed maximum fanout for pins as 64:\n\n% set_parameter max_fanout 64\n      \n\n393"
            },
            {
                "doc_id": "_xtop_handbook_0278",
                "summary": "",
                "content": "Parameters\n\nName\nmax_si --Define the allowed maximum delta delay caused by SI, the unit is ns.\n\nType\ntype: float \"(0,inf)\"\n\nDefault\ndefault = \"0.01\"\n\nDescription\nThis parameter defines the allowed maximum delta delay caused by SI for load pins. In XTop, if the delta\ndelay exceeds max_si, will be treated as SI violation.\n\nExamples\nThe following example sets max_si 0.02ns.\n\n% set_parameter max_si 0.02\n      \n\n394"
            },
            {
                "doc_id": "_xtop_handbook_0279",
                "summary": "This is a description of the parameter 'max_thread_number' in a program. It is an integer type parameter with a range of 1 to 100, and its default value is 8. This parameter determines the maximum number of threads that can be used by the program, allowing tasks such as importing designs and loading timing data to run in parallel if the value is greater than 1.",
                "content": "Parameters\n\nName\nmax_thread_number --Specify the maximum thread number can be used.\n\nType\ntype: int \"[1,100]\"\n\nDefault\ndefault = \"8\"\n\nDescription\nThis parameter specifies the number of threads can be used for current program. While this parameter is\ngreater than 1, the program will try to run in parallel for those tasks like importing designs, loading timing\nlibraries, timing data, timing report and so on.\n\nExamples\nThe following example sets the max_thread_number as 8.\n\n% set max_thread_number 8\n      \n\n395"
            },
            {
                "doc_id": "_xtop_handbook_0280",
                "summary": "",
                "content": "Parameters\n\nName\nmax_wire_length --Define the allowed max wire length for nets, the unit is micrometer.\n\nType\ntype: int \"[10,inf)\"\n\nDefault\ndefault = \"1000\"\n\nDescription\nThis parameter defines the allowed maximum wire length for nets, the unit is micrometer. It is used as the\ndefault constraint while reporting and fixing wire length violations.\n\nExamples\nThe following example defines the allowed maximum wire length for nets as 800 um:\n\n% set_parameter max_wire_length 800\n      \n\n396"
            },
            {
                "doc_id": "_xtop_handbook_0281",
                "summary": "This document provides information about the parameter 'tmlib_arbitrary_average_points' in XTop tools. It is used to specify points in a table for the 'arbitrary_average' method. The parameter type is 'point_list' with a default value of \"(0,0)\". It is applicable for 1-D and 2-D tables, while tables with more than 3-D are skipped.",
                "content": "Parameters\n\nName\ntmlib_arbitrary_average_points --Specify points(coordinates) in table for arbitrary_average method.\n\nType\ntype: point_list\n\nDefault\ndefault = \"(0,0)\"\n\nDescription\nThis parameter specifies a list of points for arbitrary_average method.\n\nFor a 2-D table with size (M, N), its x-axis index range is [0, M-1], y-axis index range is [0, N-1]. Point\n(x, y) with x in range [0, M-1], and y in range [0, N-1] is valid point in table.\n\nFor a 1-D table, y-axis is ignored. Valid points are points with x in range [0, M-1].\n\nTables with more than 3-D are skipped.\n\nExamples\n\n% set_parameter tmlib_table_sample_method {arbitrary_average}  \n% set_parameter tmlib_arbitrary_average_points {(1,1) (3,3) (5,5)}\n      \n\nSee Also\ntmlib_table_sample_method(1)\n\n397"
            },
            {
                "doc_id": "_xtop_handbook_0282",
                "summary": "The document provides information about the parameter 'tmlib_arc_evaluation_principle' in XTop tools. This parameter, which can be set to 'min', 'max', or 'average', specifies the principle to calculate arc delay, transition, and internal power from working conditions. The default value is 'average'.",
                "content": "Parameters\n\nName\ntmlib_arc_evaluation_principle --Specify the principle to calculate arc delay, transition, and internal\npower from working conditions.\n\nType\ntype: enum \"min max average\"\n\nDefault\ndefault = \"average\"\n\nDescription\nThis parameter specifies the principle to calculate arc delay, transition, and internal power from working\nconditions. An arc may contain a lot of working conditions. This parameter can be set to extract the min,\nmax, or average value of all conditions as requested.\n\nExamples\n\n% set_parameter tmlib_arc_evaluation_principle {max}      \n      \n\nSee Also\ntmlib_cell_evaluation_principle(1) tmlib_edge_evaluation_principle(1)\n\n398"
            },
            {
                "doc_id": "_xtop_handbook_0283",
                "summary": "",
                "content": "Parameters\n\nName\ntmlib_area_min_reference --Specify the minimum reference for comparing area.\n\nType\ntype: float \"[0,inf)\"\n\nDefault\ndefault = \".0\"\n\nDescription\nThis parameter is used to specify the minimum reference for comparing area. Command compare_tmlib(1)\nwill compare cell area using this parameter.\n\nExamples\nSee Also\n\ncompare_tmlib(1)\n\n399"
            },
            {
                "doc_id": "_xtop_handbook_0284",
                "summary": "The document provides information about the parameter \"tmlib_cell_evaluation_principle\" in XTop tools. This parameter determines the principle to calculate delay, transition, and internal/leakage power of a cell. It can be set to \"min\", \"max\", or \"average\". It is also applicable for extracting the requested value from different working conditions for leakage power.",
                "content": "Parameters\n\nName\ntmlib_cell_evaluation_principle --Specify the principle to calculate delay, transition, and internal/leakage\npower of cell.\n\nType\ntype: enum \"min max average\"\n\nDefault\ndefault = \"average\"\n\nDescription\nThis parameter specifies the principle to calculate delay, transition, and internal/leakage power of cell. A\ncell may contain several arcs, it can be set to the min, max, or average value of all arcs as requested. For\nleakage power which is not defined on arc but on cell level, this parameter can also be used to extract the\nrequested value from different working conditions.\n\nExamples\n\n% set_parameter tmlib_cell_evaluation_principle {max}    \n    \n\nSee Also\ntmlib_arc_evaluation_principle(1) tmlib_edge_evaluation_principle(1)\n\n400"
            },
            {
                "doc_id": "_xtop_handbook_0285",
                "summary": "",
                "content": "Parameters\n\nName\ntmlib_clock_transition --Specify the clock transition for evaluation of cells with clock pins, the unit is ns.\n\nType\ntype: float \"[0,inf)\"\n\nDefault\ndefault = \"0.01\"\n\nDescription\nThis parameter specifies the clock transition for evaluation of cells with clock pins.\n\nExamples\nSee Also\n\ntmlib_table_sample_method(1)\n\n401"
            },
            {
                "doc_id": "_xtop_handbook_0286",
                "summary": "The document provides information about the parameter 'tmlib_constraint_calculate_method' in XTop. This parameter specifies the method to calculate a cell's constraint and offers four options: 'setup_only', 'hold_only', 'setup_hold_both', and 'setup_hold_window'. The default setting is 'setup_hold_both'.",
                "content": "Parameters\n\nName\ntmlib_constraint_calculate_method --Specify the method to calculate a cell constraint.\n\nType\ntype: enum \"setup_only hold_only setup_hold_both setup_hold_window\"\n\nDefault\ndefault = \"setup_hold_both\"\n\nDescription\nThis parameter specifies the method to calculate a cell's constraint. XTop provides four typical sample\nmethods.\n\n--setup_only. Only the rise/fall constraint in setup_rising/falling will be calculated.\n\n--hold_only. Only the rise/fall constraint in hold_rising/falling will be calculated.\n\n--setup_hold_both. All the rise/fall constraint in setup/hold rising/falling will be calculated.\n\n--setup_hold_window. Rise constraint in setup/hold rising/falling will be summed up based on\ncondition; Fall constraint in setup/hold_rising/falling will be summed up based on condition.\nThe calculated values will be selected based on the tmlib_edge_evaluation_principle(1) and the\ntmlib_arc_evaluation_principle(1) and the tmlib_cell_evaluation_principle(1).\n\nExamples\n\n% set_parameter tmlib_constraint_calculate_method {setup_only}      \n      \n\nSee Also\ntmlib_arc_evaluation_principle(1) tmlib_edge_evaluation_principle(1)\ntmlib_cell_evaluation_principle(1)\n\n402"
            },
            {
                "doc_id": "_xtop_handbook_0287",
                "summary": "The document provides information about the parameter 'tmlib_edge_evaluation_principle' in XTop tools. This parameter determines the principle to calculate delay, transition, and internal power from rising and falling edges of a certain arc and condition. It can be set to extract the 'min', 'max' or 'average' value as needed. The default setting is 'average'.",
                "content": "Parameters\n\nName\ntmlib_edge_evaluation_principle --Specify the principle to calculate delay, transition, and internal power\nfrom rising and falling edges.\n\nType\ntype: enum \"min max average\"\n\nDefault\ndefault = \"average\"\n\nDescription\nThis parameter specifies the principle to calculate edge delay, transition, and internal power from rising\nand falling edges of a certain arc and condition. It can be set to extract the min, max or average value of\nrising and falling as requested.\n\nExamples\n\n% set_parameter tmlib_edge_evaluation_principle {max}      \n      \n\nSee Also\ntmlib_cell_evaluation_principle(1) tmlib_arc_evaluation_principle(1)\n\n403"
            },
            {
                "doc_id": "_xtop_handbook_0288",
                "summary": "",
                "content": "Parameters\n\nName\ntmlib_fanout_factor --Specify a fanout load factor for fon sample method.\n\nType\ntype: int \"[1,9999]\"\n\nDefault\ndefault = \"4\"\n\nDescription\nThis parameter specifies a fanout load factor for fon sample method.\n\nExamples\nSee Also\n\ntmlib_table_sample_method(1)\n\n404"
            },
            {
                "doc_id": "_xtop_handbook_0289",
                "summary": "",
                "content": "Parameters\n\nName\ntmlib_fanout_load --Specify the fanout load for fixed sample method, unit is pF.\n\nType\ntype: float \"[0,inf)\"\n\nDefault\ndefault = \"0.0\"\n\nDescription\nThis parameter specifies the fanout load for fixed sample method. The unit for capacitance is pF.\n\nExamples\nSee Also\n\ntmlib_table_sample_method(1)\n\n405"
            },
            {
                "doc_id": "_xtop_handbook_0290",
                "summary": "",
                "content": "Parameters\n\nName\ntmlib_input_transition --Specify the input transition for fixed sample method, unit is ns.\n\nType\ntype: float \"[0,inf)\"\n\nDefault\ndefault = \"0.01\"\n\nDescription\nThis parameter specifies the input transition for fixed sample method. The unit for this parameter is ns.\n\nExamples\nSee Also\n\ntmlib_table_sample_method(1)\n\n406"
            },
            {
                "doc_id": "_xtop_handbook_0291",
                "summary": "",
                "content": "Parameters\n\nName\ntmlib_internal_power_min_reference --Specify the minimum reference for comparing internal power.\n\nType\ntype: float \"[0,inf)\"\n\nDefault\ndefault = \".0\"\n\nDescription\nThis parameter is used to specify the minimum reference for comparing internal power. Command\ncompare_tmlib(1) will compare internal power using this parameter. The unit is 'pJ'.\n\nExamples\nSee Also\n\ncompare_tmlib(1)\n\n407"
            },
            {
                "doc_id": "_xtop_handbook_0292",
                "summary": "The document provides information about the parameter 'tmlib_latch_timing_arc_definition' in XTop tools. This parameter specifies the behavior of a latch, whether it works as a combinational or sequential cell, with the default set as sequential. The parameter type is an enum with \"combinational\" and \"sequential\" as options. When set as sequential, the delay evaluation rule is the same as that of a flip flop.",
                "content": "Parameters\n\nName\ntmlib_latch_timing_arc_definition --Specify the behavior of latch, works as a combinational or sequential\ncell, default is sequential.\n\nType\ntype: enum \"combinational sequential\"\n\nDefault\ndefault = \"sequential\"\n\nDescription\nThis parameter specifies behavior of latch, works as a combinational or sequential cell, default is set as\nsequential.\n\nOnce it is set as sequential, the rule to evaluate the delay is same as that of flip flop. For detail, please\nrefer to tmlib_sequential_delay_definition(1). Otherwise the cell is treated as combinational, and only the\narc from data to output is considered.\n\nExamples\n\n  % set_parameter tmlib_latch_timing_arc_definition {combinational}\n      \n\nSee Also\ntmlib_sequential_delay_definition(1) tmlib_arc_evaluation_principle(1)\n\n408"
            },
            {
                "doc_id": "_xtop_handbook_0293",
                "summary": "",
                "content": "Parameters\n\nName\ntmlib_leakage_power_min_reference --Specify the minimum reference for comparing leakage power.\n\nType\ntype: float \"[0,inf)\"\n\nDefault\ndefault = \".0\"\n\nDescription\nThis parameter is used to specify the minimum reference for comparing leakage power. Command\ncompare_tmlib(1) will compare leakage power using this parameter. The unit is 'pW'.\n\nExamples\nSee Also\n\ncompare_tmlib(1)\n\n409"
            },
            {
                "doc_id": "_xtop_handbook_0294",
                "summary": "The document provides information about the parameter 'tmlib_memory_cell_delay_arc' in XTop tools. This parameter specifies the method to evaluate memory cell's delay with three types: 'read_arc', 'write_arc', and 'clock_cycle'. Each type has a specific definition and usage in evaluating memory delay.",
                "content": "Parameters\n\nName\ntmlib_memory_cell_delay_arc --Specify the method to evaluate memory cell's delay.\n\nType\ntype: enum \"read_arc write_arc clock_cycle\"\n\nDefault\ndefault = \"clock_cycle\"\n\nDescription\nThe parameter specifies the method to evaluate memory cell's delay.\n\nUsually, there are three types of delay for memory: read/write/cycle. For rom memory which is read-only,\nthere is no write delay. The tool provides three methods for users to evaluate memory delay:\n\n--read_arc: the read arc delay is divided into two phases: the first phase is the setup time of address pin\nto its related clock pin; the second phase is the delay from clock pin to outpin pin. The summation of\ntwo phases is the read delay.\n\n--write_arc: the write arc delay is defined as setup/hold window of the address pins and data input pins.\nFor rom memory has no write arc, its write delay is always 0.0.\n\n--clock_cycles: the clock cycle is defined on the clock pin. It can be defined by minimum_period, or by\nattribute min_period. When duplicate cycle info is defined in library, the data will be taken with above\norder.\n\nExamples\n\n      % set_parameter tmlib_memory_cell_delay_arc {read_arc}\n      \n\nSee Also\ntmlib_memory_cell_evaluation_unit(1)\n\n410"
            },
            {
                "doc_id": "_xtop_handbook_0295",
                "summary": "This is a description of the parameter \"tmlib_memory_cell_evaluation_unit\" in XTop tools. It specifies the evaluation unit for memory cell's area, leakage power, and internal power. The parameter type is an enum with options including \"cell\", \"word\", \"byte\", and \"bit\". The default value is \"cell\". It is used in the evaluation of memory's area, leakage power, and internal power, with data measured for the whole cell.",
                "content": "Parameters\n\nName\ntmlib_memory_cell_evaluation_unit --Specify the evaluation unit for memory cell's area, leakage power\nand internal power.\n\nType\ntype: enum \"cell word byte bit\"\n\nDefault\ndefault = \"cell\"\n\nDescription\nThis parameter specifies the evaluation unit for memory cell. It is applied in the evaluation of memory's\narea,leakage power and internal power.\n\nIn the timing library, data of area and leakage power are measured for the whole cell. Besides the concept\nof cell, users might evaluate memory with concepts of word, byte, bit, such as area of cell, area of each\nword, area of each byte, area of each bit. The valid evaluation_unit includes:\n\n--cell\n\n--word\n\n--byte\n\n--bit\n\nFor example, a memory with address_width 7, word_width 64, represents 1 cell, 128 words, 128*64/8\nbytes, 128*64 bits. The evaluation is based on the value looked up from the timing library and the number\nof evaluation_unit.\n\nInternal power on standard cell is defined on output pins and some input pins. It describes the internal\npower when the output or input pin switches. For memory library, besides the internal power on bit level,\nall relevant internal power at each switching are usually aggregated to clock pin, which means, the internal\npower defined on clock pin describes the whole cell's internal power. Therefore, only the internal power\ngroups on clock pin are token into evaluation. Since the switching happens at one word each time, one\nword's internal power equals to the whole cell's internal power.\n\nExamples\n      \n      % set_parameter tmlib_memory_cell_evaluation_unit {word}\n      \n\nSee Also\ntmlib_memory_cell_delay_arc(1)\n\n411"
            },
            {
                "doc_id": "_xtop_handbook_0296",
                "summary": "This document provides information about the parameter 'tmlib_rect_average_rect' in XTop tools. It specifies the sub-table rectangle for the 'rect_average' method. The parameter can be defined in two formats, either specifying the left-top and right-bottom of the rectangle or the left-top and width/height of the rectangle. It also provides examples of how to set this parameter.",
                "content": "Parameters\n\nName\ntmlib_rect_average_rect --Specify the sub-table rectangle for rect_average method.\n\nType\ntype: rect\n\nDefault\ndefault = \"((0,0) (8,8))\"\n\nDescription\nThis parameter specifies the sub-table rectangle for rect_average method. The parameter can be defined\nby :\n\n--((x1, y1) (x2, y2)): specifies left-top and right-bottom of the rectangle.\n\n--(x1, y1, width, height): specifies left-top and width/height of the rectangle. With this format, (right,\nbottom) = (left+width-1, top+height-1).\n\nFor a 2-D table with size (M, N), its x-axis index range is [0, M-1], y-axis index range is [0, N-1]. The\naverage points are overlaps between rectangles ((0,0) (M-1, N-1)) and ((x1, y1) (x2, y2)). For example,\noriginal table is 7x7, user rectangle is ((1,1) (3,3)), then the average points are {(1,1), (1,2), (1,3), (2,1),\n(2,2), (2,3), (3,1), (3,2), (3,3)}.\n\nFor a 1-D table, y* is ignored. The average points are overlaps between (0, M-1) and (x1, x2). For example,\noriginal table is 7x1, user rectangle is ((1,1) (3,3)), then the average points are {(1,0), (2,0), (3,0)}.\n\nTables with more than 3-D are skipped.\n\nExamples\n\n% set_parameter tmlib_table_sample_method {rect_average}  \n% set_parameter tmlib_rect_average_rect {((1, 1) (4, 4))}  // format 1\n% set_parameter tmlib_rect_average_rect {(1, 1, 4, 4)}     // format 2\n      \n\nSee Also\ntmlib_table_sample_method(1)\n\n412"
            },
            {
                "doc_id": "_xtop_handbook_0297",
                "summary": "The document provides information about the parameter \"tmlib_sequential_delay_definition\" in XTop tools. This parameter specifies the delay calculation method for sequential arcs, with four types: \"data_delay\", \"constraint_window\", \"average_data_delay\", and \"clock_delay\". The document also explains how these types are defined and used in timing evaluation.",
                "content": "Parameters\n\nName\ntmlib_sequential_delay_definition --Specify the delay calculation method for sequential arcs.\n\nType\ntype: enum \"data_delay constraint_window average_data_delay clock_delay\"\n\nDefault\ndefault = \"data_delay\"\n\nDescription\nThis parameter specifies the delay calculation method for sequential arcs.\n\nGenerally speaking, the sequential arcs from clock pin to data output are usually taken as delay arc, such\nas ck->q; the sequential arcs from clock pin to data input are usually taken as constraint arc, such as ck-\n>d. In timing evaluation, especially the delay evaluation, the sequential arc is considered as a combination\nof delay arc and constraint arc to represent the cell characteristics on data propagation.\n\nHow to do the combination? First, find the delay arc on the sequential cell; Second, find the constraint arc\nrelated to the clock pins on previous delay arc; Third, append the data input of the constraint arc to the\ncorresponding delay arc. So now, the arc with both constraint and delay info is generated.\n\nWith this parameter, the delay of the generated arc is calculated:\n\n--data_delay : the minimal delay that is needed for data to output pin. It is defined as the sum of setup\nconstraint and the delay from clock pin to output pin.\n\n--constraint_window : the minimal delay that a data input should keep steady. It is defined as the sum of\nsetup constraint and the corresponding hold constraint.\n\n--average_dat_delay : It is defined as the average of data_delay and constraint_window.\n\n--clock_delay : It is defined as only delay from CK to Q, not considered the constraint infos.\n\nCurrently the delay arc include the arcs with timing_type attribute in timing group as :\n\n--rising_edge\n\n--falling_edge\n\nThe constraint arc include the arcs with timing_type attribute in timing groups as :\n\n--setup_rising\n\n--setup_falling\n\n--hold_rising\n\n--hold_falling\n\nExamples\n\n    % set_parameter tmlib_sequential_delay_definition {constraint_window}\n    \n\nSee Also\ntmlib_latch_timing_arc_definition(1)\n\n414"
            },
            {
                "doc_id": "_xtop_handbook_0298",
                "summary": "The document provides information about the parameter 'tmlib_show_singular_for_cell_trend'. This is a boolean type parameter with a default value of 'true'. It controls whether to display the singular group in the cell trend result window. A singular group is defined as a group where all cells can't match a keyword. If the parameter is set to 'false', the singular group will not be listed in the cell trend result window.",
                "content": "Parameters\n\nName\ntmlib_show_singular_for_cell_trend --Control whether show singular group in cell trend result GUI\nwindow.\n\nType\ntype: bool\n\nDefault\ndefault = \"true\"\n\nDescription\nThis parameter is used to control whether show singular group in cell trend result window or not. The\ngroup in which all cells can't match a keyword is called singular group. If this parameter is false, cell trend\nresult window won't list it on the tree. Default value is true.\n\nExamples\n\n    % set_parameter tmlib_show_singular_for_cell_trend false\n    \n\n415"
            },
            {
                "doc_id": "_xtop_handbook_0299",
                "summary": "",
                "content": "Parameters\n\nName\ntmlib_table_center_offset --Specify a table center offset for center sample method.\n\nType\ntype: point\n\nDefault\ndefault = \"(0, 0)\"\n\nDescription\nThis parameter specifies a table center offset for center method. It is adjusted to ensure that the desired\npoint in table is feched. If the point after offset exceeds the boundary, the boundary point closest to that\npoint is taken.\n\nExamples\nSee Also\n\ntmlib_table_sample_method(1)\n\n416"
            },
            {
                "doc_id": "_xtop_handbook_0300",
                "summary": "",
                "content": "Parameters\n\nName\ntmlib_table_excision_depth --Specify table excision depth for average sample method.\n\nType\ntype: int \"[0,inf)\"\n\nDefault\ndefault = \"0\"\n\nDescription\nThis parameter specifies the excision depth for average sample method. It is adjusted automatically to\nensure that at least one point is fetched.\n\nExamples\nSee Also\n\ntmlib_table_sample_method(1)\n\n417"
            },
            {
                "doc_id": "_xtop_handbook_0301",
                "summary": "The document provides information about the parameter 'tmlib_table_sample_method' used in XTop tools. This parameter specifies the sample method to get a value representing a table or a vector while analyzing a timing library. It includes six types of sample methods: 'fon', 'fixed', 'table_center', 'table_average', 'rect_average', and 'arbitrary_average'. Each method requires specific parameters to be set for proper functioning.",
                "content": "Parameters\n\nName\ntmlib_table_sample_method --Specify the sample method to get a value representing a table or vector.\n\nType\ntype: enum \"fon fixed table_center table_average rect_average arbitrary_average\"\n\nDefault\ndefault = \"table_center\"\n\nDescription\nThis parameter specifies the sample method to get a value representing a table or a vector. While analyzing\na timing library, it needs to get typical characteristics, like delay, transition, power of a cell. And it is often\nto look-up in a 2D table, and needs to assume a working environment for it, such as an input transition,\nand a fanout load. It provides four typical sample methods.\n\n--fon. A cell drives 'n' copies of itself recursively. Theoretically, it will reach a stable state soon, and this\nis used as the working environment. The special 'n' can be configured by tmlib_fanout_factor(1).\n\n--fixed. Users need to specify a fixed input transition and a fixed fanout load by tmlib_input_transition(1)\nand tmlib_fanout_load(1).\n\n--table_center. The value on the center of the table will be used. While any dimension is not even number,\nand the center contains more than one number, the average of them is used.The center point of table can\nbe offset by specify a center offset value through tmlib_table_center_offset(1).\n\n--table_average. The average value of all the points in table is used. The marginal points can be cut off\nby specify a excision depth through tmlib_table_excision_depth(1).\n\n--rect_average. The average value of all the overlapped points between a rectangle and the original table.\nThe rectangle is specified through tmlib_rect_average_rect(1).\n\n--arbitrary_average. The average value of all user specified points through\ntmlib_arbitrary_average_points(1). The points are arbitrary and not required to satisfy any shape\nrequirement.\n\nFor cells with clock pins, it also needs to specify a typical transition for the clock through\ntmlib_clock_transition(1). And this is applicable for all the above four methods.\n\nExamples\n\n% set_parameter tmlib_table_sample_method {fixed}\n% set_parameter tmlib_input_transition {0.01}\n% set_parameter tmlib_clock_transition {0.008}\n% set_parameter tmlib_fanout_load {100}\n\n% set_parameter tmlib_table_sample_method {fon}\n% set_parameter tmlib_fanout_factor {5}\n% set_parameter tmlib_clock_transition {0.008}\n\n% set_parameter tmlib_table_sample_method {table_average}\n% set_parameter tmlib_table_excision_depth {2}\n\n% set_parameter tmlib_table_sample_method {table_center}\n% set_parameter tmlib_table_center_offset {(1,2)}\n\n% set_parameter tmlib_table_sample_method {rect_average}\n% set_parameter tmlib_rect_average_rect {((1, 1) (4, 4))}\n\n% set_parameter tmlib_table_sample_method {arbitrary_average}  \n% set_parameter tmlib_arbitrary_average_points {(1,1) (3,3) (5,5)}\n      \n\n419"
            },
            {
                "doc_id": "_xtop_handbook_0302",
                "summary": "",
                "content": "Parameters\n\nName\ntmlib_timing_capacitance_min_reference --Specify the minimum reference for comparing timing\ncapacitance.\n\nType\ntype: float \"[0,inf)\"\n\nDefault\ndefault = \".0\"\n\nDescription\nThis parameter is used to specify the minimum reference for comparing timing capacitance. Command\ncompare_tmlib(1) will compare capacitance using this parameter. The unit is 'pf'.\n\nExamples\nSee Also\n\ncompare_tmlib(1)\n\n420"
            },
            {
                "doc_id": "_xtop_handbook_0303",
                "summary": "",
                "content": "Parameters\n\nName\ntmlib_timing_delay_min_reference --Specify the minimum reference for comparing timing delay.\n\nType\ntype: float \"[0,inf)\"\n\nDefault\ndefault = \".0\"\n\nDescription\nThis parameter is used to specify the minimum reference for comparing timing delay. Command\ncompare_tmlib(1) will compare delay using this parameter. The unit is 'ns'.\n\nExamples\nSee Also\n\ncompare_tmlib(1)\n\n421"
            },
            {
                "doc_id": "_xtop_handbook_0304",
                "summary": "",
                "content": "Parameters\n\nName\ntmlib_timing_transition_min_reference --Specify the minimum reference for comparing timing\ntransition.\n\nType\ntype: float \"[0,inf)\"\n\nDefault\ndefault = \".0\"\n\nDescription\nThis parameter is used to specify the minimum reference for comparing timing transition. Command\ncompare_tmlib(1) will compare transition using this parameter. The unit is 'ns'.\n\nExamples\nSee Also\n\ncompare_tmlib(1)\n\n422"
            },
            {
                "doc_id": "_xtop_handbook_0305",
                "summary": "This document provides information about the parameter 'unreasonable_negative_slack' in XTop tools. It is a float type parameter with a default value of \"-1000\". It defines an unreasonable negative value in nanoseconds (ns) that should be ignored during optimization, particularly when the design is not ready and some constraints are temporary. An example of setting this parameter to -3ns is also provided.",
                "content": "Parameters\n\nName\nunreasonable_negative_slack --Define an unreasonable negative slack value in ns that should be ignored\nin optimization.\n\nType\ntype: float \"(-inf,0)\"\n\nDefault\ndefault = \"-1000\"\n\nDescription\nThis parameter defines an unreasonable negative value that all the setup and hold slack less than it should\nbe ignored. The unit of this value is ns.\n\nWhile the design is not all ready, and part of the constraint are temporary, there will be some large\nviolations reported from STA tools. This parameter is used to skip those unreasonable pins and paths\nduring optimization.\n\nExamples\nThe following example sets unreasonable_negative_slack as -3ns.\n\n% set_parameter unreasonable_negative_slack {-3}\n      \n\n423"
            },
            {
                "doc_id": "_xtop_handbook_0306",
                "summary": "This is a description of the parameter 'placement_legalization_mode' in XTop tool. It is a boolean type parameter with a default value of 'true'. When enabled, it searches for legal places for changed or newly inserted cells within the legalization distance, otherwise, cells are placed at original or specified locations. It doesn't affect logical only mode and postmask eco. An example is provided to show how to disable it.",
                "content": "Parameters\n\nName\nplacement_legalization_mode --Specify whether to use placement legalization mode.\n\nType\ntype: bool\n\nDefault\ndefault = \"true\"\n\nDescription\nThis parameter specifies whether to use placement legalization mode. While it is off, the changed cells\nand the newly inserted cells will be placed just at the original and specified locations. Otherwise, it will try\nto search legal places for these cells within the legalization distance, and squeeze other cells if possible.\n\nThis parameter has no effect for logical only mode and postmask eco.\n\nExamples\nThe following example shows how to disable the on_legal mode.\n\n% set_parameter placement_legalization_mode false\n      \n\n424"
            },
            {
                "doc_id": "_xtop_handbook_0307",
                "summary": "This is a description of the parameter \"placement_legalization_obligated\" in XTop tool. It is a boolean type parameter with a default value of \"false\". When set to true, it obligates the placement legalization of sized, moved, or inserted cells in manual eco. If the legalization fails, it will report an error and do nothing.",
                "content": "Parameters\n\nName\nplacement_legalization_obligated --Placement legalization is obligated or not.\n\nType\ntype: bool\n\nDefault\ndefault = \"false\"\n\nDescription\nWhile parameter placement_legalization_mode(1) is set to true, it will try to legalize the sized, moved, or\ninserted cells in manual eco. By default, if the legalization failed, it will go on the action, and place these\ncells at the original or specified places. It needs extra efforts later to find legal places for these cells. If\nyou do not want commit an eco action while it failed to place it legally, just set this parameter to true, it\nwill report an error and do nothing.\n\nFor those actions that moves, sizes or inserts multiples cells, it will fail and do nothing if it fails to place\nanyone of them legally.\n\nExamples\n\n425"
            },
            {
                "doc_id": "_xtop_handbook_0308",
                "summary": "This is a description of the parameter 'eco_allow_optimize_heavy_fanout_net' in XTop tool. It is a boolean type parameter with a default value of 'false'. When set to 'true', it allows auto optimization for heavy fanout net during DRC fix, provided timing is not an issue.",
                "content": "Parameters\n\nName\neco_allow_optimize_heavy_fanout_net --Allow auto optimization for heavy fanout net.\n\nType\ntype: bool\n\nDefault\ndefault = \"false\"\n\nDescription\nBy default, heavy fanout net is not allowed to be touched during auto optimization. When this parameter\nis set true, it is allowed to do eco actions on such net. But user should be sure that timing is not an issue.\n\nThis parameter is only effective for DRC fix for now.\n\nExamples\nThe following example shows how to enable the parameter:\n\n% set_parameter eco_allow_optimize_heavy_fanout_net true\n      \n\n426"
            },
            {
                "doc_id": "_xtop_handbook_0309",
                "summary": "The document provides information about the parameter 'eco_auto_setup_extra_derate'. It is a boolean type parameter with a default value of 'false'. When set to 'true', it allows automatic setting of 'setup_extra_derate' and 'pocvm_logic_depth_scale_factor' under certain conditions related to process size, voltage, and leakage optimization. However, if these parameters are manually set by the user, the automatic setting becomes invalid.",
                "content": "Parameters\n\nName\neco_auto_setup_extra_derate --Allow auto set setup_extra_derate and pocvm_logic_depth_scale_factor.\n\nType\ntype: bool\n\nDefault\ndefault = \"false\"\n\nDescription\nWhen it is set to true, for hold fix, when the process is 5nm/7nm and voltage of corresponding corner\nis less than 0.7v, setup_extra_derate will be automatically set to 1.05. If pocv enabled, when the process\nis 5nm/7nm and there is one corner voltage less than 0.7v, pocvm_logic_depth_scale_factor will be\nautomatically set to 0.5.\n\nWhen it is set to true, for leakage optimization, setup_extra_derate will be automatically set to 1.02.\n\nPlease note, when those two parameters are manually set by user, the automatic setting will be invalid.\n\nExamples\nThe following example shows how to set the parameter:\n\n% set_parameter eco_auto_setup_extra_derate false\n      \n\n427"
            },
            {
                "doc_id": "_xtop_handbook_0310",
                "summary": "The document provides information about the 'eco_buffer_group' parameter in XTop tools. This parameter defines a macro buffer group for buffers of different types, such as normal buffer and delay buffer. It allows swapping between these buffers by defining them in a group. The buffer names can be specified with a wildcard, and any cells matching the wildcard will be added to the group. This parameter affects the results of 'report_matched_cells' and 'report_cell_classification'.",
                "content": "Parameters\n\nName\neco_buffer_group --A macro buffer group for buffers with different types.\n\nType\ntype: string_list\n\nDefault\ndefault = \"\"\n\nDescription\nThis parameter defines a macro buffer group for buffers with different types. The foundry will provides\ntwo major types of buffers: normal buffer and delay buffer. And commonly they are defined with different\nfootprint in libraries. If you want to swap buffers between normal and delay buffers, it needs to define\nsuch a buffer group. While any member is defined in buffer group, the whole buffer group that classified\nby eco_cell_match_attribute(1) will also be added to this group.\n\nThe buffer names can be specified with wildcard, any cells matched the specified wildcard will be added\nto this group. It will affect the result of report_matched_cells and report_cell_classification.\n\nExamples\nThe following example classifies normal buffers and delay buffers into one group.\n\n% set_parameter eco_buffer_group {BUFFD* DELD*}\n      \n\nSee Also\nreport_matched_cells(1) report_cell_classification(1)\n\n428"
            },
            {
                "doc_id": "_xtop_handbook_0311",
                "summary": "This is a description of the parameter 'eco_buffer_list_for_hold' used in XTop tools. It is a string list type parameter with a default value of an empty string. This parameter specifies the buffers used to fix hold violations in eco. If the buffers are not specified in the fix hold violation command, this parameter will be used as the default. An example of how to set this parameter is also provided.",
                "content": "Parameters\n\nName\neco_buffer_list_for_hold --Buffers used to fix hold violations in eco.\n\nType\ntype: string_list\n\nDefault\ndefault = \"\"\n\nDescription\nThis parameter specifies the buffers used to fix hold violations in eco. While the buffers is not specified\nin fix hold violation command, it will take this parameter as the default.\n\nExamples\nThe following example shows how to set the parameter:\n\n% set_parameter eco_buffer_list_for_hold {BUFX1TH DELD0BTH DELD2BTH}\n      \n\nSee Also\neco_buffer_list_for_setup(1)\n\n429"
            },
            {
                "doc_id": "_xtop_handbook_0312",
                "summary": "This is a description of the parameter 'eco_buffer_list_for_setup' used in XTop tools. It is a string list type parameter with a default value of an empty string. This parameter specifies the buffers used to fix setup violations in eco. If the buffers are not specified in the fix setup violation command, this parameter will be used as the default. An example of how to set this parameter is also provided.",
                "content": "Parameters\n\nName\neco_buffer_list_for_setup --Buffers used to fix setup violations in eco.\n\nType\ntype: string_list\n\nDefault\ndefault = \"\"\n\nDescription\nThis parameter specifies the buffers used to fix setup violations in eco. While the buffers is not specified\nin fix setup violation command, it will take this parameter as the default.\n\nExamples\nThe following example shows how to set the parameter:\n\n% set_parameter eco_buffer_list_for_setup {BUFX4TH INVX1TH INVX8TH}\n      \n\nSee Also\neco_buffer_list_for_hold(1)\n\n430"
            },
            {
                "doc_id": "_xtop_handbook_0313",
                "summary": "This is a description of the parameter 'eco_buffer_wire_length_adjustment' in XTop tool. It is an enum type with options \"ratio\" and \"incremental\", with \"ratio\" being the default. This parameter determines how the wire length of a newly inserted buffer is set in auto eco.",
                "content": "Parameters\n\nName\neco_buffer_wire_length_adjustment --Adjustment method for buffer wire length setting.\n\nType\ntype: enum \"ratio incremental\"\n\nDefault\ndefault = \"ratio\"\n\nDescription\nThis parameter specifies the method for how to set new inserted buffer's wire length in auto eco. By default,\ntool uses ideal wire length ratio according to buffer position. It is suggested to use incremental method if\nmany detour nets found in design, avoid getting an over pessimism result.\n\nExamples\nThe following example shows how to set the parameter:\n\n% set_parameter eco_buffer_wire_length_adjustment incremental\n      \n\n431"
            },
            {
                "doc_id": "_xtop_handbook_0314",
                "summary": "",
                "content": "Parameters\n\nName\neco_build_logic_depth --Enable build logic depth for eco action.\n\nType\ntype: bool\n\nDefault\ndefault = \"true\"\n\nDescription\nBy default, logic depth will be built if AOCV/POCV or LVF library included, before any eco action is\ncommitted. If it is disabled, a default logic depth will be considered for auto eco in timing calculation,\nand skipped for manual eco.\n\nExamples\nThe following example shows how to set the parameter:\n\n% set_parameter eco_build_logic_depth false\n      \n\n432"
            },
            {
                "doc_id": "_xtop_handbook_0315",
                "summary": "",
                "content": "Parameters\n\nName\neco_capacitance_slack_margin --Capacitance slack margin while fixing hold, setup, transition,\ncapacitance violations, with unit pF.\n\nType\ntype: float\n\nDefault\ndefault = \"0\"\n\nDescription\nThis parameter defines the margin of capacitance while fixing hold, setup, capacitance and capacitance\nviolations. The unit is pF.\n\nExamples\nThe following example over-constraints the capacitance by 0.005pF:\n\n% set_parameter eco_capacitance_slack_margin 0.005\n% fix_setup_path_violations\n      \n\n433"
            },
            {
                "doc_id": "_xtop_handbook_0316",
                "summary": "",
                "content": "Parameters\n\nName\neco_capacitance_slack_target --Capacitance slack target while fixing capacitance violations, with unit\npF.\n\nType\ntype: float\n\nDefault\ndefault = \"0\"\n\nDescription\nThis parameter defines the target of capacitance while fixing capacitance violations. The unit is pF.\n\nExamples\nThe following example over-fixes the capacitance violations to 0.1pF:\n\n% set_parameter eco_capacitance_slack_target 0.1\n% fix_capacitance_violations\n      \n\n434"
            },
            {
                "doc_id": "_xtop_handbook_0317",
                "summary": "This document provides information about the parameter 'eco_cell_classify_rule' in XTop tool. It is an enum type parameter with three possible values: 'cell_attribute', 'nominal_keywords', and 'nominal_regex'. The parameter is used to classify library cells based on different rules. The default value is 'cell_attribute'. The document also provides examples of how to set this parameter.",
                "content": "Parameters\n\nName\neco_cell_classify_rule --Rule to classify library cells.\n\nType\ntype: enum \"cell_attribute nominal_keywords nominal_regex\"\n\nDefault\ndefault = \"cell_attribute\"\n\nDescription\nThis parameter specifies the rule used to classify library cells. There are three rules: cell_attribute,\nnominal_keywords, and nominal_regex.\n\nCell attribute is a typical attribute defined in timing library, and is decided by parameter\neco_cell_match_attribute(1). Cells with the same attribute will be classified into one group.\n\nWhile nominal_keywords or nominal_regex is specified, parameter eco_cell_nominal_swap_keywords(1)\nand eco_cell_nominal_sizing_pattern(1) will be used to classify library cells respectively.\n\nExamples\nThe following example sets the eco_cell_classify_rule to cell_attribute \"user_function_class\".\n\n% set_parameter eco_cell_classify_rule cell_attribute\n% set_parameter eco_cell_match_attribute user_function_class\n      \n\nThis example sets the eco_cell_classify_rule to nominal_keywords.\n\n% set_parameter eco_cell_classify_rule nominal_keywords\n% set_parameter eco_cell_nominal_swap_keywords \\\n                {\"ULVT\" \"LVT\" \"\" \"HVT\"}\n      \n\nThe following example sets the eco_cell_classify_rule to nominal_regex.\n\n% set_parameter eco_cell_classify_rule nominal_regex\n% set_parameter eco_cell_nominal_sizing_pattern {X([0-9]+)TH}\n      \n\nSee Also\neco_cell_match_attribute(1) eco_cell_nominal_swap_keywords(1) eco_cell_nominal_sizing_pattern(1)\n\n435"
            },
            {
                "doc_id": "_xtop_handbook_0318",
                "summary": "This is a description of the parameter 'eco_cell_match_attribute' in XTop tool. It is an enum type with options \"footprint\", \"user_function_class\", and \"pin_function\". The default value is \"footprint\". This parameter is used to classify cells for sizing in the context of 'eco_cell_classify_rule(1)' set to 'cell_attribute'.",
                "content": "Parameters\n\nName\neco_cell_match_attribute --Cell attribute used to classify cells for sizing.\n\nType\ntype: enum \"footprint user_function_class pin_function\"\n\nDefault\ndefault = \"footprint\"\n\nDescription\nThis parameter specifies cell attribute used to classify cells for sizing while eco_cell_classify_rule(1) is set\nto cell_attribute. The cells can be classified by cell_footprint, user_function_class, or pin functions which\nare defined in timing library of the reference corner.\n\nExamples\nThis example sets the parameter value to pin_function.\n\n% set_parameter eco_cell_match_attribute pin_function\n      \n\nSee Also\neco_cell_classify_rule(1)\n\n436"
            },
            {
                "doc_id": "_xtop_handbook_0319",
                "summary": "This is a description of the parameter 'eco_cell_nominal_sizing_pattern' in XTop tool. It is a string type parameter with a default value of an empty string. It defines the nominal pattern for sizing cells, and it requires a valid regular expression to capture the cell area number uniquely in names. An example of its usage is also provided.",
                "content": "Parameters\n\nName\neco_cell_nominal_sizing_pattern --Nominal pattern for sizing cells.\n\nType\ntype: string\n\nDefault\ndefault = \"\"\n\nDescription\nThis parameter defines the nominal pattern for sizing cells. Generally, there perhaps be a lot of candidates\nwhile sizing cells by matching footprint. This parameter provides a strict way to just size cells by extract\nthe number that represents the area of cell in names.\n\nIt needs to ensure that the given pattern is a valid regular expression, and can capture the number uniquely\nin names. For example: \"X([0-9]+)TH\" to catch number of area for the naming style like \"AND2X2TH\",\n\"BUFX24TH\".\n\nExamples\nThis example shows how to give a valid regular expression pattern to catch the cell.\n\n% set_parameter eco_cell_nominal_sizing_pattern {X([0-9]+)TH}\n      \n\n437"
            },
            {
                "doc_id": "_xtop_handbook_0320",
                "summary": "This is a description of the parameter 'eco_cell_nominal_swap_keywords' in XTop tools. It is a string list type parameter with a default value of \"\". It defines the nominal keywords for swapping cells, which can be distinguished by the keywords in cell names. The keywords can be defined in multiple dimensions with a separator \"@\". An example of how to define the nominal keywords for swapping cells is also provided.",
                "content": "Parameters\n\nName\neco_cell_nominal_swap_keywords --Nominal keywords for swapping cells.\n\nType\ntype: string_list\n\nDefault\ndefault = \"\"\n\nDescription\nThis parameter defines the nominal keywords for swapping cells. Commonly, the foundry offers cells with\ndifferent vt or channel lengths for lower power designs. These cells can be distinguished by the keywords\nin cell names. The keywords should be given in descending order of leakage power.\n\nThe keywords can be defined in multiple dimensions with a separator \"@\". For example: \"lvt@n30\nnvt@n40 hvt@n40\".\n\nExamples\nThis example shows how to define the nominal keywords for swapping cells.\n\n% set_parameter eco_cell_nominal_swap_keywords \"LVT NVT HVT\"\n      \n\n438"
            },
            {
                "doc_id": "_xtop_handbook_0321",
                "summary": "This is a description of the parameter 'eco_copy_mib_timing_data' in XTop. It is a boolean type parameter with a default value of 'false'. When set to 'true', it allows XTop to copy timing data from one MIB pin or net to others that do not have annotated data. This parameter should be set before 'read_timing_data' to be effective. An example of how to set the parameter is also provided.",
                "content": "Parameters\n\nName\neco_copy_mib_timing_data --Copy timing data from one MIB pin or net to others.\n\nType\ntype: bool\n\nDefault\ndefault = \"false\"\n\nDescription\nIn turbo mode, some MIB pin do not have timing violation, so there will be no transition or cap data, and\nthe MIB pins can not be fixed due to no annotated data.\n\nWhen this parameter is set true, XTop copies transition of pin and cap of net from first annotated MIB\npin to other unannotated MIB pins.\n\nThis parameter should be set before read_timing_data to be effective.\n\nExamples\nThe following example shows how to set the parameter:\n\n% set_parameter eco_copy_mib_timing_data true\n      \n\n439"
            },
            {
                "doc_id": "_xtop_handbook_0322",
                "summary": "This is a description of the parameter 'eco_driver_setup_slack_deterioration' used in hold time optimization process. It is a float type with a default value of 0.002. This parameter defines the setup slack threshold of a driver that is allowed to break, measured in ns. It allows for slight deterioration to improve efficiency.",
                "content": "Parameters\n\nName\neco_driver_setup_slack_deterioration --The setup slack threshold of driver that allowed to break in hold\noptimization process, with unit ns.\n\nType\ntype: float \"[0,inf)\"\n\nDefault\ndefault = \"0.002\"\n\nDescription\nThis parameter defines the setup slack threshold of driver that allowed to break in hold time optimization\nprocess. The unit of this parameter is ns. After a buffer inserted on a sink of net, sometimes the total\ncapacitance will increase a little, and the setup time of the driver stage will be broken if it is originally\ncritical. For most cases, a slight deterioration should be allowed to avoid dead lock and improve the\nefficiency of hold fix.\n\nNotice that deterioration value is only the part of slack variation after it becomes negative.\n\nExamples\n\n440"
            },
            {
                "doc_id": "_xtop_handbook_0323",
                "summary": "This is a description of the parameter 'eco_dummy_cell_list_for_hold' in XTop tool. It is a string list type parameter used to specify the dummy cells for fixing small hold violations in eco. The dummy cells can only be buffer or inverter. The parameter must be set if the user wants to use a dummy cell to fix hold. An example of how to set the parameter is also provided.",
                "content": "Parameters\n\nName\neco_dummy_cell_list_for_hold --Dummy cells used to fix small hold violations in eco.\n\nType\ntype: string_list\n\nDefault\ndefault = \"\"\n\nDescription\nThis parameter specifies the dummy cells used to fix small hold violations in eco. Notice that dummy cells\ncan only be buffer or inverter, and this parameter must be set if user wants to use dummy cell to fix hold.\n\nExamples\nThe following example shows how to set the parameter:\n\n% set_parameter eco_dummy_cell_list_for_hold {BUFX4TH DELD0BTH}\n      \n\nSee Also\nfix_hold_gba_violations(1) fix_hold_path_violations(1)\n\n441"
            },
            {
                "doc_id": "_xtop_handbook_0324",
                "summary": "The document provides information about the parameter 'eco_ga_auto_refill' used in XTop tools. It is a boolean type parameter with a default value of 'true'. This parameter allows automatic refilling of GA fillers for post mask eco. If set to 'false', the refilling will be skipped and users will have to add GA fillers manually after all the eco actions. This parameter is only effective for post mask eco flow. An example is also provided on how to disable this parameter.",
                "content": "Parameters\n\nName\neco_ga_auto_refill --Allow auto refill GA fillers for post mask eco.\n\nType\ntype: bool\n\nDefault\ndefault = \"true\"\n\nDescription\nBy default, GA fillers will be auto refilled after post mask eco. When this parameter is set false, the refilling\nwill be skipped. User should add GA fillers by themselves after all the eco actions.\n\nThis parameter is only effective for post mask eco flow.\n\nExamples\nThe following example shows how to disable the parameter:\n\n% set_parameter eco_ga_auto_refill false\n      \n\n442"
            },
            {
                "doc_id": "_xtop_handbook_0325",
                "summary": "",
                "content": "Parameters\n\nName\neco_ga_cell_sizing_rule --Allow more sizing candidates for GA cell in postmask eco.\n\nType\ntype: enum \"partial complete\"\n\nDefault\ndefault = \"partial\"\n\nDescription\nBy default, sizing from GA cell to non-GA cell, or non-GA cell to GA cell is not allowed in postmask eco.\nTool provide this parameter to allow the behavior. It should be used very carefully.\n\nExamples\nThe following example shows how to set the parameter:\n\n% set_parameter eco_ga_cell_sizing_rule complete\n      \n\n443"
            },
            {
                "doc_id": "_xtop_handbook_0326",
                "summary": "This is a description of the parameter 'eco_ga_filler_list' in XTop tools. It is a string list type parameter with a default value of an empty string. It specifies the gate array fillers used to insert buffer or size cell in post mask eco. The parameter supports multi-height gate array fillers and requires the inclusion of gate array filler1 cell in the list. An example of how to set the parameter is also provided.",
                "content": "Parameters\n\nName\neco_ga_filler_list --Gate array fillers used in post mask eco.\n\nType\ntype: string_list\n\nDefault\ndefault = \"\"\n\nDescription\nThis parameter specifies the gate array fillers used to insert buffer or size cell in post mask eco. These gate\narray fillers must have gate array site or match gate array name patterns. And gate array filler1 cell MUST\nbe included in this list to guarantee the refilling. Also, Multi-height gate array fillers are supported.\n\nExamples\nThe following example shows how to set the parameter:\n\n% set_parameter eco_ga_filler_list {GFILL1 GFILL2 GFILL3 GFILL1_2X GFILL2_2X GFILL3_2X}\n      \n\nSee Also\neco_ga_site(1)\n\n444"
            },
            {
                "doc_id": "_xtop_handbook_0327",
                "summary": "This is a description of the parameter 'eco_ga_name_patterns' used in XTop tools. It is a string list type parameter with a default value of an empty string. It specifies the name patterns for gate array cells, and cell names matching these patterns will be recognized as gate array cells. The document also mentions another parameter 'eco_ga_site' which can be used with priority over 'eco_ga_name_patterns'. An example of how to set the parameter is provided.",
                "content": "Parameters\n\nName\neco_ga_name_patterns --Name patterns used by gate array cells.\n\nType\ntype: string_list\n\nDefault\ndefault = \"\"\n\nDescription\nThis parameter specifies the name patterns for gate array cells. Cell names which match these patterns will\nbe recognized as gate array cells. If eco_ga_site is also set, use eco_ga_site as the matter of priority.\n\nExamples\nThe following example shows how to set the parameter:\n\n        % set_parameter eco_ga_name_patterns {GAFILL* GACAP* GABUF*}\n      \n\nSee Also\neco_ga_site(1)\n\n445"
            },
            {
                "doc_id": "_xtop_handbook_0328",
                "summary": "This is a description of the parameter 'eco_ga_site' used in XTop tools. It is a string_list type parameter with a default value of \"\". It specifies the placement sites for gate array cells and is used to recognize and size these cells. If 'eco_ga_name_patterns' is also set, 'eco_ga_site' takes priority. An example of how to set the parameter is provided.",
                "content": "Parameters\n\nName\neco_ga_site --Placement sites used by gate array cells.\n\nType\ntype: string_list\n\nDefault\ndefault = \"\"\n\nDescription\nThis parameter specifies the placement sites for gate array cells. Cells which use these sites will be\nrecognized as gate array cells. While sizing gate array cell in eco, it must be sized to reference cell which\nhas the same site. If eco_ga_name_patterns is also set, use eco_ga_site as the matter of priority.\n\nExamples\nThe following example shows how to set the parameter:\n\n        % set_parameter eco_ga_site {gacore}\n      \n\nSee Also\neco_ga_filler_list(1)\n\n446"
            },
            {
                "doc_id": "_xtop_handbook_0329",
                "summary": "This is a description of the 'eco_gain_threshold' parameter in XTop tool. It is a float type parameter with a default value of 0.001. It controls the minimum gain when fixing setup/hold/transition. The parameter is ignored when using the 'split_net' method. Only solutions with on-path gain greater than or equal to 'eco_gain_threshold' on 'refSce' will be accepted. It is typically set by the user when fixing setup using 'size_cell' or 'insert_buffer' method.",
                "content": "Parameters\n\nName\neco_gain_threshold --The acceptable minimum gain when fix hold/setup/transition, the unit is ns.\n\nType\ntype: float \"[0,inf)\"\n\nDefault\ndefault = \"0.001\"\n\nDescription\nThis parameter controls the minimum gain when fix setup/hold/transition. Note any fix by split_net method\nwill ignore this parameter.\n\nOnly solution which on-path gain >= eco_gain_threshold on refSce will be accepted.\n\nThe refSce is the worst non-skipped scenario when fix timing. In general, user set this parameter only\nwhen fix setup using size_cell or insert_buffer method.\n\nExamples\nThis example sets the eco_gain_threshold parameter is 0.005ns.\n\n% set_parameter eco_gain_threshold 0.005\n% fix_setup_path_violations\n      \n\n447"
            },
            {
                "doc_id": "_xtop_handbook_0330",
                "summary": "This is a description of the parameter 'eco_handle_unparallel_mib_pin' in XTop tool. It is a boolean type parameter with a default value of 'false'. When set to 'true', the tool will process unparallel MIB pins and fix their violations. However, the timing may not be accurate for this feature. An example of how to set the parameter is also provided.",
                "content": "Parameters\n\nName\neco_handle_unparallel_mib_pin --Also process unparallel MIB pins.\n\nType\ntype: bool\n\nDefault\ndefault = \"false\"\n\nDescription\nXTop will skip unparallel MIB pins by default. When this parameter is set true, the tool will also process\nthese pins, and fix their violations.\n\nSolution will be decided when first MIB pin met, if no solution, other MIB pins will not have solution; if\nsolution found, other MIB pins will honor its delay change, and update passively.\n\nTiming may not be accurate for this feature, so use it with risk.\n\nExamples\nThe following example shows how to set the parameter:\n\n% set_parameter eco_handle_unparallel_mib_pin true\n      \n\n448"
            },
            {
                "doc_id": "_xtop_handbook_0331",
                "summary": "",
                "content": "Parameters\n\nName\neco_hold_slack_margin --Hold slack margin while fixing setup violations, with unit ns.\n\nType\ntype: float\n\nDefault\ndefault = \"0\"\n\nDescription\nThis parameter defines the margin of hold slack while fixing setup violations. The unit is ns.\n\nExamples\nThe following example sets hold slack margin as 0.5ns while fixing setup violations.\n\n% set_parameter eco_hold_slack_margin 0.5\n      \n\n449"
            },
            {
                "doc_id": "_xtop_handbook_0332",
                "summary": "",
                "content": "Parameters\n\nName\neco_hold_slack_target --Hold slack target for fixing hold violations, with unit ns.\n\nType\ntype: float\n\nDefault\ndefault = \"0\"\n\nDescription\nThis parameter defines the target of hold slack while fixing hold violations. The unit is ns.\n\nExamples\nThe following example sets hold slack target as 0.05ns while fixing hold violations.\n\n% set_parameter eco_hold_slack_target 0.05\n      \n\n450"
            },
            {
                "doc_id": "_xtop_handbook_0333",
                "summary": "The document provides information about the parameter 'eco_max_buffer_chain_length' used in automatic eco flow. This integer type parameter specifies the maximum buffer chain length that can be inserted at one pin. The default value is 8. If the chain length exceeds this limit, it will be truncated. An example is provided to set the max buffer chain length to 5 for fixing hold violations.",
                "content": "Parameters\n\nName\neco_max_buffer_chain_length --The maximum buffer chain length inserted at one pin in automatic eco\nflow.\n\nType\ntype: int \"[1,inf)\"\n\nDefault\ndefault = \"8\"\n\nDescription\nThis parameter specifies the maximum buffer chain length, which means the count of buffers, that can\nbe inserted at one pin in automatic eco flow. For example in fixing hold violations, it needs to insert a\nbuffer chain that generated with a specified delay. While the chain length exceeds this limitation, it will\nbe truncated, and a corresponding will be marked for this pin.\n\nExamples\nThe following example sets the max buffer chain lengths for buffer chain insertion. Maximum 5 buffers\ncan be inserted before each pin to fix hold violations.\n\n% set_parameter eco_max_buffer_chain_length 5\n% fix_hold_path_violations -buffer_list \"DLY01X DLY02X DLY04X\"\n      \n\n451"
            },
            {
                "doc_id": "_xtop_handbook_0334",
                "summary": "This is a description of the parameter 'eco_new_object_prefix' in XTop tools. It is a string type parameter with a default value of 'xtop'. It defines the prefix for names of newly created cells or nets in eco actions, which must start with an alphabet and consist only of alphabets, numbers, and _. An example is provided to set the prefix as 'xtop'.",
                "content": "Parameters\n\nName\neco_new_object_prefix --Prefix for names of newly created cells or nets in eco actions.\n\nType\ntype: string\n\nDefault\ndefault = \"xtop\"\n\nDescription\nThis parameter defines the prefix for names of newly created cells or nets in eco actions. The newly created\ncells and nets are named as \"prefix_cell_n\" and \"prefix_net_n\" respectively.\n\nThis prefix must start with an alphabet, and consist only of alphabets, numbers, and _.\n\nExamples\nThe following example sets the prefix as 'xtop' for newly created cells or nets in eco actions.\n\n% set_parameter eco_new_object_prefix {xtop}\n      \n\n452"
            },
            {
                "doc_id": "_xtop_handbook_0335",
                "summary": "The document provides information about the parameter 'eco_post_mask_mode' in XTop tool. It is a boolean type parameter with a default value of 'false'. When set to 'true', it enables post mask mode for eco actions, which includes physical wire modification and avoids any placement adjustment. The document also provides examples of how to use this parameter with spare cells and GA cells to fix timing in post mask mode.",
                "content": "Parameters\n\nName\neco_post_mask_mode --Enable post mask mode for eco actions.\n\nType\ntype: bool\n\nDefault\ndefault = \"false\"\n\nDescription\nWhile this parameter is set to true, buffer insertion and cell sizing will be acting in post mask mode which\nonly contains physical wire modification and avoid any placement adjustment.\n\nExamples\nThe following example shows how to use spare cells to fix timing in post mask mode.\n\n% set_parameter eco_post_mask_mode true\n% set_parameter eco_buffer_list_for_hold  {AN2 OR2 BUF2}\n% set_parameter eco_buffer_list_for_setup {AN2 OR2 BUF2}\n% fix_setup/hold_gba_violations ...\n      \n\nThe following example shows how to use GA cells to fix timing in post mask mode.\n\n% set_parameter eco_post_mask_mode true\n% set_parameter eco_ga_site {GCORE}\n% set_parameter eco_ga_filler_list {GAFILLER1 GAFILLER2}\n% set_parameter eco_buffer_list_for_hold  {GBUFFD1BWP12T GBUFFD3BWP12T}\n% set_parameter eco_buffer_list_for_setup {GBUFFD1BWP12T GBUFFD3BWP12T}\n% fix_setup/hold_gba_violations ...\n      \n\nOr run as following.\n\n% set_parameter eco_post_mask_mode true\n% set_parameter eco_ga_name_patterns {GAFILL* GBUFF*}\n% set_parameter eco_ga_filler_list {GAFILLER1 GAFILLER2}\n% set_parameter eco_buffer_list_for_hold  {GBUFFD1BWP12T GBUFFD3BWP12T}\n% set_parameter eco_buffer_list_for_setup {GBUFFD1BWP12T GBUFFD3BWP12T}\n% fix_setup/hold_gba_violations ...\n      \n\nSee Also\neco_ga_site(1) eco_ga_filler_list(1)\n\n453"
            },
            {
                "doc_id": "_xtop_handbook_0336",
                "summary": "",
                "content": "Parameters\n\nName\neco_power_toggle_rate --Set default toggle rate for calculating dynamic power.\n\nType\ntype: float \"[0,1]\"\n\nDefault\ndefault = \"0.1\"\n\nDescription\nDefault cell toggle rate as an reference to calculate dynamic power. The rate represents the number of rise\nand fall transitions during a time period of 1ns.\n\nExamples\nThe following example shows how to set the parameter:\n\n% set_parameter eco_power_toggle_rate 0.15\n      \n\n454"
            },
            {
                "doc_id": "_xtop_handbook_0337",
                "summary": "This document provides information about the parameter 'eco_relative_transition_slack_margin' in XTop tool. It is a float type parameter with a default value of \"0\". It allows users to set a transition margin while fixing hold, setup, transition, and capacitance violations during auto eco. The value is determined by the percentage of the current pin's max transition. If 'eco_transition_slack_margin(1)' is also set, the actual transition margin will be the sum of both.",
                "content": "Parameters\n\nName\neco_relative_transition_slack_margin --Set a percentage value to max transition as transition margin,\nwhile fixing hold, setup, transition and capacitance violations.\n\nType\ntype: float \"[0,0.5]\"\n\nDefault\ndefault = \"0\"\n\nDescription\nThis parameter will allow user to set transition margin when doing auto eco. The value is determined by\nthe percentage of current pin's max transition.\n\nIf parameter eco_transition_slack_margin(1) is also set, actual transition margin will be the sum of both.\n\nExamples\nThe following example shows how to set the parameter, the actual transition margin will be 0.01ns, plus\na 10% max transition of each pin:\n\n% set_parameter eco_transition_slack_margin 0.01\n% set_parameter eco_relative_transition_slack_margin 0.1\n      \n\nSee Also\neco_transition_slack_margin(1)\n\n455"
            },
            {
                "doc_id": "_xtop_handbook_0338",
                "summary": "This is a description of the parameter 'eco_remove_inverter_pair' in XTop tools. It is a boolean type parameter with a default value of \"false\". When set to true, the inverter pair will be treated as a buffer and considered in the optimization process with the remove buffer method.",
                "content": "Parameters\n\nName\neco_remove_inverter_pair --Enable remove inverter pair in remove buffer method.\n\nType\ntype: bool\n\nDefault\ndefault = \"false\"\n\nDescription\nWhile this parameter is set to true, inverter pair will be treated as a buffer and will be considered as\na candidate in the optimization process with remove buffer method. Otherwise, only buffers will be\nconsidered.\n\nExamples\nThe following example shows how to enable inv-pair removal when removing buffers.\n\n% set_parameter eco_remove_inverter_pair true\n      \n\n456"
            },
            {
                "doc_id": "_xtop_handbook_0339",
                "summary": "This is a description of the parameter 'eco_setup_margin_source' in XTop tool. It specifies the setup margin source when fixing hold/power/area. It has two types: 'setup_global_slack' and 'setup_path_slack'. The default value is 'setup_global_slack'. The document also provides an example of setting the parameter value to 'setup_path_slack'.",
                "content": "Parameters\n\nName\neco_setup_margin_source --The setup margin source when fix hold/power/area.\n\nType\ntype: enum \"setup_global_slack setup_path_slack\"\n\nDefault\ndefault = \"setup_global_slack\"\n\nDescription\nThis parameter specifies setup margin source when fix hold/power/area. For setup_global_slack, the tool\nalways uses global setup slack as margin. For setup_path_slack, the tool try use worst setup path slack as\nmargin, if no setup path, then use global setup slack as margin.\n\nFor setup_path_slack, it is recommended to just fix pins on setup paths. You can use get_pins -of_objects\n[get_paths xxx] to get data pins, then fix hold timing using only_pins.\n\nExamples\nThis example sets the parameter value to setup_path_slack.\n\n% set_parameter eco_setup_margin_source setup_path_slack\n      \n\n457"
            },
            {
                "doc_id": "_xtop_handbook_0340",
                "summary": "",
                "content": "Parameters\n\nName\neco_setup_slack_margin --Setup slack margin while fixing hold violations, with unit ns.\n\nType\ntype: float\n\nDefault\ndefault = \"0\"\n\nDescription\nThis parameter defines the margin of setup slack while fixing hold violations. The unit is ns.\n\nExamples\nThis example sets the eco_setup_slack_margin parameter is 0.001ns.\n\n% set_parameter eco_setup_slack_margin 0.001\n% fix_hold_path_violations\n      \n\n458"
            },
            {
                "doc_id": "_xtop_handbook_0341",
                "summary": "",
                "content": "Parameters\n\nName\neco_setup_slack_target --Setup slack target for fixing setup violations, with unit ns.\n\nType\ntype: float\n\nDefault\ndefault = \"0\"\n\nDescription\nThis parameter defines the target of setup slack while fixing setup violations. The unit is ns.\n\nExamples\nThis example sets the eco_setup_slack_target parameter is 0.001ns.\n\n% set_parameter eco_setup_slack_target 0.001\n% fix_setup_path_violations\n      \n\n459"
            },
            {
                "doc_id": "_xtop_handbook_0342",
                "summary": "This is a description of the parameter 'eco_si_critical_net_rank_ratio' in XTop tool. It is a float type parameter with a default value of 0.05. It defines the proportion of si_critical nets, which are sorted by worst max_delta_delay. This parameter only works when fixing hold or optimizing power using the size_cell method. It only sorts the net with valid max_delta_delay and does not mark net without valid max_delay_data. The ratio can be adjusted based on the design.",
                "content": "Parameters\n\nName\neco_si_critical_net_rank_ratio --What proportion of nets to be marked as si_critical net when fix hold\nor power.\n\nType\ntype: float \"[0,1]\"\n\nDefault\ndefault = \"0.05\"\n\nDescription\nThis parameter defines the proportion of si_critical nets. XTop will sort nets by worst max_delta_delay,\nselect top worst nets and mark si_critical flag. When fix hold or optimize power, XTop will not size the\ndriver of net.\n\nOnly works when fix hold or optimize power using size_cell method.\n\nOnly sort the net which has valid max_delta_delay.\n\nDo not mark net without valid max_delay_data, even the ratio is 1.\n\nUse the worst max_delta_delay from all valid setup scenarios.\n\nSort all nets of the design.\n\nWhen ratio is 0, no nets will be marked.\n\nWhen ratio is 1, all nets with valid max_delta_delay will be marked.\n\nDefault ratio is 0.05, please change it based on your design.\n\nExamples\nThe following example shows how to change the ratio.\n\n% set_parameter eco_si_critical_net_rank_ratio 0.1\n      \n\n460"
            },
            {
                "doc_id": "_xtop_handbook_0343",
                "summary": "This is a description of the parameter 'eco_size_between_variant_cells' in XTop tool. It is a boolean type parameter with a default value of 'false'. When set to 'true', it allows different types of physical variant cells to be sized with each other during auto optimization. An example of how to set this parameter is also provided.",
                "content": "Parameters\n\nName\neco_size_between_variant_cells --Allow different types of physical variant cells to be sized with each\nother.\n\nType\ntype: bool\n\nDefault\ndefault = \"false\"\n\nDescription\nBy default, cells of different physical variant types are not allowed to be sized with each other (e.g. from\nBUF_m1shiftl to BUF_m1shiftr), in auto optimization.\n\nSet this parameter to true, to allow sizing among cells of different physical variant types.\n\nExamples\nThe following example shows how to set the parameter:\n\n% set_parameter eco_size_between_variant_cells true\n      \n\n461"
            },
            {
                "doc_id": "_xtop_handbook_0344",
                "summary": "The document provides information about the parameter 'eco_size_cell_area_change_ratio' in XTop tool. This float type parameter, with a default value of 6.0, limits the area change in one optimization process when sizing cell to fix setup. It is only effective for fix setup, or fix timing window for hold, in one iteration run. An example is also provided on how to change the ratio.",
                "content": "Parameters\n\nName\neco_size_cell_area_change_ratio --When size cell to fix setup, XTop offers this parameter to limit the\narea change in one optimization process.\n\nType\ntype: float \"[1,inf)\"\n\nDefault\ndefault = \"6.0\"\n\nDescription\nWhen size cell to fix setup, sometimes original cell will be sized too large. This parameter can limit the\narea change. If a smaller ratio is set, more area will be saved, but fix result will also be different.\n\nOnly effective for fix setup, or fix timing window for hold, in one iteration run.\n\nExamples\nThe following example shows how to change the ratio.\n\n% set_parameter eco_size_cell_area_change_ratio 3.0\n      \n\n462"
            },
            {
                "doc_id": "_xtop_handbook_0345",
                "summary": "The document provides information about the parameter 'eco_size_cell_drive_strength_weaken_ratio' in XTop tool. This float type parameter, with a default value of 0.4, sets a threshold for selecting candidate cells based on their drive strength when sizing down. It is only effective for sizing down, in fix hold, setup, optimize power, and optimize design area. The document also includes an example of how to change the ratio.",
                "content": "Parameters\n\nName\neco_size_cell_drive_strength_weaken_ratio --When size down, cell drive strength get worse, the value\nis the threshold for selecting candidate cells.\n\nType\ntype: float \"[0.1,1)\"\n\nDefault\ndefault = \"0.4\"\n\nDescription\nWhen size down cell, cell's drive strength decreases, SI or transition evaluation may be inaccurate in some\ncases. This parameter defines a ratio to original cell's drive strength as threshold, to adjust the selection of\ncandidate cells. Cells whose drive strength is weaker than the threshold will be abandoned, while tool will\ncontinue to try other stronger ones as usual. If the ratio is set smaller, more sizing down will be allowed\nin result.\n\nOnly effective for sizing down, in fix hold, or setup, optimize power and optimize design area.\n\nExamples\nThe following example shows how to change the ratio.\n\n% set_parameter eco_size_cell_drive_strength_weaken_ratio 0.3\n      \n\n463"
            },
            {
                "doc_id": "_xtop_handbook_0346",
                "summary": "This is a description of the parameter 'eco_skip_unconstrained_cell_rule' in XTop tool. It is an enum type with options \"any\", \"all\", \"none\", and the default is \"none\". This parameter determines whether to skip optimization for unconstrained cells during leakage or area optimization.",
                "content": "Parameters\n\nName\neco_skip_unconstrained_cell_rule --Specify the rule to skip optimization for unconstrained cells.\n\nType\ntype: enum \"any all none\"\n\nDefault\ndefault = \"none\"\n\nDescription\nWhen optimize leakage or area, XTop will try to swap cell even it is unconstrained by default. If this\nparameter is set to any, then when any scenario of the cell is unconstrained, it will be skipped. If this\nparameter is set to all, then when all scenarios of the cell are unconstrained, it will be skipped.\n\nSetup slack is checked as constraint.\n\nExamples\nThis example sets the parameter value to all, means if slack for all scenarios are unconstrained, skip\noptimization.\n\n% set_parameter eco_skip_unconstrained_cell_rule all\n      \n\n464"
            },
            {
                "doc_id": "_xtop_handbook_0347",
                "summary": "This is a description of the parameter 'eco_timing_window_hold_slack_deterioration' in XTop tool. It is a float type parameter with a default value of \"0\". It allows hold violation if the cell's drive strength is increased, providing more setup margin for downstream. A larger value may result in more hold violation and it may not always be possible to fix all of them. An example of how to set this parameter is also provided.",
                "content": "Parameters\n\nName\neco_timing_window_hold_slack_deterioration --The hold slack threshold that allowed to break in fix\ntiming window, with unit ns.\n\nType\ntype: float \"[0,inf)\"\n\nDefault\ndefault = \"0\"\n\nDescription\nWhen fix timing window use size cell, there will be less solution if no hold timing break is allowed. By\nsetting this parameter, it will allow hold violation if the cell's drive strength is increased, so that there will\nbe more setup margin for downstream.\n\nIf the parameter is set a larger value, more hold violation may be found, and it is not always possible to\nfix all of them.\n\nExamples\nThe following example shows how to set this parameter:\n\n% set_parameter eco_timing_window_hold_slack_deterioration 0.005\n      \n\n465"
            },
            {
                "doc_id": "_xtop_handbook_0348",
                "summary": "",
                "content": "Parameters\n\nName\neco_transition_slack_margin --Transition slack margin while fixing hold, setup, transition, capacitance\nviolations, with unit ns.\n\nType\ntype: float\n\nDefault\ndefault = \"0\"\n\nDescription\nThis parameter defines the margin of transition while fixing hold, setup, transition and capacitance\nviolations. The unit is ns.\n\nExamples\nThe following example over-constraints the transition by 0.01ns:\n\n% set_parameter eco_transition_slack_margin 0.01\n% optimize_leakage_power\n      \n\n466"
            },
            {
                "doc_id": "_xtop_handbook_0349",
                "summary": "",
                "content": "Parameters\n\nName\neco_transition_slack_target --Transition slack target while fixing transition violations, with unit ns.\n\nType\ntype: float\n\nDefault\ndefault = \"0\"\n\nDescription\nThis parameter defines the target of transition while fixing transition violations. The unit is ns.\n\nExamples\nThe following example over-fixes the transition violations to 0.01ns:\n\n% set_parameter eco_transition_slack_target 0.01\n% fix_transition_violations\n      \n\n467"
            },
            {
                "doc_id": "_xtop_handbook_0350",
                "summary": "The document provides information about the parameter 'eco_voltage_setup_extra_derate'. This parameter allows users to set voltage and derate value pairs, which are used to calculate an extra setup derate by linear interpolation. It has a higher priority if the voltage is valid and in bound when used with the command 'set_setup_extra_derate(1)'. The 'report_setup_extra_derate(1)' command is used to validate. At least two pairs of values should be specified.",
                "content": "Parameters\n\nName\neco_voltage_setup_extra_derate --Set a few voltage and derate value pairs, which are used to calculate\nan extra setup derate by linear interpolation.\n\nType\ntype: pointf_list\n\nDefault\ndefault = \"\"\n\nDescription\nThis parameter will allow user to add a few voltage and derate pairs, a derate value will be calculated by\nthese pairs using linear interpolation, according to actual voltage value.\n\nWhen command set_setup_extra_derate(1) is also used, extra derate calculated from this parameter will\nhave higher priority if voltage is valid and in bound. Use report_setup_extra_derate(1) to validate.\n\nAt least two pairs of value should be specified.\n\nExamples\nThe following example shows how to set the parameter:\n\n% set_parameter eco_voltage_setup_extra_derate {(0.55, 1.20) (0.65, 1.15) (0.75, 1.05)}\n      \n\n468"
            },
            {
                "doc_id": "_xtop_handbook_0351",
                "summary": "",
                "content": "Fail Reasons\n\nName\nassigned_net --Current net has assigned nets.\n\nDescription\nCurrent net has assigned nets. For such nets, any ECO action that needs to change the assign relationships\nwill be skipped since there is no way to export such changes with scripts. For splitting net or load, it will\nbe skipped directly. For insert buffer to buffer only one sink or the source, it is also skipped while the\npin to buffer is a port.\n\n470"
            },
            {
                "doc_id": "_xtop_handbook_0352",
                "summary": "",
                "content": "Fail Reasons\n\nName\nbreak_hold --Break hold while apply current solution.\n\nDescription\nThe hold constraint is broken while fixing setup, optimize leakage or area. Only when the hold slack gets\nworse and becomes negative, the solution will be abandoned and this reason is marked. It can be relaxed\nby specifying a negative hold margin.\n\nSee Also\neco_hold_slack_margin(1)\n\n471"
            },
            {
                "doc_id": "_xtop_handbook_0353",
                "summary": "",
                "content": "Fail Reasons\n\nName\nbreak_hold_of_driver --Current solution breaks the hold of the driver cell.\n\nDescription\nCurrent solution breaks the hold of the driver cell. While fixing setup, the load of the driver cell perhaps\ngets smaller and hold timing may be broken. It allows to break a slight margin. But if it breaks too much,\nthe solution will be abandoned and this reason is marked.\n\n472"
            },
            {
                "doc_id": "_xtop_handbook_0354",
                "summary": "",
                "content": "Fail Reasons\n\nName\nbreak_max_capacitance --Current solution breaks the max capacitance constraint.\n\nDescription\nCurrent solution breaks the max capacitance constraint. While fixing timing violations, the capacitance of\ncurrent stage may get bigger due to the change of pin or wire capacitance. If it breaks the max capacitance\nconstraint or the capacitance violation gets worse, current solution will be abandoned and this reason is\nmarked.\n\nSee Also\neco_capacitance_slack_margin(1)\n\n473"
            },
            {
                "doc_id": "_xtop_handbook_0355",
                "summary": "",
                "content": "Fail Reasons\n\nName\nbreak_max_capacitance_of_driver --It breaks the max capacitance of the driver cell.\n\nDescription\nIt break the max capacitance. While fixing timing violations, the load of the driver cell perhaps gets bigger\nand capacitance constraint may be broken. It allows to break a slight margin. But if it breaks too much,\nthe solution will be abandoned and this reason is marked.\n\n474"
            },
            {
                "doc_id": "_xtop_handbook_0356",
                "summary": "",
                "content": "Fail Reasons\n\nName\nbreak_max_transition --Current solution breaks the max transition constraint.\n\nDescription\nCurrent solution breaks the max transition constraint. While fixing timing violations, the capacitance of\ncurrent stage may get bigger due to the change of pin or wire capacitance. If it breaks the max transition\nconstraint or the transition violation gets worse, current solution will be abandoned and this reason is\nmarked.\n\nSee Also\neco_transition_slack_margin(1)\n\n475"
            },
            {
                "doc_id": "_xtop_handbook_0357",
                "summary": "",
                "content": "Fail Reasons\n\nName\nbreak_max_transition_of_driver --It breaks the max transition of the driver cell.\n\nDescription\nIt breaks the max transition. While fixing timing violations, the load of the driver cell perhaps gets bigger\nand transition constraint may be broken. It allows to break a slight margin. But if it breaks too much, the\nsolution will be abandoned and this reason is marked.\n\n476"
            },
            {
                "doc_id": "_xtop_handbook_0358",
                "summary": "",
                "content": "Fail Reasons\n\nName\nbreak_setup --Break setup while apply current solution.\n\nDescription\nThe setup constraint is broken while fixing hold, optimize leakage or area. Only when the setup slack gets\nworse and becomes negative, the solution will be abandoned and this reason is marked. It can be relaxed\nby specifying a negative setup margin.\n\nSee Also\neco_setup_slack_margin(1)\n\n477"
            },
            {
                "doc_id": "_xtop_handbook_0359",
                "summary": "",
                "content": "Fail Reasons\n\nName\nbreak_setup_of_driver --Current solution breaks the setup of the driver cell.\n\nDescription\nCurrent solution breaks the setup of the driver cell. While fixing hold, the load of the driver cell perhaps\ngets bigger and setup timing may be broken. It allows to break a slight margin. But if it breaks too much,\nthe solution will be abandoned and this reason is marked.\n\nSee Also\neco_driver_setup_slack_deterioration(1)\n\n478"
            },
            {
                "doc_id": "_xtop_handbook_0360",
                "summary": "",
                "content": "Fail Reasons\n\nName\nconnected_mib_net --The instances of same net in MIBs are connected together.\n\nDescription\nThe instances of same net in MIBs are connected together. The top net consists of more than one instances\nof the same net. The slack change cannot be evaluated correctly once a change is applied to the net, and\nis skipped.\n\n479"
            },
            {
                "doc_id": "_xtop_handbook_0361",
                "summary": "",
                "content": "Fail Reasons\n\nName\ncross_hierarchy_net --Current net cross physical hierarchies.\n\nDescription\nCurrent net cross physical hierarchies. It is not able to split such nets in optimization process.\n\n480"
            },
            {
                "doc_id": "_xtop_handbook_0362",
                "summary": "",
                "content": "Fail Reasons\n\nName\ncross_hierarchy_mib_net --Current net cross physical hierarchies, and connected to MIB pins.\n\nDescription\nCurrent net cross physical hierarchies, and connected to MIB pins. It is not able to split such nets in\noptimization process.\n\n481"
            },
            {
                "doc_id": "_xtop_handbook_0363",
                "summary": "",
                "content": "Fail Reasons\n\nName\ncross_multi_tech_design_net --Current net cross multiple tech designs.\n\nDescription\nCurrent net cross multiple tech designs. It is not able to split such nets in optimization process.\n\n482"
            },
            {
                "doc_id": "_xtop_handbook_0364",
                "summary": "",
                "content": "Fail Reasons\n\nName\nuser_dont_touch_cell --Current cell is marked as dont touch by user.\n\nDescription\nCurrent cell is marked as dont touch. It is not allowed to size this cell. The dont touch status is marked by\nthe command set_dont_touch(1), set_hier_path_dont_touch(1).\n\nThe user_dont_touch_cell has higher precedence than data_dont_touch_cell.\n\nSee Also\nset_dont_touch(1) is_dont_touch(1) get_dont_touch_cells(1)\n\n483"
            },
            {
                "doc_id": "_xtop_handbook_0365",
                "summary": "",
                "content": "Fail Reasons\n\nName\ndata_dont_touch_cell --Current cell is marked as dont touch by timing data.\n\nDescription\nCurrent cell is marked as dont touch. It is not allowed to size this cell. The dont touch status is marked\nwith the annotated timing data or liberty_cell.\n\nThe user_dont_touch_cell has higher precedence than data_dont_touch_cell.\n\nSee Also\nhonor_annotated_dont_touch(1)\n\n484"
            },
            {
                "doc_id": "_xtop_handbook_0366",
                "summary": "",
                "content": "Fail Reasons\n\nName\nuser_dont_touch_net --Current net is marked as dont touch by user.\n\nDescription\nThe net is marked as dont touch. And it is not allowed to insert or remove buffers from this net. The dont\ntouch status is marked by the command set_dont_touch(1), set_hier_path_dont_touch(1).\n\nThe user_dont_touch_net has higher precedence than data_dont_touch_net.\n\nSee Also\nset_dont_touch(1) is_dont_touch(1) get_dont_touch_nets(1)\n\n485"
            },
            {
                "doc_id": "_xtop_handbook_0367",
                "summary": "",
                "content": "Fail Reasons\n\nName\ndata_dont_touch_net --Current net is marked as dont touch by timing data.\n\nDescription\nThe net is marked as dont touch. And it is not allowed to insert or remove buffers from this net. The dont\ntouch status is marked by the annotated timing data.\n\nThe user_dont_touch_net has higher precedence than data_dont_touch_net.\n\nSee Also\nhonor_annotated_dont_touch(1)\n\n486"
            },
            {
                "doc_id": "_xtop_handbook_0368",
                "summary": "",
                "content": "Fail Reasons\n\nName\ndont_touch_pin --Current pin is marked as dont touch.\n\nDescription\nThe pin is marked as dont touch, and is skipped in scanning process. The dont touch status is marked with\nthe annotated timing data or the command set_dont_touch(1).\n\nThe dont_touch_pin has higher precedence than not_only_pin.\n\nSee Also\nset_dont_touch(1) is_dont_touch(1) get_dont_touch_pins(1)\n\n487"
            },
            {
                "doc_id": "_xtop_handbook_0369",
                "summary": "",
                "content": "Fail Reasons\n\nName\nbreak_minimum_cell_delay --Can not decrease cell delay which will break minimum cell delay.\n\nDescription\nWhen write sdf file for setup, XTop decreases cell delay, but can not break the minimum delay defined\nby reserved_cell_delay_percentage.\n\nSee Also\nbreak_hold(1)\n\n488"
            },
            {
                "doc_id": "_xtop_handbook_0370",
                "summary": "",
                "content": "Fail Reasons\n\nName\nnot_only_pin --Current pin does not belong to the target when use -only_pins or specify pin list to\noptimize.\n\nDescription\nThe pin does not belong to the target when use -only_pins or specify pin list in fix command.\n\nThe dont_touch_pin has higher precedence than not_only_pin.\n\nSee Also\nset_dont_touch(1) is_dont_touch(1) get_dont_touch_pins(1)\n\n489"
            },
            {
                "doc_id": "_xtop_handbook_0371",
                "summary": "This document provides information about the \"fail_to_legalize\" error in XTop tool, which occurs when the tool fails to find a legal place for the inserted or sized cell. The error can be due to several reasons such as no place in the legalization range, no matched row for the cell, congested route, or special placement rules for advanced process. The document also suggests some commands to troubleshoot the issue.",
                "content": "Fail Reasons\n\nName\nfail_to_legalize --Failed to place the inserted or sized cell legally.\n\nDescription\nFailed to find a legal place for the inserted or sized cell. It is reported for the following situations.\n\n--There is no place in the legalization range.\n\n--There is no matched row for the cell.\n\n--The route is congest.\n\n--There exists special placement rules for advanced process.\n\nIt cannot tell the exact reason of every point in the legalization range during the optimization process.\nHowever you can figure out it with command report_placement_context(1) after optimization. If there is\nno place in the legalization range, you can enlarge the range or enable to squeeze the cells by command\nset_placement_constraint(1). And as a cost, the consistency will get worse. If there is no proper row,\nperhaps you need to check if there is something wrong with the LEF or DEF files.\n\nThis is a general reason, in most cases, a more detail reason will be reported in new XTop version.\n\nSee Also\nset_placement_constraint(1) report_placement_constraint(1) report_placement_context(1)\nlegal_fail_drc(1) legal_fail_density(1) legal_fail_congestion(1) legal_fail_no_space_on_row(1)\nlegal_fail_no_available_row(1)\n\n490"
            },
            {
                "doc_id": "_xtop_handbook_0372",
                "summary": "",
                "content": "Fail Reasons\n\nName\nfeed_through_module --It caused a feed through in module while current buffer or inverter pair is\nremoved.\n\nDescription\nIt caused a feed through in module while current buffer or inverter pair is removed. Such action is skipped\nsince it cannot export such a change with scripts.\n\n491"
            },
            {
                "doc_id": "_xtop_handbook_0373",
                "summary": "",
                "content": "Fail Reasons\n\nName\nfloating_pin --The pin is floating.\n\nDescription\nThe pin is floating. Commonly, it should be an exception that violation is found on a floating pin. So, it\nis skipped.\n\n492"
            },
            {
                "doc_id": "_xtop_handbook_0374",
                "summary": "",
                "content": "Fail Reasons\n\nName\nheavy_fanout_net --Current net has a heavy fanout.\n\nDescription\nCurrent net has a heavy fanout. It should be an exception and will be skipped. The fanout upper bound\nis set to 128 in this tool.\n\nCheck parameter eco_allow_optimize_heavy_fanout_net(1) for more information.\n\n493"
            },
            {
                "doc_id": "_xtop_handbook_0375",
                "summary": "",
                "content": "Fail Reasons\n\nName\nincomplete_net --Current net has only source or sinks, or missing segments between source and sinks.\n\nDescription\nCurrent net has only source or sink pins, or net segments are missing between source and sinks. This is\nan exception and will be skipped.\n\n494"
            },
            {
                "doc_id": "_xtop_handbook_0376",
                "summary": "",
                "content": "Fail Reasons\n\nName\nincomplete_timing_cell --The timing lib cells are missing in some corners of current cell.\n\nDescription\nThe timing lib cells are missing in some corners of current cell. Such cells will be skipped while sizing\ncells, or being inserted buffer since it is not able to evaluate the delay.\n\n495"
            },
            {
                "doc_id": "_xtop_handbook_0377",
                "summary": "",
                "content": "Fail Reasons\n\nName\ninput_port --Current pin is an input port.\n\nDescription\nThe pin is an input port of design. While splitting net, a net driven by a port is skipped.\n\n496"
            },
            {
                "doc_id": "_xtop_handbook_0378",
                "summary": "",
                "content": "Fail Reasons\n\nName\ninvalid_power_frequency --The frequency of current pin is not invalid.\n\nDescription\nWhen optimize dynamic power, the frequency is invalid for current pin, so dynamic power can not be\ncalculated correctly.\n\nSee Also\ninvalid_power_voltage(1)\n\n497"
            },
            {
                "doc_id": "_xtop_handbook_0379",
                "summary": "",
                "content": "Fail Reasons\n\nName\ninvalid_power_voltage --The voltage of current pin is not invalid.\n\nDescription\nWhen optimize dynamic power, the voltage is invalid for current pin, so dynamic power can not be\ncalculated correctly.\n\nSee Also\ninvalid_power_frequency(1)\n\n498"
            },
            {
                "doc_id": "_xtop_handbook_0380",
                "summary": "",
                "content": "Fail Reasons\n\nName\ninvalid_reference_cell --The reference of current cell is not valid.\n\nDescription\nThe reference of current cell is not valid. It needs to check if something is wrong while importing LEF files.\n\n499"
            },
            {
                "doc_id": "_xtop_handbook_0381",
                "summary": "",
                "content": "Fail Reasons\n\nName\nlarge_area_to_size_up --The candidate cell is too large to size.\n\nDescription\nOriginal cell is not allowed to be sized up to a very large cell, the ratio is controlled by parameter\neco_size_cell_area_change_ratio(1).\n\n500"
            },
            {
                "doc_id": "_xtop_handbook_0382",
                "summary": "This document provides information about the \"large_input_transition\" fail reason in XTop tools. It explains that this failure occurs when the input transition is too large, not caused by the driver cell or the driven net, but due to a large user-specified transition or a transition violation in the previous stage. It also notes that such pins are skipped as the violations cannot be fixed by merely applying ECO on the connected nets or cells.",
                "content": "Fail Reasons\n\nName\nlarge_input_transition --The input transition is too large.\n\nDescription\nThe input transition is too large. This happens while fix transition violations. The violation is not caused\nby the driver cell or the driven net. It is because of the input transition is too large. For example, it is a\nport and the user specified a large transition on it. Or there exists transition violation on the previous stage\nand it failed to fix it. Such pins are skipped since there is no way to fix the violations by just apply ECO\non the connected nets or cells.\n\n501"
            },
            {
                "doc_id": "_xtop_handbook_0383",
                "summary": "",
                "content": "Fail Reasons\n\nName\nlegal_fail_drc --Can not legalize new instance because of drc constraint.\n\nDescription\nCan not legalize new instance because of drc constraint.\n\nSee Also\nfail_to_legalize(1)\n\n502"
            },
            {
                "doc_id": "_xtop_handbook_0384",
                "summary": "",
                "content": "Fail Reasons\n\nName\nlegal_fail_density --Can not legalize new instance because of density.\n\nDescription\nCan not legalize new instance because of density.\n\nSee Also\nfail_to_legalize(1)\n\n503"
            },
            {
                "doc_id": "_xtop_handbook_0385",
                "summary": "",
                "content": "Fail Reasons\n\nName\nlegal_fail_congestion --Can not legalize new instance because of congestion.\n\nDescription\nCan not legalize new instance because of congestion.\n\nSee Also\nfail_to_legalize(1)\n\n504"
            },
            {
                "doc_id": "_xtop_handbook_0386",
                "summary": "",
                "content": "Fail Reasons\n\nName\nlegal_fail_no_space_on_row --Can not legalize new instance because no space on row.\n\nDescription\nCan not legalize new instance because no space on row.\n\nSee Also\nfail_to_legalize(1)\n\n505"
            },
            {
                "doc_id": "_xtop_handbook_0387",
                "summary": "",
                "content": "Fail Reasons\n\nName\nlegal_fail_no_available_row --Can not legalize new instance because no available row.\n\nDescription\nCan not legalize new instance because no available row.\n\nSee Also\nfail_to_legalize(1)\n\n506"
            },
            {
                "doc_id": "_xtop_handbook_0388",
                "summary": "",
                "content": "Fail Reasons\n\nName\nlegal_fail_unplaced_cell --Can not legalize because unplaced cell for soft legal mode.\n\nDescription\nCan not legalize because unplaced cell for soft legal mode.\n\nSee Also\nfail_to_legalize(1)\n\n507"
            },
            {
                "doc_id": "_xtop_handbook_0389",
                "summary": "",
                "content": "Fail Reasons\n\nName\nlegal_fail_fixed_cell --Can not create try legal instance for fixed cell.\n\nDescription\nCan not create try legal instance for fixed cell.\n\nSee Also\nfail_to_legalize(1)\n\n508"
            },
            {
                "doc_id": "_xtop_handbook_0390",
                "summary": "",
                "content": "Fail Reasons\n\nName\nlegal_fail_locked_cell --Can not create try legal instance for locked cell.\n\nDescription\nCan not create try legal instance for locked cell.\n\nSee Also\nfail_to_legalize(1)\n\n509"
            },
            {
                "doc_id": "_xtop_handbook_0391",
                "summary": "This document provides information about the \"module_not_unique\" fail reason in XTop tools. It explains that this error occurs when an ancestor module has been instantiated more than once in the design, making it impossible to make changes to the current object without affecting all instantiations. It suggests checking for incorrect Verilog files if this error is reported.",
                "content": "Fail Reasons\n\nName\nmodule_not_unique --Current object is not unique in module domain.\n\nDescription\nCurrent object is not unique in module domain. It means that one of the ancestor module has been\ninstantiated more than one times in the design. Thus, there is no way to make a change just to current\nobject since any change on current object will be reflected in all instantiations.\n\nCommonly, the netlist will be uniquified before delivering to back-end. Once this reason is reported, please\ncheck if wrong Verilog files are imported.\n\n510"
            },
            {
                "doc_id": "_xtop_handbook_0392",
                "summary": "",
                "content": "Fail Reasons\n\nName\nmodule_power_domain_conflict --There's conflict of power domain between reference cell and its parent\nmodule.\n\nDescription\nDuring eco process, the power domain of reference cell and its parent module not match, need to verify\npower domain setting.\n\nSee Also\nreport_power_domain(1)\n\n511"
            },
            {
                "doc_id": "_xtop_handbook_0393",
                "summary": "",
                "content": "Fail Reasons\n\nName\nmulti_driven_net --Current net has multiple drivers.\n\nDescription\nCurrent net has multiple drivers. This is a special structure and is skipped.\n\n512"
            },
            {
                "doc_id": "_xtop_handbook_0394",
                "summary": "",
                "content": "Fail Reasons\n\nName\ninout_pin_on_net --Current net has inout pin.\n\nDescription\nCurrent net has inout pin. This is a special structure and is skipped.\n\n513"
            },
            {
                "doc_id": "_xtop_handbook_0395",
                "summary": "",
                "content": "Fail Reasons\n\nName\nnewly_created_object --Current object is newly created in optimization process.\n\nDescription\nThe object is newly created in the optimization process. It avoids mixed optimization actions applied to\nthe same pin before the whole iteration to keep the consistency of result.\n\n514"
            },
            {
                "doc_id": "_xtop_handbook_0396",
                "summary": "This document provides a detailed explanation of the \"no_alternative_cell\" fail reason in XTop tool. It occurs when no alternative cell is found while sizing the current cell. The document further explains various situations when this error is reported, such as incorrect cell attributes or settings, issues with the reference or timing library, and specific configurations on cells.",
                "content": "Fail Reasons\n\nName\nno_alternative_cell --No alternative cell found while sizing current cell.\n\nDescription\nNo alternative cell found while sizing current cell. It is reported in following situations.\n\n--The cell does not have alternative cell actually, can be verified by report_matched_cells(1).\n\n--The attributes of cells or settings are not correct to match cells, can be verified by reporting cell\nclassification.\n\n--Alternative cells are already marked as dont use by user or in liberty file, please refer to\nhonor_timing_library_dont_use(1).\n\n--Something is wrong with the reference or timing library of all the alternative cells.\n\n--Current cell is the best while optimizing leakage or area, which means alternative cells have worse\nleakage or area defined in liberty file.\n\n--For hold fix, all alternative cells have larger area, while we only accept sizing down here.\n\n--For capacitance fix, all alternative cells have smaller area, while we only accept sizing up here.\n\n--There exists special configuration on cells by command set_specific_lib_cells(1) or\nset_lib_per_instance(1).\n\n--All alternative cells are not core cell type defined in reference library.\n\n--All alternative cells are not belong to the tech group same as target pin.\n\n515"
            },
            {
                "doc_id": "_xtop_handbook_0397",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_alternative_cell_by_multi_tech --No alternative cell found while sizing current cell, caused by multi\ntech design filter.\n\nDescription\nNo alternative cell found while sizing current cell, XTop will filter out candidate cells that not belong to\nsame design tech as reference cell. Another possible reason is that candidate cells have no lef data.\n\nSee Also\nno_alternative_cell(1)\n\n516"
            },
            {
                "doc_id": "_xtop_handbook_0398",
                "summary": "This document provides information about the \"no_available_buffer\" error in XTop tool. It explains that this error often occurs due to special library settings set by commands \"set_specific_lib_cells(1)\" or \"set_lib_per_instance(1)\", or when the current buffer is not a core cell type in the reference library. Another possible cause is when \"max_delay_buffer_length\" is set and a normal buffer is not available.",
                "content": "Fail Reasons\n\nName\nno_available_buffer --No available buffer can be used to insert or split net.\n\nDescription\nNo available buffer can be used to insert or split net. It is often caused by special library settings set by\ncommand set_specific_lib_cells(1) or set_lib_per_instance(1), or current buffer is not core cell type in\nreference library.\n\nAnother possible reason is max_delay_buffer_length is set, and normal buffer is not available at that time.\n\nSee Also\nset_specific_lib_cells(1) set_lib_per_instance(1)\n\n517"
            },
            {
                "doc_id": "_xtop_handbook_0399",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_available_buffer_by_multi_tech --No available buffer can be used to insert or split net, caused by\nmulti tech design filter.\n\nDescription\nNo available buffer can be used to insert or split net, XTop will filter out buffers that not belong to same\ndesign tech as reference pin.\n\nSee Also\nno_available_buffer(1)\n\n518"
            },
            {
                "doc_id": "_xtop_handbook_0400",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_available_dummy_cell --No available dummy cell can be used to insert.\n\nDescription\nNo available dummy cell can be used to insert.\n\nSee Also\nno_available_buffer(1)\n\n519"
            },
            {
                "doc_id": "_xtop_handbook_0401",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_valid_eco_cell --No valid eco cell can be found due to site def check.\n\nDescription\nCandidate buffer or cell can not pass the site def check to reference cell.\n\nSee Also\nno_available_buffer(1) no_alternative_cell(1)\n\n520"
            },
            {
                "doc_id": "_xtop_handbook_0402",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_glitch_gain --There is no glitch gain for current solution.\n\nDescription\nThere is no glitch gain for current solution.\n\nSee Also\nno_si_gain(1)\n\n521"
            },
            {
                "doc_id": "_xtop_handbook_0403",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_si_gain --There is no SI gain for current solution.\n\nDescription\nThere is no SI gain for current solution, or SI will be worse for some scenarios.\n\n522"
            },
            {
                "doc_id": "_xtop_handbook_0404",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_capacitance_gain --There is no capacitance gain for current solution.\n\nDescription\nThere is no capacitance gain for current solution. The change of wire, SI are also taken into account. And\nfor some special cases, it will be different with intuition.\n\n523"
            },
            {
                "doc_id": "_xtop_handbook_0405",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_capacitance_total_gain --There is no capacitance gain in total for current solution.\n\nDescription\nThere is no capacitance gain in total for current solution. There exists gain for current net or pin, but the\ntransition of the driver perhaps gets worst. A total gain will be calculated to judge if the design can benefit\nfrom current solution as a total.\n\n524"
            },
            {
                "doc_id": "_xtop_handbook_0406",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_hold_gain --There is no hold gain for current solution.\n\nDescription\nThere is no hold gain for current solution. Several stages will be evaluated, the change of wire, SI are also\ntaken into account. And for some special cases, it will be different with intuition.\n\nSee Also\neco_gain_threshold(1)\n\n525"
            },
            {
                "doc_id": "_xtop_handbook_0407",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_fanout_gain --There is no fanout gain for current solution.\n\nDescription\nThere is no fanout gain for current solution. When after inserting buffer tree to split net, the new max\nfanout in the buffer tree is not getting smaller.\n\n526"
            },
            {
                "doc_id": "_xtop_handbook_0408",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_hold_margin --No hold margin at current pin.\n\nDescription\nNo hold margin on current pin. This is reported in fixing setup. Once the hold slack is non-positive of\nany scenario, this reason will be marked and the pin is skipped. It can be relaxed by specifying a negative\nhold margin.\n\nSee Also\neco_hold_slack_margin(1)\n\n527"
            },
            {
                "doc_id": "_xtop_handbook_0409",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_hold_total_gain --There is no hold gain in total for current solution.\n\nDescription\nThere is no hold gain in total for current solution. Sometimes, there exists on path gain, but the hold\nviolations get worse. A total gain on local graph will be calculated to judge if the design can benefit from\ncurrent solution as a total.\n\n528"
            },
            {
                "doc_id": "_xtop_handbook_0410",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_dynamic_power_gain --There is no dynamic power gain for current solution.\n\nDescription\nWhen optimize dynamic power, there's no gain after sizing cell.\n\n529"
            },
            {
                "doc_id": "_xtop_handbook_0411",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_setup_gain --There is no setup gain for current solution.\n\nDescription\nThere is no setup gain for current solution. Several stages will be evaluated, the change of wire, SI are also\ntaken into account. And for some special cases, it will be different with intuition.\n\nSee Also\neco_gain_threshold(1)\n\n530"
            },
            {
                "doc_id": "_xtop_handbook_0412",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_setup_margin --No setup margin at current pin.\n\nDescription\nNo setup margin on current pin. This is reported in fixing hold. Once the setup slack is non-positive of\nany scenario, this reason will be marked and the pin is skipped. It can be relaxed by specifying a negative\nsetup margin.\n\nSee Also\neco_setup_slack_margin(1)\n\n531"
            },
            {
                "doc_id": "_xtop_handbook_0413",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_setup_total_gain --There is no setup gain in total for current solution.\n\nDescription\nThere is no setup gain in total for current solution. Sometimes, there exists on path gain, but the setup\nviolations get worse. A total gain on local graph will be calculated to judge if the design can benefit from\ncurrent solution as a total.\n\n532"
            },
            {
                "doc_id": "_xtop_handbook_0414",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_spare_or_ga_cell_found --There is no available spare or GA cell for postmask eco.\n\nDescription\nIn postmask eco, tool can not find any valid spare cell or GA cell as candidate to fix violations.\n\nSee Also\neco_post_mask_mode(1)\n\n533"
            },
            {
                "doc_id": "_xtop_handbook_0415",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_transition_gain --There is no transition gain for current solution.\n\nDescription\nThere is no transition gain for current solution. The change of wire, SI are also taken into account. And\nfor some special cases, it will be different with intuition.\n\nSee Also\neco_gain_threshold(1)\n\n534"
            },
            {
                "doc_id": "_xtop_handbook_0416",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_transition_total_gain --There is no transition gain in total for current solution.\n\nDescription\nThere is no transition gain in total for current solution. There exists gain for current net or pin, but the\ntransition of the driver perhaps gets worst. A total gain will be calculated to judge if the design can benefit\nfrom current solution as a total.\n\n535"
            },
            {
                "doc_id": "_xtop_handbook_0417",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_physical_pin --The physical instance of pin does not exist.\n\nDescription\nThe physical instance of pin does not exist. This happens while the cell is missing in LEF file, or the pin\nis missing on the LEF cell.\n\n536"
            },
            {
                "doc_id": "_xtop_handbook_0418",
                "summary": "",
                "content": "Fail Reasons\n\nName\nnot_buffer_chain --There is no buffer chain available at current pin.\n\nDescription\nThere is not buffer chain available at current pin. This reason is marked in removing buffer process while\nthe cell is not a buffer or does not form an inverter pair with the cell after it.\n\n537"
            },
            {
                "doc_id": "_xtop_handbook_0419",
                "summary": "",
                "content": "Fail Reasons\n\nName\nnot_core_cell --The cell is not a core cell type.\n\nDescription\nThe cell is not a core cell type, not supported for sizing. It may be defined as block or pad.\n\n538"
            },
            {
                "doc_id": "_xtop_handbook_0420",
                "summary": "",
                "content": "Fail Reasons\n\nName\nnot_parallel_mib --The instances of MIB are not in parallel relationship.\n\nDescription\nThe instances of multiple instantiated block are not in parallel relationship in design. That is to say some\nMIB instances drive instances with the same block. Such MIBs are skipped since the slack change cannot\nbe evaluated correctly.\n\n539"
            },
            {
                "doc_id": "_xtop_handbook_0421",
                "summary": "",
                "content": "Fail Reasons\n\nName\nplace_not_ready --Placement is not ready at given design.\n\nDescription\nThe placement is not ready to find any legal place at given design. You can use command\ncheck_placement_readiness to check why.\n\nSee Also\ncheck_placement_readiness(1)\n\n540"
            },
            {
                "doc_id": "_xtop_handbook_0422",
                "summary": "",
                "content": "Fail Reasons\n\nName\nport_net --Current pin is design port, or fanin driver is port.\n\nDescription\nCurrent pin is design port, or fanin driver is port. Port is special, and is skipped in optimization process.\n\n541"
            },
            {
                "doc_id": "_xtop_handbook_0423",
                "summary": "",
                "content": "Fail Reasons\n\nName\npower_domain_conflict --There's conflict of power domain between driver and load in eco.\n\nDescription\nDuring eco process, there's power domain conflict between driver pin and load pin, usually caused by\nspecial cell like isolation cell or switch cell.\n\nSee Also\nreport_power_domain(1)\n\n542"
            },
            {
                "doc_id": "_xtop_handbook_0424",
                "summary": "",
                "content": "Fail Reasons\n\nName\npower_intent_cell --The cell of pin for eco action is defined as power intent cell in UPF.\n\nDescription\nDuring eco process, found cell is defined as power intent cell in UPF.\n\n543"
            },
            {
                "doc_id": "_xtop_handbook_0425",
                "summary": "",
                "content": "Fail Reasons\n\nName\nsequential_cell --Current cell is a sequential cell.\n\nDescription\nCurrent cell is a sequential cell. Such cells will be skipped if only data paths are allowed to touch.\n\n544"
            },
            {
                "doc_id": "_xtop_handbook_0426",
                "summary": "",
                "content": "Fail Reasons\n\nName\nsi_critical_net --Current net has large si, so don't size the driver.\n\nDescription\nWhen fix hold or optimize power, it's not suitable to weaken the net driver if this net has large si, so don't\ndo size action for net driver.\n\nSee Also\neco_si_critical_net_rank_ratio(1)\n\n545"
            },
            {
                "doc_id": "_xtop_handbook_0427",
                "summary": "",
                "content": "Fail Reasons\n\nName\nspecial_power_domain --The power domain is a special power domain that can not insert buffer.\n\nDescription\nWhen insert buffer or split net, the target power domain to insert is a special power domain, defined in\nUPF, such as always on. So not allow to insert.\n\nSee Also\npower_domain_conflict(1)\n\n546"
            },
            {
                "doc_id": "_xtop_handbook_0428",
                "summary": "",
                "content": "Fail Reasons\n\nName\ntoo_far_buffer --Buffer position is too far away from reference pin.\n\nDescription\nWhen fix hold violation by inserting buffer chain, buffer position is too far away from reference pin, it\nshould be skipped.\n\n547"
            },
            {
                "doc_id": "_xtop_handbook_0429",
                "summary": "",
                "content": "Fail Reasons\n\nName\ntoo_weak_drive_strength --Candidate cell's drive strength is too weak, compared to original cell.\n\nDescription\nWhen size down cell, drive strength decreases too much compared to original cell, larger than the threshold,\nmay cause inaccurate evaluation result.\n\nFor insert buffer, new buffer's drive strength decreases too much compared to its driver IP cell, may cause\nunreasonable evaluation result.\n\nSee Also\neco_size_cell_drive_strength_weaken_ratio(1)\n\n548"
            },
            {
                "doc_id": "_xtop_handbook_0430",
                "summary": "",
                "content": "Fail Reasons\n\nName\ntoo_large_slack --Size cell methods can only fix violation points with small absolute slack.\n\nDescription\nWhen size cell, using absolute threshold and relative threshold to restrict slack.\n\n549"
            },
            {
                "doc_id": "_xtop_handbook_0431",
                "summary": "",
                "content": "Fail Reasons\n\nName\nunable_fix_by_dummy_cell --Hold slack can not be fixed by adding dummy cell.\n\nDescription\nHold slack can not be fixed by adding a dummy cell, suggest using other methods to fix the violation.\n\n550"
            },
            {
                "doc_id": "_xtop_handbook_0432",
                "summary": "",
                "content": "Fail Reasons\n\nName\nunconstrained_cell --The cell does not have constraint, can not be optimized.\n\nDescription\nWhen optimize leakage power or design area, if current cell's reference pin is unconstrained, XTop will\nskip optimization. This behavior is determined by parameter eco_skip_unconstrained_cell_rule(1).\n\nSee Also\neco_skip_unconstrained_cell_rule(1)\n\n551"
            },
            {
                "doc_id": "_xtop_handbook_0433",
                "summary": "",
                "content": "Fail Reasons\n\nName\nused_as_clock --Current pin is used as clock.\n\nDescription\nCurrent pin is used as clock, or cell input pin is used as clock when sizing, such case is skipped in\noptimization process if only data path is allowed to touch. This status is read from the annotated timing\ndata dumped from third party STA tools.\n\n552"
            },
            {
                "doc_id": "_xtop_handbook_0434",
                "summary": "",
                "content": "Fail Reasons\n\nName\noff_path_violated_pin --Current pin's off path pin has setup violation.\n\nDescription\nWhen using sizing down method to optimize setup timing, XTop will only size down off path cells that\ndo not have setup violation.\n\n553"
            },
            {
                "doc_id": "_xtop_handbook_0435",
                "summary": "",
                "content": "Fail Reasons\n\nName\nwrong_direction_net --Current net has wrong direction logical pin.\n\nDescription\nCurrent net traces some modules, and one or more logical pin's direction is wrong, so tool can't get right\nfanin or fanout result by direction.\n\n554"
            },
            {
                "doc_id": "_xtop_handbook_0436",
                "summary": "",
                "content": "Fail Reasons\n\nName\nillegal_net_to_split --Current net is illegal to split.\n\nDescription\nDetail route structure of current net is illegal for split net action.\n\n555"
            },
            {
                "doc_id": "_xtop_handbook_0437",
                "summary": "",
                "content": "Fail Reasons\n\nName\nillegal_length_threshold --Wire length threshold is set too large to split net.\n\nDescription\nWhen split net, minimum wire length threshold is too large, compared to original length, even 1 buffer is\nnot allowed to be inserted. The threshold should be adjusted smaller.\n\n556"
            },
            {
                "doc_id": "_xtop_handbook_0438",
                "summary": "",
                "content": "Fail Reasons\n\nName\ndangling_pin_on_net --Current pin's connected net has dangling pin.\n\nDescription\nThe net of current pin has a connection to dangling or unknown pin, usually caused by illegal netlist.\n\n557"
            },
            {
                "doc_id": "_xtop_handbook_0439",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_annotated_data_net --Current net has no annotated data.\n\nDescription\nThe net of current pin has no annotated data, which means there's no wire cap data, or wire cap is too small\non any scenario, so skip auto eco for this pin.\n\n558"
            },
            {
                "doc_id": "_xtop_handbook_0440",
                "summary": "",
                "content": "Fail Reasons\n\nName\nno_annotated_data_mib_net --Current pin is MIB pin, the net on other block has no annotated data.\n\nDescription\nThe mib net of current pin has no annotated data, which means there's no wire cap data, or wire cap is too\nsmall on any scenario, so skip auto eco for this pin.\n\n559"
            },
            {
                "doc_id": "_xtop_handbook_0441",
                "summary": "",
                "content": "Fail Reasons\n\nName\nnode_not_on_route --When split net, some special nodes can not insert buffer.\n\nDescription\nWhen doing split net, some special nodes is illegal to insert buffer, like source node, hierarchy boundary\nnode, or steiner point, etc.\n\n560"
            },
            {
                "doc_id": "_xtop_handbook_0442",
                "summary": "",
                "content": "Fail Reasons\n\nName\nnode_drives_multi_module --When split net, some nodes drive pins belong to different logical module.\n\nDescription\nWhen doing split net, some nodes drive pins belong to different logical module, generating atomic eco\ncommands, which will be skipped."
            }
        ]
    },
    {
        "source": "_xtop_append",
        "amount": 1,
        "knowledge": [
            {
                "doc_id": "_xtop_append_0001",
                "summary": "",
                "content": "Xtop工具的优化模式特点\n1. Turbo Mode：\n1) 优化导入数据规模，加速数据导入；\n2) 拿取的数据与Normal Mode不同，会有一定的精度损失；\n3) 提升优化速度，减少内存损耗。\n\n2. Pro Mode：\n1) 减少了大型设计的内存损耗；\n2) 在使用read_timing_data命令拿取数据时，如果使用了-memory_saving_mode选项，则相当于切换到了Pro Mode；\n3) Pro Mode拿取的数据与Turbo Mode完全一样，都与Normal Mode不同，会有一定的精度损失；\n4) 与Turbo Mode不同的是，两者在内存上的损耗有所不同。"
            }
        ]
    }
]